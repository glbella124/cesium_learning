{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "Source/Core/ArrowGeometry.js",
    "Source/Core/BasicGeometry.js",
    "Source/Core/BasicMeshMaterial.js",
    "Source/Core/FramebufferTexture.js",
    "Source/Core/GeometryUtils.js",
    "Source/Core/LOD.js",
    "Source/Core/MaterialUtils.js",
    "Source/Core/Mesh.js",
    "Source/Core/MeshMaterial.js",
    "Source/Core/MeshPhongMaterial.js",
    "Source/Core/MeshUtils.js",
    "Source/Core/MeshVisualizer.js",
    "Source/Core/PlaneBufferGeometry.js",
    "Source/Core/PlaneGeometry.js",
    "Source/Core/ReferenceMesh.js",
    "Source/Core/RendererUtils.js",
    "Source/Core/Rotation.js",
    "Source/Core/ShaderUtils.js",
    "Source/Core/Shaders/ShaderChunk.js",
    "Source/Core/Shaders/ShaderLib.js",
    "Source/Core/Shaders/none_frag.js",
    "Source/Core/Shaders/none_vert.js",
    "Source/Core/Shaders/normals_frag.js",
    "Source/Core/Shaders/normals_vert.js",
    "Source/Core/Shaders/phong_frag.js",
    "Source/Core/Shaders/phong_vert.js",
    "Source/Core/Shaders/texture_frag.js",
    "Source/Core/Shaders/texture_normals_frag.js",
    "Source/Core/Shaders/texture_normals_vert.js",
    "Source/Core/Shaders/texture_vert.js",
    "Source/Main.js",
    "Source/ThirdParty/csg/csg.js",
    "Source/ThirdParty/tiff-js/tiff.js",
    "Source/Util/CSG.js",
    "Source/Util/Path.js",
    "Source/Util/defineProperty.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "﻿ \r\nimport GeometryUtils from './GeometryUtils.js'\r\n/**\r\n*\r\n  <pre><code>  \r\n          +            ——\r\n        +   +           |\r\n      +       +     headLength\r\n    +           +       |\r\n  ++++headWidth++++   ——\r\n        +  +            |\r\n        +  +            |\r\n        +  +            |\r\n        +  +          length\r\n        +  +            |\r\n        +  +            |\r\n        +  +            |\r\n        ++++           ——\r\n        width\r\n\r\n    </code> </pre>\r\n*@param {Object}[options] \r\n*@param {Number}[options.length=50000]   \r\n*@param {Number}[options.width=250]   \r\n*@param {Number}[options.headLength=5000]   \r\n*@param {Number}[options.headWidth=1000]    \r\n*@param {Boolean}[options.reverse=false]   \r\n* \r\n*@property {Number}length   \r\n*@property {Number}width   \r\n*@property {Number}headLength   \r\n*@property {Number}headWidth   \r\n*@property {Boolean}reverse  \r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction ArrowGeometry(options) {\r\n    options = Cesium.defaultValue(options, {});\r\n    this.length = Cesium.defaultValue(options.length, 50000);\r\n    this.width = Cesium.defaultValue(options.width, 125);\r\n    this.headLength = Cesium.defaultValue(options.headLength, 5000);\r\n    this.headWidth = Cesium.defaultValue(options.headWidth, 1000);\r\n    this.reverse = Cesium.defaultValue(options.reverse, false);\r\n}\r\n\r\n/**\r\n*\r\n*@param {Cesium.ArrowGeometry}\r\n*@return {Cesium.Geometry}\r\n*/\r\nArrowGeometry.createGeometry = function (arrowGeometry) {\r\n    var length = arrowGeometry.length;\r\n    var width = arrowGeometry.width;\r\n    var headLength = arrowGeometry.headLength;\r\n    var headWidth = arrowGeometry.headWidth;\r\n    var reverse = arrowGeometry.reverse;\r\n\r\n    var line = Cesium.CylinderGeometry.createGeometry(new Cesium.CylinderGeometry({\r\n        length: length,\r\n        topRadius: width,\r\n        bottomRadius: width,\r\n    }));\r\n    var arrow;\r\n    if (reverse) {\r\n        arrow = Cesium.CylinderGeometry.createGeometry(new Cesium.CylinderGeometry({\r\n            length: headLength,\r\n            topRadius: headWidth,\r\n            bottomRadius: 0,\r\n        }));\r\n        GeometryUtils.translate(arrow, [0, 0, -(length + headLength) / 2]);\r\n    } else {\r\n        arrow = Cesium.CylinderGeometry.createGeometry(new Cesium.CylinderGeometry({\r\n            length: headLength,\r\n            topRadius: 0,\r\n            bottomRadius: headWidth,\r\n        }));\r\n        GeometryUtils.translate(arrow, [0, 0, (length + headLength) / 2]);\r\n    }\r\n\r\n    var lineWithArrow = GeometryUtils.mergeGeometries([line, arrow]);\r\n\r\n    return lineWithArrow;\r\n}\r\nexport default ArrowGeometry;",
    "﻿ \r\n/**\r\n*\r\n*@param {Object}options\r\n*@param {Array<Number>|Float32Array}options.positions\r\n*@param {Array<Number>|Int32Array}options.indices\r\n*@param {Array<Number>|Float32Array}[options.normals]\r\n*@param {Array<Number>|Float32Array}[options.uvs]\r\n*\r\n*@memberof Cesium\r\n*@constructor\r\n*/\r\nfunction BasicGeometry(options) {\r\n    this.positions = options.positions;\r\n    this.normals = options.normals;\r\n    this.uvs = options.uvs;\r\n    this.indices = options.indices;\r\n}\r\n/**\r\n*\r\n*@param {Cesium.BasicGeometry}basicGeometry\r\n*@return {Cesiumm.Geometry} \r\n*/\r\nBasicGeometry.createGeometry = function (basicGeometry) {\r\n    if (!basicGeometry.positions) {\r\n        throw new Error(\"缺少positions参数\");\r\n    }\r\n    if (!basicGeometry.indices) {\r\n        throw new Error(\"缺少indices参数\");\r\n    }\r\n    var positions = basicGeometry.positions;\r\n    var normals = basicGeometry.normals;\r\n    var uvs = basicGeometry.uvs;\r\n    var indices = basicGeometry.indices instanceof Int32Array ? basicGeometry.indices : new Int32Array(basicGeometry.indices);\r\n\r\n    var attributes = {\r\n        position: new Cesium.GeometryAttribute({\r\n            componentDatatype: Cesium.ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute: 3,\r\n            values: positions instanceof Float32Array ? positions : new Float32Array(basicGeometry.positions)\r\n        })\r\n    };\r\n    if (normals) {\r\n        attributes.normal = new Cesium.GeometryAttribute({\r\n            componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n            componentsPerAttribute: 3,\r\n            values: normals instanceof Float32Array ? normals : new Float32Array(normals)\r\n        })\r\n    }\r\n    if (uvs) {\r\n        attributes.uv = new Cesium.GeometryAttribute({\r\n            componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n            componentsPerAttribute: 2,\r\n            values: uvs instanceof Float32Array ? uvs : new Float32Array(uvs)\r\n        })\r\n    }\r\n\r\n\r\n    var bs = Cesium.BoundingSphere.fromVertices(positions);\r\n    var geo = new Cesium.Geometry({\r\n        attributes: attributes,\r\n        indices: new Int32Array(indices),\r\n        primitiveType: Cesium.PrimitiveType.TRIANGLES,\r\n        boundingSphere: bs\r\n    });\r\n    return geo;\r\n}\r\nexport default BasicGeometry;",
    "﻿\r\nimport MeshMaterial from './MeshMaterial.js';\r\nimport ShaderChunk from './Shaders/ShaderChunk.js';\r\nimport Path from '../Util/Path.js';\r\n\r\nfunction BasicMeshMaterial(options) {\r\n    options = options ? options : {};\r\n\r\n    options.uniforms = options.uniforms ? options.uniforms : {\r\n        ambientColor: [0, 0, 0, 1.0],               // Ka\r\n        emissionColor: [0, 0, 0, 1.0],              // Ke\r\n        diffuseColor: [0, 0, 0, 1.0],               // Kd\r\n        specularColor: [0, 0, 0, 1.0],              // Ks\r\n        specularShininess: 0,          // Ns\r\n        alpha: undefined,                      // d / Tr\r\n        ambientColorMap: undefined,            // map_Ka\r\n        emissionColorMap: undefined,           // map_Ke\r\n        diffuseColorMap: undefined,            // map_Kd\r\n        specularColorMap: undefined,           // map_Ks\r\n        specularShininessMap: undefined,       // map_Ns\r\n        normalMap: undefined,                  // map_Bump\r\n        alphaMap: undefined                    // map_d\r\n    };\r\n    options.uniforms.ambientColor = Cesium.defaultValue(options.uniforms.ambientColor, [0, 0, 0, 1.0]);\r\n    options.uniforms.emissionColor = Cesium.defaultValue(options.uniforms.emissionColor, [0, 0, 0, 1.0]);\r\n    options.uniforms.diffuseColor = Cesium.defaultValue(options.uniforms.diffuseColor, [0, 0, 0, 1.0]);\r\n    options.uniforms.specularColor = Cesium.defaultValue(options.uniforms.specularColor, [0, 0, 0, 1.0]);\r\n    options.uniforms.alpha = Cesium.defaultValue(options.uniforms.alpha, 1);\r\n    options.uniforms.specularShininess = Cesium.defaultValue(options.uniforms.specularShininess, 0);\r\n    options.side = Cesium.defaultValue(options.side, MeshMaterial.Sides.FRONT)\r\n\r\n    MeshMaterial.apply(this, [options]);\r\n    this.blendEnable = false;\r\n    var withTexture = options.withTexture;\r\n    var withNormals = options.withNormals;\r\n    this.depthTest = true;\r\n    this.depthMask = true;\r\n    this.blending = true;\r\n    if (options.uniforms.diffuseColorMap) {//&& options.uniforms.diffuseColorMap.toLowerCase().indexOf(\".png\")) {\r\n\r\n        if (typeof options.uniforms.diffuseColorMap === 'string') {\r\n            var diffuseColorMap = options.uniforms.diffuseColorMap.toLowerCase();\r\n            var extension = Path.GetExtension(diffuseColorMap);\r\n            if (extension == \".tif\" || extension == \".png\") {\r\n                this.translucent = true;\r\n            } else if (diffuseColorMap.slice(0, \"data:image/png\".length) === \"data:image/png\") {\r\n                this.translucent = true;\r\n            } else if (diffuseColorMap.slice(0, \"data:image/tif\".length) === \"data:image/tif\") {\r\n                this.translucent = true;\r\n            }\r\n        } else if (diffuseColorMap instanceof HTMLCanvasElement\r\n            || diffuseColorMap instanceof HTMLVideoElement\r\n        ) {\r\n            this.translucent = true;\r\n        }\r\n        withTexture = true;\r\n        if (!Cesium.defined(this.uniforms.diffuseColorMap.flipY)) {\r\n            this.uniforms.diffuseColorMap.flipY = false;\r\n        }\r\n\r\n        if (!this.uniforms.diffuseColorMap.sampler) {\r\n            var sampler = {};\r\n\r\n            sampler.magnificationFilter = Cesium.WebGLConstants.LINEAR;\r\n            sampler.minificationFilter = Cesium.WebGLConstants.NEAREST_MIPMAP_LINEAR;\r\n            sampler.wrapS = Cesium.WebGLConstants.REPEAT;\r\n            sampler.wrapT = Cesium.WebGLConstants.REPEAT;\r\n            this.uniforms.diffuseColorMap.sampler = sampler;\r\n        }\r\n\r\n    } else {\r\n        withTexture = false;\r\n    }\r\n\r\n    var vertexShaderUri = null;// \"texture_normals.vert\"; \r\n    var fragmentShaderUri = null;  //\"texture_normals.frag\";\r\n    if (withTexture && withNormals) {\r\n        vertexShaderUri = ShaderChunk.texture_normals_vert;// \"texture_normals.vert\"; \r\n        fragmentShaderUri = ShaderChunk.texture_normals_frag;  //\"texture_normals.frag\";\r\n    } else if (withTexture && !withNormals) {\r\n        vertexShaderUri = ShaderChunk.texture_vert;//\"texture.vert\";\r\n        fragmentShaderUri = ShaderChunk.texture_frag;// \"texture.frag\";\r\n    } else if (!withTexture && withNormals) {\r\n        vertexShaderUri = ShaderChunk.normals_vert;// \"normals.vert\";\r\n        fragmentShaderUri = ShaderChunk.normals_frag;//\"normals.frag\";\r\n    }\r\n    else {\r\n        vertexShaderUri = ShaderChunk.none_vert;// \"none.vert\";\r\n        fragmentShaderUri = ShaderChunk.none_frag;// \"none.frag\";\r\n    }\r\n    this.vertexShader = vertexShaderUri;\r\n    this.fragmentShader = fragmentShaderUri;\r\n\r\n}\r\nBasicMeshMaterial.prototype = Object.create(MeshMaterial.prototype);\r\nexport default BasicMeshMaterial;\r\n",
    "﻿\r\n/**\r\n*帧缓存纹理类，可以将一个mesh渲染到帧缓存并作为纹理提供给其他mesh。<br/>\r\n*需要配合{@link Cesium.MeshVisualizer}、{@link Cesium.Mesh}、{@link Cesium.MeshMaterial}使用。\r\n*@param {Cesium.Mesh}mesh \r\n*\r\n*@property {Cesium.Mesh}mesh \r\n*@property {Cesium.Texture}texture \r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*@example\r\n \r\n    MeshVisualizer = Cesium.MeshVisualizer;\r\n    Mesh = Cesium.Mesh;\r\n    MeshMaterial = Cesium.MeshMaterial; \r\n    FramebufferTexture = Cesium.FramebufferTexture; \r\n    Shaders = VolumeRendering.Shaders; \r\n\r\n    var center2 = Cesium.Cartesian3.fromDegrees(homePosition[0]+3.5, homePosition[1] , 50000);\r\n    var modelMatrix2 = Cesium.Transforms.eastNorthUpToFixedFrame(center2);\r\n\r\n    var meshVisualizer = new MeshVisualizer({\r\n        modelMatrix: modelMatrix2,\r\n        up: { y: 1 },\r\n        scale: new Cesium.Cartesian3(2,2,2)\r\n    });\r\n    viewer.scene.primitives.add(meshVisualizer);\r\n\r\n    var guiControls = new function () {\r\n        this.model = 'bonsai';\r\n        this.steps = 256.0;\r\n        this.alphaCorrection = 1.0;\r\n        this.color1 = \"#00FA58\";\r\n        this.stepPos1 = 0.1;\r\n        this.color2 = \"#CC6600\";\r\n        this.stepPos2 = 0.7;\r\n        this.color3 = \"#F2F200\";\r\n        this.stepPos3 = 1.0;\r\n    };\r\n    function updateTransferFunction() {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.height = 20;\r\n        canvas.width = 256;\r\n\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var grd = ctx.createLinearGradient(0, 0, canvas.width - 1, canvas.height - 1);\r\n        grd.addColorStop(guiControls.stepPos1, guiControls.color1);\r\n        grd.addColorStop(guiControls.stepPos2, guiControls.color2);\r\n        grd.addColorStop(guiControls.stepPos3, guiControls.color3);\r\n\r\n        ctx.fillStyle = grd;\r\n        ctx.fillRect(0, 0, canvas.width - 1, canvas.height - 1);\r\n\r\n        return canvas;\r\n    }\r\n\r\n    var dimensions = new Cesium.Cartesian3(50000, 50000, 50000);\r\n    var boxGeometry = Cesium.BoxGeometry.createGeometry(Cesium.BoxGeometry.fromDimensions({\r\n        dimensions: dimensions,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY\r\n    }));\r\n\r\n    var materialFirstPass = new MeshMaterial({\r\n        vertexShader: Shaders.vertexShaderFirstPass,\r\n        fragmentShader: Shaders.fragmentShaderFirstPass,\r\n        side: MeshMaterial.Sides.BACK,\r\n        uniforms: {\r\n            dimensions: dimensions\r\n        }\r\n    });\r\n    var meshFirstPass = new Mesh(boxGeometry, materialFirstPass);\r\n    var rtTexture = new FramebufferTexture(meshFirstPass);//这里使用FramebufferTexture\r\n    var transferTexture = updateTransferFunction();\r\n    var materialSecondPass = new MeshMaterial({\r\n        vertexShader: Shaders.vertexShaderSecondPass,\r\n        fragmentShader: Shaders.fragmentShaderSecondPass,\r\n        side: MeshMaterial.Sides.FRONT,\r\n        uniforms: {\r\n            alpha: 1,\r\n            dimensions: dimensions,\r\n            tex: rtTexture,\r\n            cubeTex: \"./teapot.raw.png\",\r\n            transferTex: transferTexture,\r\n            steps: guiControls.steps,\r\n            alphaCorrection: guiControls.alphaCorrection\r\n        }\r\n    });\r\n\r\n    var meshSecondPass = new Mesh(boxGeometry, materialSecondPass);\r\n    meshVisualizer.add(meshSecondPass);\r\n*/\r\nfunction FramebufferTexture(mesh, renderTarget, depthTexture) {\r\n    this.mesh = mesh;\r\n\r\n    this.texture = renderTarget;\r\n    this.depthTexture = depthTexture;\r\n    this.framebuffer = null;\r\n    this.ready = false;\r\n    this.readyPromise = Cesium.when.defer();\r\n    if (renderTarget && renderTarget instanceof Cesium.Framebuffer) {\r\n        this.framebuffer = renderTarget;\r\n        this.texture = this.framebuffer._colorTextures[0];\r\n        this.depthTexture = this.framebuffer._depthTexture;\r\n        this.ready = true;\r\n        this.readyPromise.resolve(true);\r\n\r\n    } else {\r\n        this.destroyAttachments = true;\r\n    }\r\n}\r\n/**\r\n * \r\n */\r\nFramebufferTexture.prototype.destroy = function () {\r\n    if (this.destroyAttachments) {\r\n        if (this.texture) {\r\n            this.texture.destroy();\r\n            delete this.texture;\r\n        }\r\n        if (this.depthTexture) {\r\n            this.depthTexture.destroy();\r\n            delete this.depthTexture;\r\n        }\r\n\r\n        if (this.framebuffer) {\r\n            this.framebuffer.destroy();\r\n            delete this.framebuffer;\r\n        }\r\n\r\n        if (this.mesh) {\r\n            this.mesh.destroy();\r\n            delete this.mesh;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default FramebufferTexture;",
    "﻿\r\nimport CSG from '../Util/CSG.js'\r\n/**\r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction GeometryUtils() {\r\n\r\n}\r\n\r\nfunction getAttrs(geo) {\r\n    var attrNames = [];\r\n\r\n    for (var name in geo.attributes) {\r\n        if (geo.attributes.hasOwnProperty(name) && geo.attributes[name]) {\r\n            attrNames.push(name);\r\n        }\r\n    }\r\n    return attrNames\r\n}\r\n\r\nvar scratchPosition;//= new Cesium.Cartesian3();\r\nvar scratchMatrix4;//= new Cesium.Matrix4();\r\nvar scratchRotation;//= new Cesium.Matrix3();\r\nvar scratchOffset;//= new Cesium.Cartesian3();\r\n\r\nvar constantsHasInit = false;\r\nfunction initConstants() {\r\n    if (constantsHasInit) return;\r\n    constantsHasInit = true;\r\n\r\n    scratchPosition = new Cesium.Cartesian3();\r\n    scratchMatrix4 = new Cesium.Matrix4();\r\n    scratchRotation = new Cesium.Matrix3();\r\n    scratchOffset = new Cesium.Cartesian3();\r\n\r\n}\r\n/**\r\n*绕x轴旋转，修改顶点坐标\r\n*@param {Cesium.Geometry}geometry\r\n*@param {Number}angle 弧度\r\n*/\r\nGeometryUtils.rotateX = function (geometry, angle) {\r\n    initConstants();\r\n\r\n    var positions = geometry.attributes.position.values;\r\n\r\n    Cesium.Matrix3.fromRotationX(angle, scratchRotation);\r\n    Cesium.Matrix4.fromRotationTranslation(scratchRotation, Cesium.Cartesian3.ZERO, scratchMatrix4);\r\n\r\n    for (var i = 0; i < positions.length; i += 3) {\r\n        scratchPosition.x = positions[i];\r\n        scratchPosition.y = positions[i + 1];\r\n        scratchPosition.z = positions[i + 2];\r\n        Cesium.Matrix4.multiplyByPoint(scratchMatrix4, scratchPosition, scratchPosition);\r\n        positions[i] = scratchPosition.x;\r\n        positions[i + 1] = scratchPosition.y;\r\n        positions[i + 2] = scratchPosition.z;\r\n    }\r\n\r\n}\r\n/**\r\n*绕y轴旋转，修改顶点坐标\r\n*@param {Cesium.Geometry}geometry\r\n*@param {Number}angle 弧度\r\n*/\r\nGeometryUtils.rotateY = function (geometry, angle) {\r\n    initConstants();\r\n\r\n    var positions = geometry.attributes.position.values;\r\n\r\n    Cesium.Matrix3.fromRotationY(angle, scratchRotation);\r\n    Cesium.Matrix4.fromRotationTranslation(scratchRotation, Cesium.Cartesian3.ZERO, scratchMatrix4);\r\n\r\n    for (var i = 0; i < positions.length; i += 3) {\r\n        scratchPosition.x = positions[i];\r\n        scratchPosition.y = positions[i + 1];\r\n        scratchPosition.z = positions[i + 2];\r\n        Cesium.Matrix4.multiplyByPoint(scratchMatrix4, scratchPosition, scratchPosition);\r\n        positions[i] = scratchPosition.x;\r\n        positions[i + 1] = scratchPosition.y;\r\n        positions[i + 2] = scratchPosition.z;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n*绕z轴旋转，修改顶点坐标\r\n*@param {Cesium.Geometry}geometry\r\n*@param {Number}angle 弧度\r\n*/\r\nGeometryUtils.rotateZ = function (geometry, angle) {\r\n    initConstants();\r\n\r\n    var positions = geometry.attributes.position.values;\r\n\r\n    Cesium.Matrix3.fromRotationZ(angle, scratchRotation);\r\n    Cesium.Matrix4.fromRotationTranslation(scratchRotation, Cesium.Cartesian3.ZERO, scratchMatrix4);\r\n\r\n    for (var i = 0; i < positions.length; i += 3) {\r\n        scratchPosition.x = positions[i];\r\n        scratchPosition.y = positions[i + 1];\r\n        scratchPosition.z = positions[i + 2];\r\n        Cesium.Matrix4.multiplyByPoint(scratchMatrix4, scratchPosition, scratchPosition);\r\n        positions[i] = scratchPosition.x;\r\n        positions[i + 1] = scratchPosition.y;\r\n        positions[i + 2] = scratchPosition.z;\r\n    }\r\n\r\n}\r\n/**\r\n*\r\n*@param {Cesium.Geometry}geometry\r\n*/\r\nGeometryUtils.computeVertexNormals = function (geometry) {\r\n\r\n    var indices = geometry.indices;\r\n    var attributes = geometry.attributes;\r\n    var il = indices.length;\r\n    if (attributes.position) {\r\n\r\n        var positions = attributes.position.values;\r\n\r\n        if (attributes.normal === undefined) {\r\n            attributes.normal = new Cesium.GeometryAttribute({\r\n                componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n                componentsPerAttribute: 3,\r\n                values: new Float32Array(positions.length)\r\n            })\r\n\r\n        } else {\r\n\r\n            // reset existing normals to zero\r\n\r\n            var array = attributes.normal.values;\r\n\r\n            for (var i = 0; i < il; i++) {\r\n\r\n                array[i] = 0;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var normals = attributes.normal.values;\r\n\r\n        var vA, vB, vC;\r\n\r\n        var pA = new Cesium.Cartesian3(), pB = new Cesium.Cartesian3(), pC = new Cesium.Cartesian3();\r\n        var cb = new Cesium.Cartesian3(), ab = new Cesium.Cartesian3();\r\n\r\n        for (var i = 0; i < il; i += 3) {\r\n\r\n            vA = indices[i + 0] * 3;\r\n            vB = indices[i + 1] * 3;\r\n            vC = indices[i + 2] * 3;\r\n\r\n            Cesium.Cartesian3.fromArray(positions, vA, pA);\r\n            Cesium.Cartesian3.fromArray(positions, vB, pB);\r\n            Cesium.Cartesian3.fromArray(positions, vC, pC);\r\n\r\n            Cesium.Cartesian3.subtract(pC, pB, cb);\r\n            Cesium.Cartesian3.subtract(pA, pB, ab);\r\n            Cesium.Cartesian3.cross(cb, ab, cb);\r\n\r\n            normals[vA] += cb.x;\r\n            normals[vA + 1] += cb.y;\r\n            normals[vA + 2] += cb.z;\r\n\r\n            normals[vB] += cb.x;\r\n            normals[vB + 1] += cb.y;\r\n            normals[vB + 2] += cb.z;\r\n\r\n            normals[vC] += cb.x;\r\n            normals[vC + 1] += cb.y;\r\n            normals[vC + 2] += cb.z;\r\n\r\n        }\r\n\r\n        normalizeNormals(geometry);\r\n\r\n        attributes.normal.needsUpdate = true;\r\n\r\n    }\r\n\r\n    return geometry;\r\n}\r\nfunction normalizeNormals(geometry) {\r\n\r\n    var normals = geometry.attributes.normal.values;\r\n\r\n    var x, y, z, n;\r\n\r\n    for (var i = 0; i < normals.length; i += 3) {\r\n\r\n        x = normals[i];\r\n        y = normals[i + 1];\r\n        z = normals[i + 2];\r\n\r\n        n = 1.0 / Math.sqrt(x * x + y * y + z * z);\r\n\r\n        normals[i] = x * n;\r\n        normals[i + 1] = y * n;\r\n        normals[i + 2] = z * n;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n*合并两个或两个以上图形类型（primitiveType），属性数量、名称以及属性值的类型（GeometryAttribute的componentDatatype、componentsPerAttribute等）都一致的几何体\r\n*@param {Array<Cesium.Geometry>}geometries \r\n*@return {Cesium.Geometry}\r\n*/\r\nGeometryUtils.mergeGeometries = function (geometries) {\r\n    if (!geometries || !geometries.length) {\r\n        throw new Error(\"缺少geometries参数\");\r\n    }\r\n\r\n    if (geometries.length == 1) {\r\n        return geometries[0];\r\n    }\r\n    var geometriesAttrs = [];\r\n\r\n    var lengthChanged = false;\r\n    var primitiveTypeChanged = false;\r\n    var primitiveType = geometries[0].primitiveType;\r\n    for (var i = 0; i < geometries.length; i++) {\r\n\r\n        geometriesAttrs[i] = getAttrs(geometries[i]);\r\n        if (i > 0) {\r\n            if (primitiveType != geometries[i].primitiveType) {\r\n                primitiveTypeChanged = true;\r\n                break;\r\n            }\r\n            var lastGeoAttrs = geometriesAttrs[i - 1];\r\n            lengthChanged = lastGeoAttrs.length != geometriesAttrs[i].length;\r\n            if (!lengthChanged) {\r\n\r\n                for (var j = 0; j < lastGeoAttrs.length; j++) {\r\n                    if (lastGeoAttrs[j] != geometriesAttrs[i][j]) {\r\n                        lengthChanged = true;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        primitiveType = geometries[i].primitiveType;\r\n        if (lengthChanged || primitiveTypeChanged) {\r\n            break;\r\n        }\r\n    }\r\n    if (primitiveTypeChanged) {\r\n        throw new Error(\"待合并的几何体中primitiveType属性不完全一致\");\r\n    }\r\n    if (lengthChanged) {\r\n        throw new Error(\"待合并的几何体中属性数量和和名称不完全一致\");\r\n    }\r\n    return mergeGeometries(geometries);\r\n\r\n    var newAttrs = {};\r\n    var attrNames = geometriesAttrs[0];\r\n    for (var i = 0; i < attrNames.length; i++) {\r\n        var attrName = attrNames[i];\r\n        var geometry = geometries[0];\r\n        newAttrs[attrName] = {};\r\n        //newAttrs[attrName] = Cesium.clone(geometry.attributes[attrName]);\r\n        for (var n in geometry.attributes[attrName]) {\r\n            if (geometry.attributes[attrName].hasOwnProperty(n)) {\r\n                newAttrs[attrName][n] = geometry.attributes[attrName][n];\r\n            }\r\n        }\r\n        var values = Array.from(newAttrs[attrName].values);\r\n\r\n        for (var j = 1; j < geometries.length; j++) {\r\n            geometry = geometries[j];\r\n            for (var vi = 0; vi < geometry.attributes[attrName].values.length; vi++) {\r\n                values.push(geometry.attributes[attrName].values[vi]);\r\n            }\r\n        }\r\n\r\n        newAttrs[attrName].values = new newAttrs[attrName].values.constructor(values);\r\n    }\r\n    var indices = [];\r\n    var currIndex = 0;\r\n    for (var j = 0; j < geometries.length; j++) {\r\n        var geometry = geometries[0];\r\n        for (var i = 0; i < geometry.indices.length; i++) {\r\n            indices.push(geometry.indices[i] + currIndex);\r\n        }\r\n        currIndex += geometry.attributes.position.values.length / 3;\r\n    }\r\n\r\n    var bs = Cesium.BoundingSphere.fromVertices(newAttrs.position.values);\r\n    var geo = new Cesium.Geometry({\r\n        attributes: newAttrs,\r\n        indices: new Uint32Array(indices),\r\n        primitiveType: geometries[0].primitiveType,\r\n        boundingSphere: bs\r\n    });\r\n    return geo;\r\n}\r\n\r\nfunction mergeGeometries(geometries) {\r\n    if (geometries.length == 1) return geometries[0];\r\n    var attrNames = [];\r\n    var valueArrs = [];\r\n    var valueTypes = [];\r\n    var valueConstructors = [];\r\n    var valueComponents = [];\r\n    var valueNormalizes = [];\r\n    var valueOffsets = [];\r\n    var indices = [];\r\n    var primitiveType;\r\n    var indexOffst = 0;\r\n\r\n    var componentCounts = [];\r\n\r\n    var geometry = geometries[0];\r\n    primitiveType = geometry.primitiveType;\r\n    for (const attrName in geometry.attributes) {\r\n        if (geometry.attributes.hasOwnProperty(attrName) && geometry.attributes[attrName]) {\r\n            const attr = geometry.attributes[attrName];\r\n            attrNames.push(attrName);\r\n\r\n            // valueArrs.push([]);\r\n\r\n            valueComponents.push(attr.componentsPerAttribute);\r\n            valueTypes.push(attr.componentDatatype);\r\n            valueConstructors.push(attr.values.constructor);\r\n            valueNormalizes.push(attr.normalize);\r\n\r\n            componentCounts.push(0);\r\n            valueOffsets.push(0);\r\n        }\r\n    }\r\n    for (let i = 0; i < geometries.length; i++) {\r\n        const geometry = geometries[i];\r\n        for (let j = 0; j < attrNames.length; j++) {\r\n            const attrName = attrNames[j];\r\n            componentCounts[j] += geometry.attributes[attrName].values.length\r\n        }\r\n    }\r\n\r\n    for (let j = 0; j < attrNames.length; j++) {\r\n        valueArrs.push(new valueConstructors[j](componentCounts[j]));\r\n    }\r\n\r\n    for (let i = 0; i < geometries.length; i++) {\r\n        const geometry = geometries[i];\r\n        for (let ai = 0; ai < attrNames.length; ai++) {\r\n            var attrName = attrNames[ai];\r\n            var valueArr = valueArrs[ai];\r\n            var attrValues = geometry.attributes[attrName].values;\r\n            valueArr.set(attrValues, valueOffsets[ai]);\r\n            valueOffsets[ai] += attrValues.length;\r\n        }\r\n\r\n        for (let j = 0; j < geometry.indices.length; j++) {\r\n            const index = geometry.indices[j];\r\n            indices.push(index + indexOffst);\r\n        }\r\n\r\n        indexOffst += geometry.attributes.position.values.length / 3;\r\n    }\r\n\r\n    var attributes = {};\r\n    for (let i = 0; i < attrNames.length; i++) {\r\n        const attrName = attrNames[i];\r\n        attributes[attrName] = {\r\n            values: valueArrs[i],\r\n            componentsPerAttribute: valueComponents[i],\r\n            componentDatatype: valueTypes[i],\r\n            normalize: valueNormalizes[i]\r\n        }\r\n    }\r\n\r\n    var vertexCount = valueArrs[0] / valueComponents[0];\r\n    if (vertexCount < 65535) {\r\n        indices = new Uint16Array(indices);\r\n    } else {\r\n        indices = new Uint32Array(indices);\r\n    }\r\n\r\n    geometry = new Cesium.Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: primitiveType\r\n    })\r\n    return geometry;\r\n}\r\n\r\n/**\r\n*\r\n*@param {Cesium.Geometry}geometry\r\n*@param {Cesium.Cartesian3}offset\r\n*/\r\nGeometryUtils.translate = function (geometry, offset) {\r\n    initConstants()\r\n    if (Array.isArray(offset)) {\r\n        scratchOffset.x = offset[0];\r\n        scratchOffset.y = offset[1];\r\n        scratchOffset.z = offset[2];\r\n    } else {\r\n        Cesium.Cartesian3.clone(offset, scratchOffset);\r\n    }\r\n\r\n    for (var i = 0; i < geometry.attributes.position.values.length; i += 3) {\r\n        geometry.attributes.position.values[i] += scratchOffset.x;\r\n        geometry.attributes.position.values[i + 1] += scratchOffset.y;\r\n        geometry.attributes.position.values[i + 2] += scratchOffset.z;\r\n    }\r\n    //if (geometry.attributes.normal) {\r\n    //    Cesium.GeometryPipeline.computeNormal(geometry);\r\n    //}\r\n}\r\n\r\n/**\r\n*\r\n*@param {TypeArray} array\r\n*@return {Cesium.ComponentDatatype}  \r\n*/\r\nGeometryUtils.getAttributeComponentType = function (array) {\r\n\r\n    var attributeComponentType = Cesium.ComponentDatatype.SHORT;\r\n    if (array instanceof Int8Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.BYTE;\r\n\r\n    } else if (array instanceof Uint8Array || array instanceof Uint8ClampedArray) {\r\n        attributeComponentType = Cesium.ComponentDatatype.UNSIGNED_BYTE;\r\n\r\n    } else if (array instanceof Int16Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.SHORT;\r\n\r\n    } else if (array instanceof Uint16Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.UNSIGNED_SHORT;\r\n\r\n    } else if (array instanceof Int32Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.INT;\r\n\r\n    } else if (array instanceof Uint32Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.UNSIGNED_INT;\r\n\r\n    } else if (array instanceof Float32Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.FLOAT;\r\n\r\n    } else if (array instanceof Float64Array) {\r\n        attributeComponentType = Cesium.ComponentDatatype.DOUBLE;\r\n\r\n    }\r\n\r\n    return attributeComponentType;\r\n\r\n}\r\n\r\n/**\r\n*\r\n*@param {Object}geometry\r\n*@return {Boolean}\r\n*/\r\nGeometryUtils.isGeometry3js = function (geometry) {\r\n    return (typeof THREE !== 'undefined' && (geometry instanceof THREE.BoxGeometry))\r\n        || (geometry.attributes && geometry.attributes.position && geometry.index)\r\n        || (geometry.vertices && geometry.faces);\r\n}\r\n\r\n/**\r\n *\r\n *@param {THREE.BufferGeometry}geometry \r\n *@private\r\n */\r\nGeometryUtils.parseBufferGeometry3js = function (geometry) {\r\n    // var start = new Date();\r\n\r\n    var attributes = {};\r\n    if (!geometry.attributes.normal) {\r\n        geometry.computeFaceNormals();\r\n    }\r\n    for (var attrName in geometry.attributes) {\r\n\r\n        if (geometry.attributes.hasOwnProperty(attrName)) {\r\n            var attr = geometry.getAttribute(attrName);\r\n            if (attr && attr.array.length > 0) {\r\n\r\n                attributes[attrName] = new Cesium.GeometryAttribute({\r\n                    componentDatatype: GeometryUtils.getAttributeComponentType(attr.array),\r\n                    componentsPerAttribute: attr.itemSize,\r\n                    values: attr.array,\r\n                    normalize: attr.normalized\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n    var indices = [];\r\n    if (!geometry.index && geometry.groups) {\r\n        geometry.groups.forEach(function (group) {\r\n            for (var i = 0; i < group.count; i++) {\r\n                indices.push(i + group.start);\r\n            }\r\n        })\r\n        indices = new Int32Array(indices);\r\n    } else {\r\n        indices = geometry.index.array;\r\n    }\r\n    var cesGeometry = new Cesium.Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: Cesium.PrimitiveType.TRIANGLES\r\n    });\r\n\r\n    return cesGeometry;\r\n}\r\n\r\n/**\r\n*\r\n*@param {THREE.Geometry}geometry3js\r\n*@return {Cesium.Geometry} \r\n*/\r\nGeometryUtils.fromGeometry3js = function (geometry3js) {\r\n\r\n    if (geometry3js.attributes && (geometry3js.index || geometry3js.groups.length)) {\r\n\r\n    } else {\r\n        geometry3js = new THREE.BufferGeometry().fromGeometry(geometry3js);\r\n    }\r\n    var geometry = GeometryUtils.parseBufferGeometry3js(geometry3js);\r\n    //GeometryUtils.computeVertexNormals(geometry);\r\n    Cesium.GeometryPipeline.computeNormal(geometry);\r\n    return geometry;\r\n    var positions = new Float32Array(geometry3js.vertices.length * 3);\r\n    for (var i = 0; i < geometry3js.vertices.length; i++) {\r\n        positions[i * 3] = geometry3js.vertices[i].x;\r\n        if (!geometry3js.up || geometry3js.up.y) {\r\n            positions[i * 3 + 1] = geometry3js.vertices[i].z;\r\n            positions[i * 3 + 2] = geometry3js.vertices[i].y;\r\n        } else {\r\n            positions[i * 3 + 1] = geometry3js.vertices[i].y;\r\n            positions[i * 3 + 2] = geometry3js.vertices[i].z;\r\n        }\r\n    }\r\n    var indices = new Int32Array(geometry3js.faces.length * 3);\r\n    for (var i = 0; i < geometry3js.faces.length; i++) {\r\n        indices[i * 3] = geometry3js.faces[i].a;\r\n        indices[i * 3 + 1] = geometry3js.faces[i].b;\r\n        indices[i * 3 + 2] = geometry3js.faces[i].c;\r\n    }\r\n    var attributes = {};\r\n    attributes.position = new Cesium.GeometryAttribute({\r\n        componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: positions\r\n    });\r\n    var cesGeometry = new Cesium.Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: Cesium.PrimitiveType.TRIANGLES\r\n    });\r\n    return cesGeometry;\r\n}\r\n/**\r\n*\r\n*@param {Cesium.Geometry}geometry\r\n*@return {THREE.Geometry} \r\n*/\r\nGeometryUtils.toGeometry3js = function (geometry) {\r\n    if (typeof THREE === 'undefined') {\r\n        throw new Error(\"THREE 未加载\");\r\n    }\r\n\r\n    var positions = geometry.attributes.position.values;\r\n    var positionIdx = 0;\r\n\r\n    var geometry3js = new THREE.Geometry();\r\n\r\n    for (var i = 0; i < positions.length; i += 3) {\r\n        positionIdx = i * 3;\r\n        geometry3js.vertices.push(\r\n            new THREE.Vector3(positions[positionIdx], positions[positionIdx + 2], positions[positionIdx + 1])\r\n        );\r\n    }\r\n\r\n    for (var i = 0; i < geometry.indices.length; i += 3) {\r\n        var idx1 = geometry.indices[i];\r\n        var idx2 = geometry.indices[i + 1];\r\n        var idx3 = geometry.indices[i + 2];\r\n        geometry3js.faces.push(new THREE.Face3(idx1, idx2, idx3));\r\n    }\r\n\r\n    return geometry3js;\r\n}\r\n\r\n/**\r\n*@param {Cesium.Geometry|THREE.Geometry}geometry\r\n*@param {Cesium.Cartesian3}[offset]\r\n*@return {CSG}\r\n*/\r\nGeometryUtils.toCSG = function (geometry, offset) {\r\n    if (!(typeof THREE === 'undefined')) {\r\n        if (geometry instanceof THREE.Geometry) {\r\n            return GeometryUtils._toCSG3js(geometry, offset);\r\n        }\r\n    }\r\n    if (!offset) {\r\n        offset = { x: 0, y: 0, z: 0 };\r\n    }\r\n    if (!geometry.attributes.normal) {\r\n        geometry = Cesium.GeometryPipeline.computeNormal(geometry);\r\n    }\r\n    if (geometry.primitiveType !== Cesium.PrimitiveType.TRIANGLES) {\r\n        throw new Error(\"暂不支持此类几何体\");\r\n    }\r\n    if (!CSG) {\r\n        throw new Error('CSG 库未加载。请从 https://github.com/evanw/csg.js 获取');\r\n    }\r\n    var faceCount = geometry.indices.length / 3;\r\n    var polygons = [], vertices = [];\r\n    var positions = geometry.attributes.position.values;\r\n    var normals = geometry.attributes.normal.values;\r\n    var normalIdx = 0, positionIdx = 0;\r\n\r\n    for (var i = 0; i < geometry.indices.length; i += 3) {\r\n        vertices = [];\r\n\r\n        var idx1 = geometry.indices[i];\r\n        var idx2 = geometry.indices[i + 1];\r\n        var idx3 = geometry.indices[i + 2];\r\n\r\n        positionIdx = idx1 * 3;\r\n        normalIdx = idx1 * 3;\r\n\r\n        vertices.push(new CSG.Vertex(\r\n            [positions[positionIdx++] + offset.x, positions[positionIdx++] + offset.y, positions[positionIdx++] + offset.z],\r\n            [normals[normalIdx++], normals[normalIdx++], normals[normalIdx++]]\r\n        ));\r\n\r\n        positionIdx = idx2 * 3;\r\n        normalIdx = idx2 * 3;\r\n        vertices.push(new CSG.Vertex(\r\n            [positions[positionIdx++] + offset.x, positions[positionIdx++] + offset.y, positions[positionIdx++] + offset.z],\r\n            [normals[normalIdx++], normals[normalIdx++], normals[normalIdx++]]\r\n        ));\r\n\r\n        positionIdx = idx3 * 3;\r\n        normalIdx = idx3 * 3;\r\n        vertices.push(new CSG.Vertex(\r\n            [positions[positionIdx++] + offset.x, positions[positionIdx++] + offset.y, positions[positionIdx++] + offset.z],\r\n            [normals[normalIdx++], normals[normalIdx++], normals[normalIdx++]]\r\n        ));\r\n        polygons.push(new CSG.Polygon(vertices));\r\n    }\r\n    return CSG.fromPolygons(polygons);\r\n}\r\n/**\r\n*@param {CSG}csg_model\r\n*@param {Boolean}[toGeometry3js=false]\r\n*@return {Cesium.Geometry|THREE.Geometry}\r\n*/\r\nGeometryUtils.fromCSG = function (csg_model, toGeometry3js) {\r\n    if (!(typeof THREE === 'undefined')) {\r\n        if (geometry instanceof THREE.Geometry) {\r\n            return GeometryUtils._fromCSG3js(geometry, offset);\r\n        }\r\n    }\r\n    var i, j, vertices,\r\n        polygons = csg_model.toPolygons();\r\n\r\n    if (!CSG) {\r\n        throw new Error('CSG 库未加载。请从 https://github.com/evanw/csg.js 获取');\r\n    }\r\n\r\n    var positions = [];\r\n    var normals = [];\r\n    var indices = [];\r\n\r\n    for (i = 0; i < polygons.length; i++) {\r\n\r\n        // Vertices\r\n        vertices = [];\r\n        for (j = 0; j < polygons[i].vertices.length; j++) {\r\n            vertices.push(this.getGeometryVertice(positions, normals, polygons[i].vertices[j].pos, polygons[i].plane.normal));\r\n        }\r\n        if (vertices[0] === vertices[vertices.length - 1]) {\r\n            vertices.pop();\r\n        }\r\n\r\n        for (var j = 2; j < vertices.length; j++) {\r\n            indices.push(vertices[0], vertices[j - 1], vertices[j]);\r\n        }\r\n    }\r\n\r\n    positions = new Float32Array(positions);\r\n    normals = new Float32Array(normals);\r\n\r\n    indices = new Int32Array(indices);\r\n    var attributes = {};\r\n    attributes.position = new Cesium.GeometryAttribute({\r\n        componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: positions\r\n    });\r\n    attributes.normal = new Cesium.GeometryAttribute({\r\n        componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: normals\r\n    });\r\n\r\n    var cesGeometry = new Cesium.Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: Cesium.PrimitiveType.TRIANGLES\r\n    });\r\n\r\n    return cesGeometry;\r\n}\r\n\r\nGeometryUtils._toCSG3js = function (three_model, offset, rotation) {\r\n    if (typeof THREE === 'undefined') {\r\n        throw new Error(\"THREE 未加载\");\r\n    }\r\n\r\n    var i, geometry, polygons, vertices, rotation_matrix;\r\n\r\n    if (!CSG) {\r\n        throw 'CSG library not loaded. Please get a copy from https://github.com/evanw/csg.js';\r\n    }\r\n\r\n    if (three_model instanceof THREE.Mesh) {\r\n        geometry = three_model.geometry;\r\n        offset = offset || three_model.position;\r\n        rotation = rotation || three_model.rotation;\r\n    } else if (three_model instanceof THREE.Geometry) {\r\n        geometry = three_model;\r\n        offset = offset || new THREE.Vector3(0, 0, 0);\r\n        rotation = rotation || new THREE.Euler(0, 0, 0);\r\n    } else {\r\n        throw 'Model type not supported.';\r\n    }\r\n    rotation_matrix = new THREE.Matrix4().makeRotationFromEuler(rotation);\r\n\r\n    var polygons = [];\r\n    for (i = 0; i < geometry.faces.length; i++) {\r\n        if (geometry.faces[i] instanceof THREE.Face3) {\r\n\r\n            vertices = [];\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].a].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].b].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].c].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            polygons.push(new CSG.Polygon(vertices));\r\n\r\n        } else if (geometry.faces[i] instanceof THREE.Face4) {\r\n\r\n            vertices = [];\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].a].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].b].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].d].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            polygons.push(new CSG.Polygon(vertices));\r\n\r\n            vertices = [];\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].b].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].c].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            vertices.push(new CSG.Vertex(geometry.vertices[geometry.faces[i].d].clone().add(offset).applyMatrix4(rotation_matrix), [geometry.faces[i].normal.x, geometry.faces[i].normal.y, geometry.faces[i].normal.z]));\r\n            polygons.push(new CSG.Polygon(vertices));\r\n\r\n        } else {\r\n            throw 'Model contains unsupported face.';\r\n        }\r\n    }\r\n\r\n    return CSG.fromPolygons(polygons);\r\n}\r\n\r\nGeometryUtils._fromCSG3js = function (csg_model) {\r\n    if (typeof THREE === 'undefined') {\r\n        throw new Error(\"THREE 未加载\");\r\n    }\r\n    var i, j, vertices, face,\r\n        three_geometry = new THREE.Geometry(),\r\n        polygons = csg_model.toPolygons();\r\n\r\n    if (!CSG) {\r\n        throw 'CSG library not loaded. Please get a copy from https://github.com/evanw/csg.js';\r\n    }\r\n\r\n    for (i = 0; i < polygons.length; i++) {\r\n\r\n        // Vertices\r\n        vertices = [];\r\n        for (j = 0; j < polygons[i].vertices.length; j++) {\r\n            vertices.push(GeometryUtils._getGeometryVertice3js(three_geometry, polygons[i].vertices[j].pos));\r\n        }\r\n        if (vertices[0] === vertices[vertices.length - 1]) {\r\n            vertices.pop();\r\n        }\r\n\r\n        for (var j = 2; j < vertices.length; j++) {\r\n            face = new THREE.Face3(vertices[0], vertices[j - 1], vertices[j], new THREE.Vector3().copy(polygons[i].plane.normal));\r\n            three_geometry.faces.push(face);\r\n            three_geometry.faceVertexUvs[0].push(new THREE.Vector2());\r\n        }\r\n    }\r\n\r\n    three_geometry.computeBoundingBox();\r\n\r\n    return three_geometry;\r\n}\r\n\r\nGeometryUtils._getGeometryVertice3js = function (geometry, vertice_position) {\r\n    var i;\r\n    for (i = 0; i < geometry.vertices.length; i++) {\r\n        if (geometry.vertices[i].x === vertice_position.x && geometry.vertices[i].y === vertice_position.y && geometry.vertices[i].z === vertice_position.z) {\r\n            // Vertice already exists\r\n            return i;\r\n        }\r\n    };\r\n\r\n    geometry.vertices.push(new THREE.Vector3(vertice_position.x, vertice_position.y, vertice_position.z));\r\n    return geometry.vertices.length - 1;\r\n}\r\n\r\nexport default GeometryUtils;",
    "﻿\r\nimport Rotation from './Rotation.js';\r\nimport RendererUtils from './RendererUtils.js';\r\n\r\n/**\r\n*\r\n*@param {Object|geometry}options   \r\n*@param {Boolean}[options.show=true]  \r\n*@param {Cesium.Cartesian3}[options.position]\r\n*@param {Cesium.Rotation}[options.rotation]\r\n*@param {Cesium.Cartesian3}[options.scale]    \r\n* \r\n*@property {Boolean}show  \r\n*@property {Cesium.Cartesian3}position\r\n*@property {Cesium.Rotation}rotation\r\n*@property {Cesium.Cartesian3}scale   \r\n*@property {Boolean}needUpdate\r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*@example\r\n    \r\n    MeshVisualizer = Cesium.MeshVisualizer;\r\n    Mesh = Cesium.Mesh;\r\n    MeshMaterial = Cesium.MeshMaterial; \r\n    LOD = Cesium.LOD;\r\n\r\n    var center = Cesium.Cartesian3.fromDegrees(homePosition[0], homePosition[1], 50000);\r\n    var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center);\r\n\r\n    var meshVisualizer = new MeshVisualizer({\r\n        modelMatrix: modelMatrix,\r\n        up: { z: 1 }\r\n    });\r\n    viewer.scene.primitives.add(meshVisualizer);\r\n\r\n\r\n    var material = new MeshMaterial({\r\n        defaultColor: \"rgba(200,0,0,1.0)\",\r\n        wireframe: true,\r\n        side: MeshMaterial.Sides.FRONT\r\n    });\r\n    var radius = 20000;\r\n    var sphereL0 = Cesium.SphereGeometry.createGeometry(new Cesium.SphereGeometry({\r\n        radius: radius,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY,\r\n        stackPartitions:4,\r\n        slicePartitions: 4\r\n    }));\r\n    var sphereL1 = Cesium.SphereGeometry.createGeometry(new Cesium.SphereGeometry({\r\n        radius: radius,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY,\r\n        stackPartitions: 8,\r\n        slicePartitions: 8\r\n    }));\r\n    var sphereL2 = Cesium.SphereGeometry.createGeometry(new Cesium.SphereGeometry({\r\n        radius: radius,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY,\r\n        stackPartitions: 16,\r\n        slicePartitions: 16\r\n    }));\r\n    var sphereL3 = Cesium.SphereGeometry.createGeometry(new Cesium.SphereGeometry({\r\n        radius: radius,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY,\r\n        stackPartitions: 32,\r\n        slicePartitions: 32\r\n    }));\r\n    var sphereL4 = Cesium.SphereGeometry.createGeometry(new Cesium.SphereGeometry({\r\n        radius: radius,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY,\r\n        stackPartitions: 64,\r\n        slicePartitions: 64\r\n    }));\r\n\r\n    var geometries = [\r\n                [sphereL4, 5],\r\n                [sphereL3, 200],\r\n                [sphereL2, 300],\r\n                [sphereL1, 500],\r\n                [sphereL0, 2000]\r\n    ];\r\n\r\n    var maxAvailableDistance = 10000000;\r\n\r\n    var i, j, mesh, lod;\r\n    var scale = new Cesium.Cartesian3(1, 1, 1);\r\n    for (j = 0; j < 1000; j++) {\r\n\r\n        lod = new LOD();\r\n\r\n        for (i = 0; i < geometries.length; i++) {\r\n\r\n            mesh = new Mesh(geometries[i][0], material);\r\n            mesh.scale = scale;\r\n\r\n            lod.addLevel(mesh, geometries[i][1] * 1000);\r\n        }\r\n        lod.maxAvailableDistance = maxAvailableDistance;\r\n        lod.position.x = 1500000 * (0.5 - Math.random());\r\n        lod.position.y = 1750000 * (0.5 - Math.random());\r\n        lod.position.z = 130000 * (0.5 - Math.random());\r\n\r\n        meshVisualizer.add(lod);\r\n\r\n    }\r\n*/\r\nfunction LOD(options) {\r\n\r\n    options = Cesium.defaultValue(options, {});\r\n\r\n    this.uuid = Cesium.createGuid();\r\n    this.show = Cesium.defaultValue(options.show, true);\r\n    this.maxAvailableDistance = Cesium.defaultValue(options.maxAvailableDistance, Number.MAX_VALUE);\r\n    this._position = Cesium.defaultValue(options.position, new Cesium.Cartesian3(0, 0, 0));\r\n    this._scale = Cesium.defaultValue(options.scale, new Cesium.Cartesian3(1, 1, 1));\r\n    this._rotation = Cesium.defaultValue(options.rotation, { axis: new Cesium.Cartesian3(0, 0, 1), angle: 0 });\r\n    this._rotation = new Rotation(this._rotation.axis, this._rotation.angle);\r\n    this._boundingSphere = new Cesium.BoundingSphere();\r\n    this._needsUpdate = false;\r\n    this._modelMatrixNeedsUpdate = true;\r\n    this._modelMatrix = new Cesium.Matrix4();\r\n    Cesium.Matrix4.clone(Cesium.Matrix4.IDENTITY, this._modelMatrix);\r\n\r\n    this._onNeedUpdateChanged = function () {\r\n        this._modelMatrixNeedsUpdate = true;\r\n    };\r\n    this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n\r\n    this._children = [];\r\n    this._parent = null;\r\n    this.type = 'LOD';\r\n\r\n    Object.defineProperties(this, {\r\n        levels: {\r\n            enumerable: true,\r\n            value: []\r\n        }\r\n    });\r\n\r\n}\r\nfunction removeByValue(arr, val) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i] == val) {\r\n            arr.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n}\r\nLOD.prototype = {\r\n\r\n    constructor: LOD,\r\n    /**\r\n     *\r\n     *@param {Number}x\r\n     *@param {Number}y\r\n     *@param {Number}z\r\n     */\r\n    setPosition: function (x, y, z) {\r\n        var changed = false;\r\n        if (arguments.length == 1) {\r\n            if (typeof x == 'number') {\r\n                if (x != this._position.x) changed = true;\r\n                this._position.x = x;\r\n            } else if (x instanceof Cesium.Cartesian3) {\r\n                if (x != this._position.x\r\n                    || y != this._position.y\r\n                    || z != this._position.z) {\r\n                    changed = true;\r\n                }\r\n\r\n                this._position.x = x.x;\r\n                this._position.y = x.y;\r\n                this._position.z = x.z;\r\n            }\r\n        }\r\n        if (arguments.length == 2 && typeof y == 'number') {\r\n            if (y != this._position.y) changed = true;\r\n            this._position.y = y;\r\n        }\r\n        if (arguments.length == 3 && typeof z == 'number') {\r\n            if (z != this._position.z) changed = true;\r\n            this._position.z = z;\r\n        }\r\n        if (changed) {\r\n            this._modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     *@param {Number}x\r\n     *@param {Number}y\r\n     *@param {Number}z\r\n     */\r\n    setScale: function (x, y, z) {\r\n        var changed = false;\r\n        if (arguments.length == 1) {\r\n            if (typeof x == 'number') {\r\n                if (x != this._scale.x) changed = true;\r\n                this._scale.x = x;\r\n            } else if (x instanceof Cesium.Cartesian3) {\r\n                if (x != this._scale.x\r\n                    || y != this._scale.y\r\n                    || z != this._scale.z) {\r\n                    changed = true;\r\n                }\r\n\r\n                this._scale.x = x.x;\r\n                this._scale.y = x.y;\r\n                this._scale.z = x.z;\r\n            }\r\n        }\r\n        if (arguments.length == 2 && typeof y == 'number') {\r\n            if (y != this._scale.y) changed = true;\r\n            this._scale.y = y;\r\n        }\r\n        if (arguments.length == 3 && typeof z == 'number') {\r\n            if (z != this._scale.z) changed = true;\r\n            this._scale.z = z;\r\n        }\r\n        if (changed) {\r\n            this._modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n    *@param {Cesium.Mesh}mesh\r\n    *@param {Number}distance\r\n    */\r\n    addLevel: function (object, distance) {\r\n\r\n        if (distance === undefined) distance = 0;\r\n\r\n        distance = Math.abs(distance);\r\n\r\n        var levels = this.levels;\r\n\r\n        for (var l = 0; l < levels.length; l++) {\r\n\r\n            if (distance < levels[l].distance) {\r\n\r\n                break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        levels.splice(l, 0, { distance: distance, object: object });\r\n        object.parent = this;\r\n        this._children.push(object);\r\n        if (this.levels[0].object.geometry) {\r\n            this._boundingSphere.radius = this.levels[0].object.geometry.boundingSphere.radius;\r\n        } else if (this.levels[0].object.boundingSphere) {\r\n            this._boundingSphere.radius = this.levels[0].object.boundingSphere.radius;\r\n        }\r\n    },\r\n    update: function () {\r\n \r\n\r\n        return function update(parentModelMatrix, frameState) {\r\n\r\n            var levels = this.levels;\r\n\r\n            if (levels.length > 1) {\r\n                if (this._modelMatrixNeedsUpdate) {\r\n\r\n                    RendererUtils.computeModelMatrix(\r\n                        parentModelMatrix,\r\n                        this.position,\r\n                        this.rotation,\r\n                        this.scale,\r\n                        this.modelMatrix\r\n                    );\r\n\r\n                    this._modelMatrixNeedsUpdate = false;\r\n                }\r\n\r\n                Cesium.Matrix4.getTranslation(this.modelMatrix, this._boundingSphere.center);\r\n\r\n                var bs = this._boundingSphere;\r\n                var distance = Math.max(0.0, Cesium.Cartesian3.distance(bs.center, frameState.camera.positionWC) - bs.radius);\r\n\r\n                var show = this.maxAvailableDistance > distance;\r\n\r\n                show = show && frameState.cullingVolume.computeVisibility(this._boundingSphere) !== Cesium.Intersect.OUTSIDE;\r\n                levels[0].object.show = show;\r\n\r\n                for (var i = 1, l = levels.length; i < l; i++) {\r\n\r\n                    if (distance >= levels[i].distance) {\r\n\r\n                        levels[i - 1].object.show = false;\r\n                        levels[i].object.show = show;\r\n\r\n                    } else {\r\n\r\n                        break;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                for (; i < l; i++) {\r\n\r\n                    levels[i].object.show = false;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n    }(),\r\n    getObjectForDistance: function (distance) {\r\n\r\n        var levels = this.levels;\r\n\r\n        for (var i = 1, l = levels.length; i < l; i++) {\r\n\r\n            if (distance < levels[i].distance) {\r\n\r\n                break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return levels[i - 1].object;\r\n\r\n    }\r\n};\r\n\r\nObject.defineProperties(LOD.prototype, {\r\n    modelMatrix: {\r\n        get: function () {\r\n            return this._modelMatrix;\r\n        }\r\n    },\r\n    parent: {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        set: function (val) {\r\n            if (val && ((val._children && Array.isArray(val._children)) || (val.children && Array.isArray(val.children)))) {\r\n\r\n                if (this._parent && this._parent != val) {\r\n                    var children = this._parent._children ? this._parent._children : this._parent.children;\r\n                    if (Array.isArray(children)) {\r\n                        removeByValue(children, this);\r\n                    }\r\n                }\r\n                this._parent = val;\r\n                if (typeof this._parent.add === 'function') {\r\n                    this._parent.add(this);\r\n                } else {\r\n                    var children = val._children ? val._children : val.children;\r\n                    children.push(this);\r\n                }\r\n            }\r\n            this._needsUpdate = true;\r\n        }\r\n    },\r\n    children: {\r\n        get: function () {\r\n            return this._children;\r\n        },\r\n        set: function (val) {\r\n            this._children = val;\r\n            this._needsUpdate = true;\r\n        }\r\n    },\r\n    needsUpdate: {\r\n        get: function () {\r\n            return this._needsUpdate;\r\n        },\r\n        set: function (val) {\r\n            this._needsUpdate = val;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        set: function (val) {\r\n            if (val != this._rotation) {\r\n                this._rotation = val;\r\n                this._needUpdate = true;\r\n            }\r\n            this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n            this._rotation = val;\r\n            this._rotation.paramChanged.addEventListener(this._onNeedUpdateChanged);\r\n        }\r\n    },\r\n    position: {\r\n        get: function () {\r\n            return this._position;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._position.x || val.y != this._position.y || val.z != this._position.z) {\r\n                this._position = val;\r\n                this._needsUpdate = true;\r\n            }\r\n            this._position = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._scale.x || val.y != this._scale.y || val.z != this._scale.z) {\r\n                this._scale = val;\r\n                this._needsUpdate = true;\r\n            }\r\n            this._scale = val;\r\n        }\r\n    }\r\n});\r\n\r\nexport default LOD;",
    "﻿  \nimport MeshMaterial from './MeshMaterial.js';\n\nvar shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshToonMaterial: 'phong',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points'\n};\n\n/**\n*\n*@constructor\n*@memberof Cesium\n*/\nfunction MaterialUtils() {\n\n}\n\n/**\n*\n*@param {THREE.Material}material3js\n*@return {Cesium.MeshMaterial}\n*/\nMaterialUtils.fromMaterial3js = function (material3js) {\n    if(typeof THREE=='undefined'){\n        throw new Error('Three.js is required.')\n    }\n    var shaderID = shaderIDs[material3js.type];\n    material3js[\"is\" + material3js.type] = true;\n    var shader = THREE.ShaderLib[shaderID];\n\n    if (!shader) {\n        shader = material3js;\n    }\n\n    var material = new MeshMaterial({\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader,\n        uniforms: cloneUniforms(shader.uniforms)\n    });\n\n    material.material3js = material3js;\n    MaterialUtils.updateMaterialFrom3js(material);\n    return material;\n}\n\nfunction cloneUniforms(uniforms3js) {\n    var uniforms = {};\n    for (var i in uniforms3js) {\n        if (uniforms3js.hasOwnProperty(i)) {\n            uniforms[i] = {\n                value: {}\n            };\n            for (var n in uniforms3js[i]) {\n                if (n !== \"value\") {\n                    uniforms[i][n] = uniforms3js[i][n];\n                }\n            }\n            if (uniforms3js[i].t) {\n                switch (uniforms3js[i].t) {\n\n                    default:\n                }\n            }\n\n            bindUniformValue(uniforms[i], uniforms3js[i].value);\n        }\n    }\n    return uniforms;\n}\n\n/**\n*\n*@param {Cesium.MeshMaterial}materialWidth3js\n*@private\n*/\nMaterialUtils.updateMaterialFrom3js = function (materialWidth3js) {\n    if (!materialWidth3js || !materialWidth3js.material3js) {\n        return;\n    }\n\n    var material3js = materialWidth3js.material3js;\n    materialWidth3js.translucent = material3js.transparent;\n\n    materialWidth3js.wireframe = material3js.wireframe;\n\n    var m_uniforms = materialWidth3js.uniforms;\n    var material = materialWidth3js.material3js;\n    if (material.isMeshBasicMaterial ||\n        material.isMeshLambertMaterial ||\n        material.isMeshPhongMaterial ||\n        material.isMeshStandardMaterial ||\n        material.isMeshNormalMaterial ||\n        material.isMeshDepthMaterial) {\n\n        refreshUniformsCommon(m_uniforms, material);\n\n    }\n\n    // refresh single material specific uniforms\n\n    if (material.isLineBasicMaterial) {\n\n        refreshUniformsLine(m_uniforms, material);\n\n    } else if (material.isLineDashedMaterial) {\n\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n\n    } else if (material.isPointsMaterial) {\n\n        refreshUniformsPoints(m_uniforms, material);\n\n    } else if (material.isMeshLambertMaterial) {\n\n        refreshUniformsLambert(m_uniforms, material);\n\n    } else if (material.isMeshToonMaterial) {\n\n        refreshUniformsToon(m_uniforms, material);\n\n    } else if (material.isMeshPhongMaterial) {\n\n        refreshUniformsPhong(m_uniforms, material);\n\n    } else if (material.isMeshPhysicalMaterial) {\n\n        refreshUniformsPhysical(m_uniforms, material);\n\n    } else if (material.isMeshStandardMaterial) {\n\n        refreshUniformsStandard(m_uniforms, material);\n\n    } else if (material.isMeshDepthMaterial) {\n\n        if (material.displacementMap) {\n\n            bindUniformValue(m_uniforms.displacementMap, material.displacementMap);\n            bindUniformValue(m_uniforms.displacementScale, material.displacementScale);\n            bindUniformValue(m_uniforms.displacementBias, material.displacementBias);\n\n        }\n\n    } else if (material.isMeshNormalMaterial) {\n\n        refreshUniformsNormal(m_uniforms, material);\n\n    } else {\n        for (var i in material.uniforms) {\n            if (material.uniforms.hasOwnProperty(i)) {\n                bindUniformValue(m_uniforms[i], material.uniforms[i].value);\n            }\n        }\n    }\n    //if (material.lights) {\n\n    //    // wire up the material to this renderer's lighting state\n\n    //    //uniforms.ambientLightColor.value = _lights.ambient;\n    //    //uniforms.directionalLights.value = _lights.directional;\n    //    //uniforms.spotLights.value = _lights.spot;\n    //    //uniforms.rectAreaLights.value = _lights.rectArea;\n    //    //uniforms.pointLights.value = _lights.point;\n    //    //uniforms.hemisphereLights.value = _lights.hemi;\n\n    //    //uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n    //    //uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n    //    //uniforms.spotShadowMap.value = _lights.spotShadowMap;\n    //    //uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n    //    //uniforms.pointShadowMap.value = _lights.pointShadowMap;\n    //    //uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n    //    // TODO (abelnation): add area lights shadow info to uniforms\n\n    //} else {\n    m_uniforms.ambientLightColor = { value: new Cesium.Color(0.06666666666666667, 0.06666666666666667, 0.06666666666666667) };\n    //}\n}\n\n\n\n/**\n *\n *@param {Object}material3js\n *@return {Boolean}\n */\nMaterialUtils.isMaterial3js = function (material3js) {\n    return typeof THREE !== 'undefined' && material3js instanceof THREE.Material;\n}\n// Uniforms (refresh bindUniformValue(uniforms objects)\n\nfunction refreshUniformsCommon(uniforms, material) {\n\n    bindUniformValue(uniforms.opacity, material.opacity);\n\n    bindUniformValue(uniforms.diffuse, material.color);\n\n    if (material.emissive) {\n        var val3js = new material.emissive.constructor().copy(material.emissive).multiplyScalar(material.emissiveIntensity)\n        bindUniformValue(uniforms.emissive, val3js);\n\n    }\n\n    bindUniformValue(uniforms.map, material.map);\n    bindUniformValue(uniforms.specularMap, material.specularMap);\n    bindUniformValue(uniforms.alphaMap, material.alphaMap);\n\n    if (material.lightMap) {\n\n        bindUniformValue(uniforms.lightMap, material.lightMap);\n        bindUniformValue(uniforms.lightMapIntensity, material.lightMapIntensity);\n\n    }\n\n    if (material.aoMap) {\n\n        bindUniformValue(uniforms.aoMap, material.aoMap);\n        bindUniformValue(uniforms.aoMapIntensity, material.aoMapIntensity);\n\n    }\n\n    // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n    var uvScaleMap\n\n    if (material.map) {\n\n        uvScaleMap = material.map\n\n    } else if (material.specularMap) {\n\n        uvScaleMap = material.specularMap\n\n    } else if (material.displacementMap) {\n\n        uvScaleMap = material.displacementMap\n\n    } else if (material.normalMap) {\n\n        uvScaleMap = material.normalMap\n\n    } else if (material.bumpMap) {\n\n        uvScaleMap = material.bumpMap\n\n    } else if (material.roughnessMap) {\n\n        uvScaleMap = material.roughnessMap\n\n    } else if (material.metalnessMap) {\n\n        uvScaleMap = material.metalnessMap\n\n    } else if (material.alphaMap) {\n\n        uvScaleMap = material.alphaMap\n\n    } else if (material.emissiveMap) {\n\n        uvScaleMap = material.emissiveMap\n\n    }\n\n    if (uvScaleMap !== undefined) {\n\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n\n            uvScaleMap = uvScaleMap.texture\n\n        }\n\n        var offset = uvScaleMap.offset\n        var repeat = uvScaleMap.repeat\n\n        bindUniformValue(uniforms.offsetRepeat, offset);\n\n    }\n\n    bindUniformValue(uniforms.envMap, material.envMap);\n\n    // don't flip CubeTexture envMaps, flip everything else:\n    //  WebGLRenderTargetCube will be flipped for backwards compatibility\n    //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n    // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n    bindUniformValue(uniforms.flipEnvMap, (!(material.envMap && material.envMap.isCubeTexture)) ? 1 : -1);\n\n    bindUniformValue(uniforms.reflectivity, material.reflectivity);\n    bindUniformValue(uniforms.refractionRatio, material.refractionRatio);\n\n}\n\nfunction refreshUniformsLine(uniforms, material) {\n\n    bindUniformValue(uniforms.diffuse, material.color);\n    bindUniformValue(uniforms.opacity, material.opacity);\n\n}\n\nfunction refreshUniformsDash(uniforms, material) {\n\n    bindUniformValue(uniforms.dashSize, material.dashSize);\n    bindUniformValue(uniforms.totalSize, material.dashSize + material.gapSize);\n    bindUniformValue(uniforms.scale, material.scale);\n\n}\n\nfunction refreshUniformsPoints(uniforms, material) {\n\n    bindUniformValue(uniforms.diffuse, material.color);\n    bindUniformValue(uniforms.opacity, material.opacity);\n    bindUniformValue(uniforms.size, material.size * _pixelRatio);\n    bindUniformValue(uniforms.scale, _height * 0.5);\n\n    bindUniformValue(uniforms.map, material.map);\n\n    if (material.map !== null) {\n\n        var offset = material.map.offset;\n        var repeat = material.map.repeat;\n\n        bindUniformValue(uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y));\n\n    }\n\n}\n\nfunction refreshUniformsFog(uniforms, fog) {\n\n    bindUniformValue(uniforms.fogColor, fog.color);\n\n    if (fog.isFog) {\n\n        bindUniformValue(uniforms.fogNear, fog.near);\n        bindUniformValue(uniforms.fogFar, fog.far);\n\n    } else if (fog.isFogExp2) {\n\n        bindUniformValue(uniforms.fogDensity, fog.density);\n\n    }\n\n}\n\nfunction refreshUniformsLambert(uniforms, material) {\n\n    if (material.emissiveMap) {\n\n        bindUniformValue(uniforms.emissiveMap, material.emissiveMap);\n\n    }\n\n}\n\nfunction refreshUniformsPhong(uniforms, material) {\n\n    bindUniformValue(uniforms.specular, material.specular);\n    bindUniformValue(uniforms.shininess, Math.max(material.shininess, 1e-4)); // to prevent pow( 0.0, 0.0 )\n\n    if (material.emissiveMap) {\n\n        bindUniformValue(uniforms.emissiveMap, material.emissiveMap);\n\n    }\n\n    if (material.bumpMap) {\n\n        bindUniformValue(uniforms.bumpMap, material.bumpMap);\n        bindUniformValue(uniforms.bumpScale, material.bumpScale);\n\n    }\n\n    if (material.normalMap) {\n\n        bindUniformValue(uniforms.normalMap, material.normalMap);\n        bindUniformValue(uniforms.normalScale.value.copy(material.normalScale));\n\n    }\n\n    if (material.displacementMap) {\n\n        bindUniformValue(uniforms.displacementMap, material.displacementMap);\n        bindUniformValue(uniforms.displacementScale, material.displacementScale);\n        bindUniformValue(uniforms.displacementBias, material.displacementBias);\n\n    }\n\n}\n\nfunction refreshUniformsToon(uniforms, material) {\n\n    refreshUniformsPhong(uniforms, material);\n\n    if (material.gradientMap) {\n\n        bindUniformValue(uniforms.gradientMap, material.gradientMap);\n\n    }\n\n}\n\nfunction refreshUniformsStandard(uniforms, material) {\n\n    bindUniformValue(uniforms.roughness, material.roughness);\n    bindUniformValue(uniforms.metalness, material.metalness);\n\n    if (material.roughnessMap) {\n\n        bindUniformValue(uniforms.roughnessMap, material.roughnessMap);\n\n    }\n\n    if (material.metalnessMap) {\n\n        bindUniformValue(uniforms.metalnessMap, material.metalnessMap);\n\n    }\n\n    if (material.emissiveMap) {\n\n        bindUniformValue(uniforms.emissiveMap, material.emissiveMap);\n\n    }\n\n    if (material.bumpMap) {\n\n        bindUniformValue(uniforms.bumpMap, material.bumpMap);\n        bindUniformValue(uniforms.bumpScale, material.bumpScale);\n\n    }\n\n    if (material.normalMap) {\n\n        bindUniformValue(uniforms.normalMap, material.normalMap);\n        bindUniformValue(uniforms.normalScale.value.copy(material.normalScale));\n\n    }\n\n    if (material.displacementMap) {\n\n        bindUniformValue(uniforms.displacementMap, material.displacementMap);\n        bindUniformValue(uniforms.displacementScale, material.displacementScale);\n        bindUniformValue(uniforms.displacementBias, material.displacementBias);\n\n    }\n\n    if (material.envMap) {\n\n        //bindUniformValue(uniforms.envMap, material.envMap); // part of bindUniformValue(uniforms common\n        bindUniformValue(uniforms.envMapIntensity, material.envMapIntensity);\n\n    }\n\n}\n\nfunction refreshUniformsPhysical(uniforms, material) {\n\n    bindUniformValue(uniforms.clearCoat, material.clearCoat);\n    bindUniformValue(uniforms.clearCoatRoughness, material.clearCoatRoughness);\n\n    refreshUniformsStandard(uniforms, material)\n\n}\n\nfunction refreshUniformsNormal(uniforms, material) {\n\n    if (material.bumpMap) {\n\n        bindUniformValue(uniforms.bumpMap, material.bumpMap);\n        bindUniformValue(uniforms.bumpScale, material.bumpScale);\n\n    }\n\n    if (material.normalMap) {\n\n        bindUniformValue(uniforms.normalMap, material.normalMap);\n        bindUniformValue(uniforms.normalScale.value.copy(material.normalScale));\n\n    }\n\n    if (material.displacementMap) {\n\n        bindUniformValue(uniforms.displacementMap, material.displacementMap);\n        bindUniformValue(uniforms.displacementScale, material.displacementScale);\n        bindUniformValue(uniforms.displacementBias, material.displacementBias);\n\n    }\n\n}\n\nfunction bindUniformValue(valCesium, val3js) {\n\n    var type = typeof val3js;\n    if (type === 'undefined') {\n        valCesium.value = undefined;\n        return;\n    }\n    if (val3js === null) {\n        valCesium.value = null; return;\n    }\n    if (typeof valCesium.value !== \"undefined\"\n        && valCesium.value != null\n        && (valCesium.value.constructor\n            && valCesium.value.constructor.clone\n            && val3js.constructor == valCesium.value.constructor)) {\n\n        valCesium.value = valCesium.value.constructor.clone(val3js);\n    } else {\n        switch (type) {\n            case \"number\":\n            case \"string\":\n                valCesium.value = val3js;\n                break;\n            case \"object\":\n                if (val3js instanceof THREE.Vector2) {\n                    if (!valCesium.value.constructor.clone) {\n                        valCesium.value = new Cesium.Cartesian2();\n                    }\n                }\n                if (val3js instanceof THREE.Vector3) {\n                    if (!valCesium.value.constructor.clone) {\n                        valCesium.value = new Cesium.Cartesian3();\n                    }\n                }\n                if (val3js instanceof THREE.Vector4) {\n                    if (!valCesium.value.constructor.clone) {\n                        valCesium.value = new Cesium.Cartesian4();\n                    }\n                }\n                if (val3js instanceof THREE.Matrix3) {\n                    if (!valCesium.value.constructor.clone) {\n                        valCesium.value = new Cesium.Matrix3();\n                    }\n                }\n                if (val3js instanceof THREE.Matrix4) {\n                    if (!valCesium.value.constructor.clone) {\n                        valCesium.value = new Cesium.Matrix4();\n                    }\n                }\n                if (val3js instanceof THREE.Color) {\n                    if (!valCesium.value.constructor.clone) {\n                        valCesium.value = new Cesium.Color(val3js.r, val3js.g, val3js.b, val3js.a);\n                    }\n                } else if (valCesium.value != null && valCesium.value.constructor.clone) {\n                    valCesium.value.constructor.clone(val3js, valCesium.value);\n                } else if (val3js instanceof THREE.Texture) {\n                    if (valCesium.value != val3js.image) {\n                        valCesium.value = val3js.image;\n                        var sampler = {};\n\n                        sampler.magnificationFilter = Cesium.WebGLConstants.LINEAR;\n                        sampler.minificationFilter = Cesium.WebGLConstants.NEAREST_MIPMAP_LINEAR;\n                        sampler.wrapS = Cesium.WebGLConstants.REPEAT;\n                        sampler.wrapT = Cesium.WebGLConstants.REPEAT;\n                        valCesium.sampler = sampler;\n                        valCesium.flipY = val3js.flipY;\n\n                        valCesium.needsUpdate = true;\n                    }\n                } else {\n                    valCesium.value = val3js;\n                }\n                break;\n            default:\n                console.log(\"未知uniform.value类型\");\n                break;\n        }\n    }\n}\n\nexport default MaterialUtils; ",
    "\r\nimport Rotation from './Rotation.js';\r\nimport CSG from '../Util/CSG.js'\r\nimport MeshMaterial from './MeshMaterial.js';\r\nimport GeometryUtils from './GeometryUtils.js';\r\nimport MeshPhongMaterial from './MeshPhongMaterial.js';\r\n\r\n/**\r\n*\r\n*@param {Object|geometry}options \r\n*@param {Cesium.Geometry|Cesium.CSG|THREE.Geometry|THREE.BufferGeometry}options.geometry  \r\n*@param {Cesium.MeshMaterial}options.material  \r\n*@param {Boolean}[options.show=true]  \r\n*@param {Cesium.Cartesian3}[options.position]\r\n*@param {Cesium.Rotation}[options.rotation]\r\n*@param {Cesium.Cartesian3}[options.scale]   \r\n*@param {{modelMatrix:Cesium.Matrix4,show:boolean}[]}[options.instances]\r\n*@param {Cesium.MeshMaterial}[material]\r\n*@param {{modelMatrix:Cesium.Matrix4,show:boolean}[]}[instances]\r\n*@param {{name:string,default:number|Cesium.Cartesian2|Cesium.Cartesian3|Cesium.Cartesian4|Cesium.Color}[]}[instancedAttributes]\r\n*\r\n*@property {Cesium.Geometry}geometry  \r\n*@property {Cesium.MeshMaterial}material\r\n*@property {Boolean}show  \r\n*@property {Cesium.Cartesian3}position\r\n*@property {Cesium.VolumeRendering.Rotation}rotation\r\n*@property {Cesium.Cartesian3}scale   \r\n*@property {Boolean}needUpdate \r\n*@property {Cesium.Mesh|Cesium.LOD}parent \r\n*@property {{modelMatrix:Cesium.Matrix4}[]}instances\r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*@example\r\n    //1.\r\n    var mesh=new Mesh(geomertry,material);\r\n\r\n    //2.\r\n    var mesh2=new Mesh({\r\n        geomertry:geomertry2,\r\n        material:material2,\r\n        position:position2\r\n    });\r\n\r\n*/\r\nfunction Mesh(options) {\r\n    if (Mesh.isGeometrySupported(options)) {\r\n        var geometry = options;\r\n\r\n        options = {\r\n            geometry: geometry,\r\n            material: arguments[1],\r\n            instances: arguments[2],\r\n            instancedAttributes: arguments[3]\r\n        };\r\n    }\r\n    if (!options || !options.geometry) {\r\n        throw new Error(\"geometry是必须参数\");\r\n    }\r\n    if (!Mesh.isGeometrySupported(options.geometry)) {\r\n        throw new Error(\"暂不支持此类型的geometry\");\r\n    }\r\n\r\n    if (GeometryUtils.isGeometry3js(options.geometry)) {\r\n        options.geometry = GeometryUtils.fromGeometry3js(options.geometry);\r\n    } else if (options.geometry instanceof CSG) {\r\n        if (options.geometry.polygons.length == 0) {\r\n            options.show = false;\r\n        }\r\n        options.geometry = CSG.fromCSG(options.geometry);\r\n    } else if (typeof options.geometry.constructor.createGeometry == 'function') {\r\n        options.geometry = options.geometry.constructor.createGeometry(options.geometry);\r\n    }\r\n\r\n    this.uuid = Cesium.createGuid();\r\n    this.show = Cesium.defaultValue(options.show, true);\r\n    this._geometry = options.geometry;\r\n    this._material = Cesium.defaultValue(options.material, new MeshMaterial());\r\n    this._position = Cesium.defaultValue(options.position, new Cesium.Cartesian3(0, 0, 0));\r\n    this._scale = Cesium.defaultValue(options.scale, new Cesium.Cartesian3(1, 1, 1));\r\n    this._rotation = Cesium.defaultValue(options.rotation, { axis: new Cesium.Cartesian3(0, 0, 1), angle: 0 });\r\n    this._rotation = new Rotation(this._rotation.axis, this._rotation.angle);\r\n    this._needsUpdate = false;\r\n    this._modelMatrix = new Cesium.Matrix4();\r\n    Cesium.Matrix4.clone(Cesium.Matrix4.IDENTITY, this._modelMatrix);\r\n\r\n    //用于设置旋转，优先级大于rotation\r\n    this.quaternion = null;\r\n\r\n    this._modelMatrixNeedsUpdate = true;\r\n    this._onNeedUpdateChanged = function () {\r\n        this.modelMatrixNeedsUpdate = true;\r\n    };\r\n    this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n    this._drawCommand = null;\r\n    this._children = [];\r\n    this._parent = null;\r\n    this._instances = null;\r\n    this._center = this._position.clone();\r\n    this.instancedAttributes = options.instancedAttributes || [];\r\n    if (options.instances && options.instances.length) {\r\n        this._instances = [];\r\n        options.instances.forEach(function (instance) {\r\n            this.addInstance(instance);\r\n        }, this);\r\n    }\r\n\r\n    this.userData = {};\r\n\r\n    if (!this._geometry.attributes.normal\r\n        && this.material instanceof MeshPhongMaterial\r\n        && this._geometry.primitiveType == Cesium.PrimitiveType.TRIANGLES\r\n    ) {\r\n        Cesium.GeometryPipeline.computeNormal(this._geometry);\r\n        //GeometryUtils.computeVertexNormals(this._geometry);\r\n    }\r\n\r\n    if (this._material && this._material.addReference) {\r\n        this._material.addReference();\r\n    }\r\n}\r\n\r\nMesh.isGeometrySupported = function (geometry) {\r\n    var supported = (geometry instanceof Cesium.Geometry\r\n        || geometry instanceof CSG\r\n        || typeof geometry.constructor.createGeometry == 'function'\r\n        || GeometryUtils.isGeometry3js(geometry));\r\n    return supported;\r\n}\r\n\r\n/**\r\n * \r\n * @param {object}instance\r\n * @param {Cesium.Matrix4}instance.modelMatrix\r\n * @param {boolean}[instance.show=true]\r\n */\r\nMesh.prototype.addInstance = function (instance) {\r\n    this._instances = this._instances || [];\r\n    instance.show = Cesium.defaultValue(instance.show, true);\r\n    instance.primitive = this;\r\n    instance.boundingSphere = new Cesium.BoundingSphere(new Cesium.Cartesian3(), this.geometry.boundingSphere ? this.geometry.boundingSphere.radius : 0)\r\n\r\n    Cesium.Matrix4.getTranslation(instance.modelMatrix, instance.boundingSphere.center)\r\n\r\n    instance.id = instance.id || Cesium.createGuid();\r\n    instance.instanceId = this._instances.length;\r\n\r\n    this.instancedAttributes.forEach(function (attr) {\r\n        if (!instance[attr.name]) {\r\n            instance[attr.name] = attr.default;\r\n        }\r\n    })\r\n\r\n    this._instances.push(instance);\r\n\r\n    return instance;\r\n}\r\n\r\n/**\r\n*\r\n*@param {Cesium.Mesh|Cesium.LOD}node\r\n*@param {Cesium.Mesh~TraverseCallback}callback\r\n*/\r\nMesh.traverse = function (node, callback) {\r\n    callback(node);\r\n    if (node.children) {\r\n        node.children.forEach(function (child) {\r\n            callback(child);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/**\r\n *  \r\n * @callback Cesium.Mesh~TraverseCallback\r\n * @param {Cesium.Mesh|Cesium.LOD}node\r\n */\r\n\r\nObject.defineProperties(Mesh.prototype, {\r\n    instances: {\r\n        get: function () {\r\n            return this._instances;\r\n        }\r\n    },\r\n    modelMatrix: {\r\n        get: function () {\r\n            return this._modelMatrix;\r\n        }\r\n    },\r\n    parent: {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        set: function (val) {\r\n            this._parent = val;\r\n            this.modelMatrixNeedsUpdate = true;\r\n\r\n        }\r\n    },\r\n    modelMatrixNeedsUpdate: {\r\n        get: function () {\r\n            return this._modelMatrixNeedsUpdate;\r\n        },\r\n        set: function (val) {\r\n            this._modelMatrixNeedsUpdate = val;\r\n            if (this._modelMatrixNeedsUpdate) {\r\n                Mesh.traverse(this, function (mesh) {\r\n                    mesh._modelMatrixNeedsUpdate = val;\r\n                });\r\n            }\r\n        }\r\n    },\r\n    children: {\r\n        get: function () {\r\n            return this._children;\r\n        },\r\n        set: function (val) {\r\n            this._children = val;\r\n            this._needsUpdate = true;\r\n        }\r\n    },\r\n    geometry: {\r\n        get: function () {\r\n            return this._geometry;\r\n        },\r\n        set: function (val) {\r\n            this._geometry = val;\r\n            this._needsUpdate = true;\r\n            this.modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n    material: {\r\n        get: function () {\r\n            return this._material;\r\n        },\r\n        set: function (val) {\r\n            this._material = val;\r\n            this._needsUpdate = true;\r\n        }\r\n    },\r\n    needsUpdate: {\r\n        get: function () {\r\n            return this._needsUpdate;\r\n        },\r\n        set: function (val) {\r\n            this._needsUpdate = val;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        set: function (val) {\r\n            if (val != this._rotation) {\r\n                this._rotation = val;\r\n                // this._needUpdate = true;\r\n                this.modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n            this._rotation = val;\r\n            this._rotation.paramChanged.addEventListener(this._onNeedUpdateChanged);\r\n        }\r\n    },\r\n    position: {\r\n        get: function () {\r\n            return this._position;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._position.x || val.y != this._position.y || val.z != this._position.z) {\r\n                this._position = val;\r\n                //this._needsUpdate = true;\r\n                this.modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._position = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._scale.x || val.y != this._scale.y || val.z != this._scale.z) {\r\n                this._scale = val;\r\n                // this._needsUpdate = true; \r\n                this.modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._scale = val;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n*@oaram {Cesium.Mesh|Cesium.LOD}child\r\n*/\r\nMesh.prototype.add = function (mesh) {\r\n\r\n    if (mesh.parent !== this) {\r\n        mesh.parent = this;\r\n    }\r\n    this._children.push(mesh);\r\n}\r\n\r\nMesh.prototype.destroy = function () {\r\n    if (this.material && this.material.removeReference) {\r\n        this.material.removeReference();\r\n    }\r\n    if (this.geometry) {\r\n        Cesium.destroyObject(this.geometry);\r\n        delete this.geometry;\r\n    }\r\n}\r\n\r\nexport default Mesh;",
    "﻿\r\nimport defineProperty from '../Util/defineProperty.js';\r\n\r\n/**\r\n*\r\n*@param {Object}options\r\n*@param {Object}[options.uniforms]\r\n*@param {Object}[options.uniformStateUsed]\r\n*@param {Boolean}[options.translucent]\r\n*@param {Boolean}[options.wireframe]\r\n*@param {Enum}[options.side=Cesium.MeshMaterial.Sides.DOUBLE]\r\n*@param {String|Cesium.Color}[options.defaultColor=Cesium.Color.WHITE]\r\n*@param {String}[options.vertexShader]\r\n*@param {String}[options.fragmentShader]\r\n*@param {string}[options.pickColorQualifier]\r\n*\r\n*\r\n*@property {Object}uniforms\r\n*@property {Object}uniformStateUsed\r\n*@property {Boolean}translucent\r\n*@property {Boolean}wireframe\r\n*@property {Enum}side\r\n*@property {String|Cesium.Color}defaultColor\r\n*@property {String}vertexShader\r\n*@property {String}fragmentShader\r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction MeshMaterial(options) {\r\n    options = Cesium.defaultValue(options, {});\r\n    options.uniforms = Cesium.defaultValue(options.uniforms, {});\r\n    var that = this;\r\n    this.referenceCount = 0;\r\n    this._disposeCallbacks = [];\r\n\r\n    this._uuid = Cesium.createGuid();\r\n\r\n    function initUniform(srcUniforms) {\r\n        var _uniforms = {};\r\n\r\n        for (var i in srcUniforms) {\r\n            if (srcUniforms.hasOwnProperty(i) && Cesium.defined(srcUniforms[i])) {\r\n                var item = srcUniforms[i];\r\n\r\n                var val = {};\r\n                val.needsUpdate = true;\r\n                val._disposeCallbacks = [];\r\n                val.onDispose = function (disposeCallback) {\r\n                    if (this._disposeCallbacks.indexOf(disposeCallback) == -1) {\r\n                        this._disposeCallbacks.push(disposeCallback);\r\n                    }\r\n                }\r\n                val.destroy = function () {\r\n                    for (var i = 0; i < this._disposeCallbacks.length; i++) {\r\n                        var disposeCallback = this._disposeCallbacks[i];\r\n                        disposeCallback.call(this);\r\n                    }\r\n\r\n                    this._disposeCallbacks.splice(0);\r\n                }\r\n\r\n                if (Array.isArray(item) && item.length >= 3 && item.length <= 4 && typeof item[0] === 'number') {\r\n                    srcUniforms[i] = new Cesium.Color(srcUniforms[i][0], srcUniforms[i][1], srcUniforms[i][2], srcUniforms[i][3]);\r\n                } else if (Cesium.defined(item.value)) {\r\n                    for (var n in item) {\r\n                        if (item.hasOwnProperty(n)) {\r\n                            val[n] = item[n];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (srcUniforms[i].hasOwnProperty(\"uuid\")) {\r\n                    defineProperty(val, \"uuid\", srcUniforms[i].uuid, function (changed, owner) {\r\n                        owner.needsUpdate = changed;\r\n                    });\r\n                } else {\r\n                    defineProperty(val, \"uuid\", Cesium.createGuid(), function (changed, owner) {\r\n                        owner.needsUpdate = changed;\r\n                    });\r\n                }\r\n                if (srcUniforms[i].hasOwnProperty(\"value\")) {\r\n                    defineProperty(val, \"value\", srcUniforms[i].value, function (changed, owner) {\r\n                        owner.needsUpdate = changed;\r\n                    });\r\n                } else {\r\n                    defineProperty(val, \"value\", srcUniforms[i], function (changed, owner) {\r\n                        owner.needsUpdate = changed;\r\n                    });\r\n                }\r\n                _uniforms[i] = val;\r\n                //defineProperty(_uniforms, i, val, function (changed) {\r\n                //    that.needsUpdate = changed;\r\n                //});\r\n            }\r\n        }\r\n        return _uniforms;\r\n    }\r\n    this._defaultColor = Cesium.defaultValue(options.defaultColor, Cesium.Color.WHITE);\r\n    if (typeof this._defaultColor == 'string') {\r\n        this._defaultColor = Cesium.Color.fromCssColorString(this._defaultColor);\r\n    }\r\n\r\n    this._pickedColor = Cesium.defaultValue(options.pickedColor, Cesium.Color.YELLOW);\r\n    if (typeof this._pickedColor == 'string') {\r\n        this._pickedColor = Cesium.Color.fromCssColorString(this._pickedColor);\r\n    }\r\n    this._picked = Cesium.defaultValue(options.picked, 0);\r\n    options.uniforms.pickedColor = this._pickedColor;\r\n    options.uniforms.defaultColor = this._defaultColor;\r\n    options.uniforms.picked = this._picked;\r\n\r\n    this._uniforms = initUniform(options.uniforms);\r\n\r\n    function onPropertyChanged(changed) {\r\n        that.needsUpdate = changed;\r\n    }\r\n\r\n    defineProperty(this, \"translucent\", Cesium.defaultValue(options.translucent, false), onPropertyChanged);\r\n    defineProperty(this, \"wireframe\", Cesium.defaultValue(options.wireframe, false), onPropertyChanged);\r\n    defineProperty(this, \"side\", Cesium.defaultValue(options.side, MeshMaterial.Sides.DOUBLE), onPropertyChanged);\r\n\r\n    defineProperty(this, \"uniformStateUsed\", Cesium.defaultValue(options.uniformStateUsed, [{\r\n        uniformStateName: \"model\",\r\n        glslVarName: \"modelMatrix\"\r\n    }]), onPropertyChanged);\r\n    defineProperty(this, \"uniforms\", this._uniforms, function () {\r\n        that._uniforms = initUniform(that._uniforms);\r\n    });\r\n\r\n\r\n    this._vertexShader = '//#inner\\n void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n}';\r\n    this._fragmentShader = '//#inner' + this._uuid + '\\n uniform float picked;\\n uniform vec4  pickedColor;\\n uniform vec4  defaultColor;\\n void main() {\\ngl_FragColor = defaultColor;\\n if(picked!=0.0){\\ngl_FragColor = pickedColor;}}';// vec4( ' + this._defaultColor.red + ',' + this._defaultColor.green + ',' + this._defaultColor.blue + ',' + this._defaultColor.alpha + ');\\n}';\r\n\r\n    defineProperty(this, \"vertexShader\", Cesium.defaultValue(options.vertexShader, this._vertexShader), onPropertyChanged);\r\n    defineProperty(this, \"fragmentShader\", Cesium.defaultValue(options.fragmentShader, this._fragmentShader), onPropertyChanged);\r\n\r\n    this.depthTest = Cesium.defaultValue(options.depthTest, true);\r\n    this.depthMask = Cesium.defaultValue(options.depthMask, true);\r\n    this.blending = Cesium.defaultValue(options.blending, true);\r\n\r\n    this.allowPick = Cesium.defaultValue(options.allowPick, true);\r\n    this.pickColorQualifier = Cesium.defaultValue(options.pickColorQualifier, 'uniform');\r\n    this.needsUpdate = true;\r\n}\r\n\r\n\r\nObject.defineProperties(MeshMaterial.prototype, {\r\n    uuid: {\r\n        get: function () {\r\n            return this._uuid;\r\n        }\r\n    },\r\n    defaultColor: {\r\n        set: function (val) {\r\n            if (typeof val == 'string') {\r\n                val = Cesium.Color.fromCssColorString(val);\r\n            }\r\n            Cesium.Color.clone(val, this._defaultColor);\r\n        },\r\n        get: function () {\r\n            return this._defaultColor;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n*\r\n*@memberof Cesium.MeshMaterial\r\n*@property {Enum}FRONT\r\n*@property {Enum}BACK\r\n*@property {Enum}DOUBLE\r\n*/\r\nMeshMaterial.Sides = {\r\n    FRONT: 3,\r\n    BACK: 1,\r\n    DOUBLE: 2\r\n}\r\n\r\nMeshMaterial.prototype.onDispose = function (disposeCallback) {\r\n    if (this._disposeCallbacks.indexOf(disposeCallback) == -1) {\r\n        this._disposeCallbacks.push(disposeCallback);\r\n    }\r\n}\r\n\r\nMeshMaterial.prototype.addReference = function () {\r\n    this.referenceCount++\r\n}\r\n\r\nMeshMaterial.prototype.removeReference = function () {\r\n    this.referenceCount--\r\n    if (this.referenceCount <= 0) {\r\n        for (var i = 0; i < this._disposeCallbacks.length; i++) {\r\n            var disposeCallback = this._disposeCallbacks[i];\r\n            disposeCallback.call(this);\r\n        }\r\n\r\n        this._disposeCallbacks.splice(0);\r\n        this.destroy();\r\n    }\r\n}\r\n\r\nMeshMaterial.prototype.destroy = function () {\r\n    for (var key in this._uniforms) {\r\n        if (this._uniforms.hasOwnProperty(key)) {\r\n            this._uniforms[key].destroy && this._uniforms[key].destroy()\r\n        }\r\n    }\r\n}\r\nexport default MeshMaterial;",
    "\r\nimport MeshMaterial from './MeshMaterial.js';\r\nimport phong_frag from './Shaders/phong_frag.js';\r\nimport phong_vert from './Shaders/phong_vert.js';\r\n\r\n/**\r\n* \r\n*@constructor\r\n*@memberof Cesium\r\n*@extends Cesium.MeshMaterial\r\n*/\r\nfunction MeshPhongMaterial(options) {\r\n    options = options ? options : {};\r\n\r\n    options.uniforms = options.uniforms ? options.uniforms : {\r\n        shininess: -1,\r\n        emission: [0, 0, 0],\r\n        specular: 0\r\n    };\r\n    options.uniforms.shininess = Cesium.defaultValue(options.uniforms.shininess, 0);\r\n    options.uniforms.emission = Cesium.defaultValue(options.uniforms.emission, [0.2, 0.2, 0.2]);\r\n    options.uniforms.specular = Cesium.defaultValue(options.uniforms.specular, 0);\r\n\r\n    MeshMaterial.apply(this, arguments);\r\n    this.vertexShader = phong_vert;\r\n    this.fragmentShader = phong_frag;\r\n}\r\nMeshPhongMaterial.prototype = Object.create(MeshMaterial.prototype);\r\nexport default MeshPhongMaterial;",
    "﻿\nimport MaterialUtils from './MaterialUtils.js';\nimport GeometryUtils from './GeometryUtils.js';\nimport Mesh from './Mesh.js';\n\n/**\n*\n*@constructor\n*@memberof Cesium\n*/\nfunction MeshUtils() {\n\n}\n\n/**\n*\n*@param {THREE.Mesh}mesh3js\n*@return {Cesium.Mesh}\n*/\nMeshUtils.fromMesh3js = function (mesh3js) {\n    if (!MeshUtils.isMesh3js(mesh3js)) {\n        return undefined;\n    }\n    var geometry = mesh3js.geometry;\n    if (GeometryUtils.isGeometry3js(geometry)) {\n        geometry = GeometryUtils.fromGeometry3js(geometry);\n        //if (mesh3js.material.type === \"MeshNormalMaterial\" || mesh3js.material.type === \"MeshPhongMaterial\") {\n        //    GeometryUtils.computeVertexNormals(geometry)\n        //}\n    }\n    var material = mesh3js.material;\n    if (MaterialUtils.isMaterial3js(material)) {\n        material = MaterialUtils.fromMaterial3js(material);\n    }\n    var mesh = new Mesh({\n        geometry: geometry,\n        material: material,\n        position: mesh3js.position,\n        scale: mesh3js.scale\n    });\n    mesh.quaternion = mesh3js.quaternion;\n    return mesh;\n}\n/**\n *\n *@param {Object}mesh\n *@return {Boolean}\n */\nMeshUtils.isMesh3js = function (mesh) {\n    return typeof THREE !== 'undefined' && mesh instanceof THREE.Mesh;\n}\nexport default MeshUtils; ",
    "\r\nimport RendererUtils from './RendererUtils.js';\r\nimport MeshMaterial from './MeshMaterial.js';\r\nimport ShaderChunk from './Shaders/ShaderChunk.js';\r\nimport Rotation from './Rotation.js';\r\nimport FramebufferTexture from './FramebufferTexture.js';\r\nimport LOD from './LOD.js';\r\nimport ReferenceMesh from './ReferenceMesh.js';\r\nimport TIFFParser from '../ThirdParty/tiff-js/tiff.js';\r\nimport Path from '../Util/Path.js';\r\nimport MaterialUtils from './MaterialUtils.js';\r\nimport MeshUtils from './MeshUtils.js';\r\nimport ShaderUtils from './ShaderUtils.js';\r\n\r\nvar Matrix4;//= Cesium.Matrix4;\r\nvar DrawCommand;//= Cesium.DrawCommand;\r\nvar defined;//= Cesium.defined;\r\nvar GeometryPipeline;//= Cesium.GeometryPipeline;\r\nvar BufferUsage;//= Cesium.BufferUsage;\r\nvar BlendingState;//= Cesium.BlendingState;\r\nvar VertexArray;//= Cesium.VertexArray;\r\nvar ShaderProgram;//= Cesium.ShaderProgram;\r\nvar DepthFunction;//= Cesium.DepthFunction;\r\nvar CullFace;//= Cesium.CullFace;\r\nvar RenderState;//= Cesium.RenderState;\r\nvar defaultValue;//= Cesium.defaultValue;\r\nvar Texture;//= Cesium.Texture;\r\nvar PixelFormat;//= Cesium.PixelFormat; \r\nvar Cartesian3;//= Cesium.Cartesian3;\r\nvar Cartesian2;//= Cesium.Cartesian2;\r\nvar Cartesian4;//= Cesium.Cartesian4; \r\nvar CesiumMath;//= Cesium.Math;\r\nvar Color;//= Cesium.Color;\r\nvar Buffer;//= Cesium.Buffer;\r\nvar ComponentDatatype;//= Cesium.ComponentDatatype;\r\nvar loadArrayBuffer;\r\nvar loadImage;\r\n\r\nvar scratchMatrix;\r\nvar world2localMatrix;\r\nvar surfacePointLocal;\r\nvar rayDir;\r\nvar pos;\r\nvar rayOriginLocal;\r\nvar scratchRay;\r\n\r\nvar constantsHasInit = false;\r\nfunction initConstants() {\r\n    if (constantsHasInit) return;\r\n    constantsHasInit = true;\r\n\r\n    Matrix4 = Cesium.Matrix4;\r\n    DrawCommand = Cesium.DrawCommand;\r\n    defined = Cesium.defined;\r\n    GeometryPipeline = Cesium.GeometryPipeline;\r\n    BufferUsage = Cesium.BufferUsage;\r\n    BlendingState = Cesium.BlendingState;\r\n    VertexArray = Cesium.VertexArray;\r\n    ShaderProgram = Cesium.ShaderProgram;\r\n    DepthFunction = Cesium.DepthFunction;\r\n    CullFace = Cesium.CullFace;\r\n    RenderState = Cesium.RenderState;\r\n    defaultValue = Cesium.defaultValue;\r\n    Texture = Cesium.Texture;\r\n    PixelFormat = Cesium.PixelFormat;\r\n    Cartesian3 = Cesium.Cartesian3;\r\n    Cartesian2 = Cesium.Cartesian2;\r\n    Cartesian4 = Cesium.Cartesian4;\r\n    CesiumMath = Cesium.Math;\r\n    Color = Cesium.Color;\r\n    Buffer = Cesium.Buffer;\r\n    ComponentDatatype = Cesium.ComponentDatatype;\r\n\r\n    // Cesium.loadText = Cesium.Resource.fetchText;\r\n    // Cesium.loadJson = Cesium.Resource.fetchJson;\r\n    // Cesium.loadBlob = Cesium.Resource.fetchBlob;\r\n    loadArrayBuffer = Cesium.loadArrayBuffer || Cesium.Resource.fetchArrayBuffer;\r\n    loadImage = Cesium.loadImage || Cesium.Resource.fetchImage;\r\n\r\n    Cesium.Cartesian3.prototype.set = function (x, y, z) {\r\n        this.x = x; this.y = y; this.z = z;\r\n    }\r\n    Cesium.Cartesian3.prototype.copy = function (src) {\r\n        this.x = src.x; this.y = src.y; this.z = src.z;\r\n    }\r\n\r\n    Cesium.Cartesian2.prototype.set = function (x, y) {\r\n        this.x = x; this.y = y;\r\n    }\r\n    Cesium.Cartesian2.prototype.copy = function (src) {\r\n        this.x = src.x; this.y = src.y;\r\n    }\r\n    Cesium.Quaternion.prototype.set = function (x, y, z, w) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n    Cesium.Quaternion.prototype.copy = function (src) {\r\n        this.x = src.x; this.y = src.y; this.z = src.z; this.w = src.w;\r\n    }\r\n\r\n    scratchMatrix = new Matrix4();\r\n    world2localMatrix = new Cesium.Matrix4();\r\n    surfacePointLocal = new Cesium.Cartesian3();\r\n    rayDir = new Cesium.Cartesian3();\r\n    pos = new Cesium.Cartesian3();\r\n    rayOriginLocal = new Cesium.Cartesian3();\r\n    scratchRay = new Cesium.Ray();\r\n}\r\n\r\nfunction getVertexBufferTypedArray(collection) {\r\n\r\n    var instances = collection._availableInstances;\r\n    var instancesLength = instances.length;\r\n    var collectionCenter = collection._center;\r\n\r\n    var vertexSizeInFloats = 12;\r\n\r\n    var bufferData = collection._vertexBufferTypedArray;\r\n    if (!defined(bufferData) || instancesLength * vertexSizeInFloats > bufferData.length) {\r\n        bufferData = new Float32Array(instancesLength * vertexSizeInFloats);\r\n    }\r\n\r\n    // Hold onto the buffer data so we don't have to allocate new memory every frame.\r\n    collection._vertexBufferTypedArray = bufferData;\r\n\r\n    for (var i = 0; i < instancesLength; ++i) {\r\n\r\n        var modelMatrix = instances[i].modelMatrix;\r\n\r\n        // Instance matrix is relative to center\r\n        var instanceMatrix = Matrix4.clone(modelMatrix, scratchMatrix);\r\n        instanceMatrix[12] -= collectionCenter.x;\r\n        instanceMatrix[13] -= collectionCenter.y;\r\n        instanceMatrix[14] -= collectionCenter.z;\r\n\r\n        var offset = i * vertexSizeInFloats;\r\n\r\n        // First three rows of the model matrix\r\n        bufferData[offset + 0] = instanceMatrix[0];\r\n        bufferData[offset + 1] = instanceMatrix[4];\r\n        bufferData[offset + 2] = instanceMatrix[8];\r\n        bufferData[offset + 3] = instanceMatrix[12];\r\n        bufferData[offset + 4] = instanceMatrix[1];\r\n        bufferData[offset + 5] = instanceMatrix[5];\r\n        bufferData[offset + 6] = instanceMatrix[9];\r\n        bufferData[offset + 7] = instanceMatrix[13];\r\n        bufferData[offset + 8] = instanceMatrix[2];\r\n        bufferData[offset + 9] = instanceMatrix[6];\r\n        bufferData[offset + 10] = instanceMatrix[10];\r\n        bufferData[offset + 11] = instanceMatrix[14];\r\n    }\r\n\r\n    return bufferData;\r\n}\r\n\r\nfunction getPickIdBufferTypedArray(collection, context) {\r\n    var i;\r\n    var instances = collection._availableInstances;\r\n    var instancesLength = instances.length\r\n\r\n    var pickIdBuffer = collection._pickIdBufferTypedArray;\r\n    if (!pickIdBuffer || instancesLength * 4 > pickIdBuffer.length) {\r\n        pickIdBuffer = new Uint8Array(instancesLength * 4);\r\n    }\r\n    collection._pickIdBufferTypedArray = pickIdBuffer;\r\n\r\n    for (i = 0; i < instancesLength; ++i) {\r\n        var instance = instances[i];\r\n        var pickId = collection._pickIds[instance.instanceId];\r\n        if (!pickId) {\r\n            pickId = context.createPickId(instance);\r\n            collection._pickIds[instance.instanceId] = pickId;\r\n        }\r\n        var pickColor = pickId.color;\r\n        var offset = i * 4;\r\n        pickIdBuffer[offset] = Color.floatToByte(pickColor.red);\r\n        pickIdBuffer[offset + 1] = Color.floatToByte(pickColor.green);\r\n        pickIdBuffer[offset + 2] = Color.floatToByte(pickColor.blue);\r\n        pickIdBuffer[offset + 3] = Color.floatToByte(pickColor.alpha);\r\n    }\r\n    return pickIdBuffer;\r\n}\r\n\r\nfunction getInstancedAttribTypedArray(collection, instancedAttribute) {\r\n    var i;\r\n    var instances = collection._availableInstances;\r\n    var instancesLength = instances.length;\r\n    var name = instancedAttribute.name;\r\n    var componentsPerAttribute;\r\n    var isColorValue = instancedAttribute.default instanceof Color\r\n    if (typeof instancedAttribute.default == 'number') {\r\n        componentsPerAttribute = 1;\r\n    }\r\n    else if (instancedAttribute.default instanceof Cartesian2) {\r\n        componentsPerAttribute = 2;\r\n    }\r\n    else if (instancedAttribute.default instanceof Cartesian3) {\r\n        componentsPerAttribute = 3;\r\n    }\r\n    else if (instancedAttribute.default instanceof Cartesian4) {\r\n        componentsPerAttribute = 4;\r\n    } else if (isColorValue) {\r\n        componentsPerAttribute = 4;\r\n    }\r\n\r\n    var bufferData = collection['_' + name + 'BufferTypedArray'];\r\n    if (!bufferData || instancesLength * componentsPerAttribute > bufferData.length) {\r\n        if (isColorValue) {\r\n            bufferData = new Uint8Array(instancesLength * componentsPerAttribute);\r\n        }\r\n        else {\r\n            bufferData = new Float32Array(instancesLength * componentsPerAttribute);\r\n        }\r\n    }\r\n    collection['_' + name + 'BufferTypedArray'] = bufferData;\r\n\r\n    if (isColorValue) {\r\n        for (i = 0; i < instancesLength; ++i) {\r\n            var instance = instances[i];\r\n            var val = instance[name];\r\n            var offset = i * componentsPerAttribute;\r\n\r\n            bufferData[offset] = Color.floatToByte(val.red);\r\n            bufferData[offset + 1] = Color.floatToByte(val.green);\r\n            bufferData[offset + 2] = Color.floatToByte(val.blue);\r\n            bufferData[offset + 3] = Color.floatToByte(val.alpha);\r\n        }\r\n    } else if (typeof instancedAttribute.default == 'number') {\r\n        for (i = 0; i < instancesLength; ++i) {\r\n            var instance = instances[i];\r\n            var val = instance[name];\r\n            bufferData[i] = val;\r\n        }\r\n    }\r\n    else if (instancedAttribute.default instanceof Cartesian2) {\r\n\r\n        for (i = 0; i < instancesLength; ++i) {\r\n            var instance = instances[i];\r\n            var val = instance[name];\r\n            var offset = i * componentsPerAttribute;\r\n            bufferData[offset] = val.x;\r\n            bufferData[offset + 1] = val.y;\r\n        }\r\n    }\r\n    else if (instancedAttribute.default instanceof Cartesian3) {\r\n\r\n        for (i = 0; i < instancesLength; ++i) {\r\n            var instance = instances[i];\r\n            var val = instance[name];\r\n            var offset = i * componentsPerAttribute;\r\n            bufferData[offset] = val.x;\r\n            bufferData[offset + 1] = val.y;\r\n            bufferData[offset + 2] = val.z;\r\n        }\r\n    }\r\n    else if (instancedAttribute.default instanceof Cartesian4) {\r\n        for (i = 0; i < instancesLength; ++i) {\r\n            var instance = instances[i];\r\n            var val = instance[name];\r\n            var offset = i * componentsPerAttribute;\r\n            bufferData[offset] = val.x;\r\n            bufferData[offset + 1] = val.y;\r\n            bufferData[offset + 2] = val.z;\r\n            bufferData[offset + 3] = val.w;\r\n        }\r\n    }\r\n    return bufferData;\r\n\r\n}\r\n\r\nfunction createInstancedAttributes(collection, context, vertexArrayAttributes, attributeLocations, maxAttribLocation) {\r\n    var instancedAttributes = collection.instancedAttributes;\r\n    instancedAttributes.forEach(function (instancedAttribute) {\r\n\r\n        var name = instancedAttribute.name\r\n        attributeLocations[name] = ++maxAttribLocation\r\n\r\n        var buffer = Buffer.createVertexBuffer({\r\n            context: context,\r\n            typedArray: getInstancedAttribTypedArray(collection, instancedAttribute),\r\n            usage: BufferUsage.STATIC_DRAW\r\n        });\r\n        instancedAttribute._buffer = buffer;\r\n\r\n        var attribute = {\r\n            index: attributeLocations[instancedAttribute.name],\r\n            vertexBuffer: buffer,\r\n            componentsPerAttribute: 4,\r\n            componentDatatype: ComponentDatatype.FLOAT,\r\n            normalize: false,\r\n            offsetInBytes: 0,\r\n            strideInBytes: 0,\r\n            instanceDivisor: 1\r\n        }\r\n        if (typeof instancedAttribute.default == 'number') {\r\n            attribute.componentsPerAttribute = 1;\r\n        }\r\n        else if (instancedAttribute.default instanceof Cartesian2) {\r\n            attribute.componentsPerAttribute = 2;\r\n        }\r\n        else if (instancedAttribute.default instanceof Cartesian3) {\r\n            attribute.componentsPerAttribute = 3;\r\n        }\r\n        else if (instancedAttribute.default instanceof Cartesian4) {\r\n            attribute.componentsPerAttribute = 4;\r\n        } else if (instancedAttribute.default instanceof Color) {\r\n            attribute.componentDatatype = ComponentDatatype.UNSIGNED_BYTE;\r\n            attribute.normalize = true;\r\n            attribute.componentsPerAttribute = 4;\r\n        }\r\n\r\n        vertexArrayAttributes.push(attribute);\r\n\r\n    })\r\n\r\n    return maxAttribLocation;\r\n\r\n}\r\n\r\nfunction createVertexBuffer(collection, context) {\r\n    var pickIdBuffer = getPickIdBufferTypedArray(collection, context);\r\n    collection._pickIdBuffer = Buffer.createVertexBuffer({\r\n        context: context,\r\n        typedArray: pickIdBuffer,\r\n        usage: BufferUsage.STATIC_DRAW\r\n    });\r\n    var vertexBufferTypedArray = getVertexBufferTypedArray(collection);\r\n    collection._vertexBuffer = Buffer.createVertexBuffer({\r\n        context: context,\r\n        typedArray: vertexBufferTypedArray,\r\n        usage: BufferUsage.STATIC_DRAW\r\n    });\r\n}\r\n\r\nfunction copyFromBufferView(vertexBuffer, arrayView, offsetInBytes) {\r\n    offsetInBytes = offsetInBytes || 0;\r\n    var gl = vertexBuffer._gl;\r\n    var target = vertexBuffer._bufferTarget;\r\n    gl.bindBuffer(target, vertexBuffer._buffer);\r\n    gl.bufferData(target, arrayView, gl.DYNAMIC_DRAW);\r\n    gl.bindBuffer(target, null);\r\n\r\n}\r\nfunction updateVertexBuffer(collection, context) {\r\n    var vertexBufferTypedArray = getVertexBufferTypedArray(collection);\r\n    copyFromBufferView(collection._vertexBuffer, vertexBufferTypedArray);\r\n\r\n    var pickIdBufferTypedArray = getPickIdBufferTypedArray(collection, context);\r\n    copyFromBufferView(collection._pickIdBuffer, pickIdBufferTypedArray);\r\n\r\n    var instancedAttributes = collection.instancedAttributes;\r\n    instancedAttributes.forEach(function (instancedAttribute) {\r\n        var bufferTypedArray = getInstancedAttribTypedArray(collection, instancedAttribute);\r\n        copyFromBufferView(instancedAttribute._buffer, bufferTypedArray);\r\n    })\r\n}\r\n\r\nfunction createPickIds(collection, context) {\r\n    // PERFORMANCE_IDEA: we could skip the pick buffer completely by allocating\r\n    // a continuous range of pickIds and then converting the base pickId + batchId\r\n    // to RGBA in the shader.  The only consider is precision issues, which might\r\n    // not be an issue in WebGL 2.\r\n    var instances = collection._instances;\r\n    var instancesLength = instances.length;\r\n    var pickIds = new Array(instancesLength);\r\n    for (var i = 0; i < instancesLength; ++i) {\r\n        pickIds[i] = context.createPickId(instances[i]);\r\n    }\r\n    return pickIds;\r\n}\r\n\r\n/**\r\n*\r\n*\r\n*@param {Object}options\r\n*@param {Cesium.Matrix4}[options.modelMatrix=Cesium.Matrix4.IDENTITY]\r\n*@param {Cesium.Cartesian3}[options.up=Cesium.Cartesian3.UNIT_Z]\r\n*@param {Cesium.Cartesian3}[options.position=Cesium.Cartesian3.ZERO]\r\n*@param {Cesium.Cartesian3}[options.scale=new Cartesian3(1, 1, 1)]\r\n*@param {Cesium.Rotation}[options.rotation]\r\n*@param {Boolean}[options.show=true]\r\n*@param {Boolean}[options.showReference=true]\r\n*@param {Cesium.ArrowGeometry}[options.referenceAxisParameter]\r\n*\r\n*@property {Cesium.Matrix4}modelMatrix \r\n*@property {Cesium.Cartesian3}up \r\n*@property {Cesium.Cartesian3}position \r\n*@property {Cesium.Cartesian3}scale \r\n*@property {Cesium.Rotation}rotation \r\n*@property {Boolean}show \r\n*@property {Boolean}showReference\r\n*@property {Boolean}modelMatrixNeedsUpdate\r\n*@property {Cesium.Event}beforeUpdate  \r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*@extends Cesium.Primitive\r\n*\r\n*@example \r\n \r\n    MeshVisualizer = Cesium.MeshVisualizer;\r\n    Mesh = Cesium.Mesh;\r\n    MeshMaterial = Cesium.MeshMaterial; \r\n    FramebufferTexture = Cesium.FramebufferTexture;\r\n\r\n    var center = Cesium.Cartesian3.fromDegrees(homePosition[0], homePosition[1], 50000);\r\n    var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center);\r\n\r\n    var meshVisualizer = new MeshVisualizer({\r\n        modelMatrix: modelMatrix,\r\n    });\r\n    viewer.scene.primitives.add(meshVisualizer);\r\n\r\n\r\n    //示例1：Cesium.Geometry+Cesium.MeshMaterial组合\r\n    var box = Cesium.BoxGeometry.createGeometry(Cesium.BoxGeometry.fromDimensions({\r\n        dimensions: new Cesium.Cartesian3(100000, 50000, 50000),\r\n        vertexFormat: Cesium.VertexFormat.POSITION_ONLY\r\n    }));\r\n    \r\n    var material = new MeshMaterial({\r\n        defaultColor: \"rgba(255,0,0,1.0)\",\r\n        wireframe: false,\r\n        side: MeshMaterial.Sides.DOUBLE\r\n    });\r\n    var boxMesh = new Mesh(box, material);\r\n\r\n    meshVisualizer.add(boxMesh);\r\n\r\n    //示例2：Cesium.CSG+Cesium.MeshMaterial组合，可以用Cesium.CSG做布尔运算并渲染运算结果\r\n\r\n    //首先使用Cesium创建球体\r\n     var sphere = new Cesium.SphereGeometry({\r\n         radius: 50000.0,\r\n         vertexFormat: Cesium.VertexFormat.POSITION_ONLY\r\n     });\r\n     sphere = Cesium.SphereGeometry.createGeometry(sphere);\r\n    \r\n     var sphereMesh = new Mesh(sphere, material);\r\n     sphereMesh.position = new Cesium.Cartesian3(100000, 0, 0)\r\n     meshVisualizer.add(sphereMesh);\r\n\r\n     //将球体对象Cesium.SphereGeometry转成Cesium.CSG实例\r\n     sphere = CSG.toCSG(sphere);\r\n     //将盒子对象转成Cesium.CSG实例\r\n     box = CSG.toCSG(box);\r\n\r\n      //做布尔运算\r\n      var subResult = sphere.subtract(box);\r\n      //渲染运算结果\r\n      var subResultMesh = new Mesh(subResult, material);\r\n      subResultMesh.position = new Cesium.Cartesian3(700000, 0, 0)\r\n      meshVisualizer.add(subResultMesh);\r\n\r\n      //示例3：使用帧缓存作纹理,实际应用中如体绘制，风场流场绘制等等都可以运用此技术\r\n\r\n      function createGeometry() {\r\n        var p1 = new Cesium.Cartesian3(-50000, 50000, 100);\r\n        var p2 = new Cesium.Cartesian3(-50000, -50000, 100);\r\n        var p3 = new Cesium.Cartesian3(50000, -50000, 100);\r\n        var p4 = new Cesium.Cartesian3(50000, 50000, 100);\r\n\r\n        var positions = new Float64Array([\r\n          p1.x, p1.y, p1.z,\r\n          p2.x, p2.y, p2.z,\r\n          p3.x, p3.y, p3.z,\r\n          p4.x, p4.y, p4.z\r\n        ]);\r\n        var indices = new Uint16Array([\r\n          0, 1, 3,\r\n          1, 2, 3,\r\n        ]);\r\n        var sts = new Float32Array([\r\n          1, 1,\r\n          1, 0,\r\n          0, 0,\r\n          0, 1\r\n        ]);\r\n        var geometry = new Cesium.Geometry({\r\n            attributes: {\r\n                position: new Cesium.GeometryAttribute({\r\n                    componentDatatype: Cesium.ComponentDatatype.DOUBLE,\r\n                    componentsPerAttribute: 3,\r\n                    values: positions\r\n                }),\r\n                st: new Cesium.GeometryAttribute({\r\n                    componentDatatype: Cesium.ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute: 2,\r\n                    values: sts\r\n                })\r\n            },\r\n            indices: indices,\r\n            primitiveType: Cesium.PrimitiveType.TRIANGLES,\r\n            boundingSphere: Cesium.BoundingSphere.fromVertices(positions)\r\n        });\r\n\r\n        return geometry;\r\n    }\r\n    //将上文中的盒子渲染到缓存，作为纹理参与createGeometry（）方法创建的几何体渲染过程\r\n    var framebufferTex = new FramebufferTexture(boxMesh);\r\n    var geometry = createGeometry();\r\n    var customMesh = new Mesh(geometry, new MeshMaterial({\r\n\r\n        uniforms: {\r\n            u_textureMap: framebufferTex//Cesium.buildModuleUrl('Widgets/Images/TerrainProviders/STK.png')\r\n        },\r\n        side: MeshMaterial.Sides.DOUBLE,\r\n        vertexShader : \"\\n\\\r\n            \\n\\\r\n            varying vec3 v_position;\\n\\\r\n            varying vec2 v_st;\\n\\\r\n            \\n\\\r\n            void main(void) \\n\\\r\n            {\\n\\\r\n            vec4 pos = u_modelViewMatrix * vec4(position,1.0);\\n\\\r\n            v_position = pos.xyz;\\n\\\r\n            v_st=st;\\n\\\r\n            gl_Position = u_projectionMatrix * pos;\\n\\\r\n            }\",\r\n        fragmentShader : \"varying vec2 v_st;\\\r\n            uniform sampler2D u_textureMap;\\\r\n            void main()\\\r\n            {\\\r\n            gl_FragColor = texture2D(u_textureMap,v_st);\\n\\\r\n            \\\r\n            }\\\r\n            \"\r\n    }));\r\n    customMesh.position = new Cesium.Cartesian3(100000, 0, 0);\r\n    meshVisualizer.add(customMesh);\r\n*/\r\nfunction MeshVisualizer(options) {\r\n    initConstants();\r\n    options = options || {};\r\n    this._modelMatrix = defaultValue(options.modelMatrix, Matrix4.IDENTITY);\r\n    this._actualModelMatrix = Matrix4.clone(this._modelMatrix);\r\n    this._ready = true;\r\n    this._modelMatrixNeedsUpdate = true;\r\n\r\n    this._isWireframe = false;\r\n    this._up = defaultValue(options.up, new Cartesian3(0, 0, 1));\r\n    this._position = defaultValue(options.position, new Cartesian3(0, 0, 0));\r\n    this._scale = defaultValue(options.scale, new Cartesian3(1, 1, 1));\r\n    this._rotation = defaultValue(options.rotation, { axis: new Cartesian3(0, 0, 1), angle: 0 });\r\n    this._rotation = new Rotation(this._rotation.axis, this._rotation.angle);\r\n    this._rotation.paramChanged.addEventListener(this.onModelMatrixNeedUpdate, this);\r\n\r\n\r\n    this._chidren = [];\r\n    this._debug = false;\r\n    this._show = defaultValue(options.show, true);\r\n\r\n    this._center = new Cartesian3();\r\n    Cesium.Matrix4.getTranslation(this._modelMatrix, this._center);\r\n    this._framebufferTextures = {};\r\n    this._uniformValueCache = {};\r\n    this._textureCache = {};\r\n    this._uniformMaps = {};\r\n    this.referenceMesh = new ReferenceMesh({\r\n        axisParameter: defaultValue(options.referenceAxisParameter, { length: 50000 * 2 }),\r\n        show: defaultValue(options.showReference, false)\r\n    });\r\n    this.add(this.referenceMesh);\r\n    this._pickIds = [];\r\n    this.beforeUpdate = new Cesium.Event();\r\n    this._scene = options.scene;\r\n}\r\n\r\nMeshVisualizer.prototype = {\r\n    /**\r\n     * 移除mesh，释放由MeshVisualizer创建的内部资源\r\n    *@param {Cesium.Mesh}mesh\r\n    */\r\n    remove: function (mesh) {\r\n\r\n        for (var i = 0; i < this._chidren.length; i++) {\r\n            if (this._chidren[i] == mesh) {\r\n\r\n                this._chidren.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        function freeDrawCommand(cmd) {\r\n            if (!cmd) return;\r\n            cmd.vertexArray = cmd.vertexArray.destroy();\r\n            cmd.shaderProgram = cmd.shaderProgram.destroy();\r\n            Cesium.destroyObject(cmd);\r\n        }\r\n\r\n        function freeMesh(mesh) {\r\n            mesh._drawCommand = freeDrawCommand(mesh._drawCommand);\r\n            mesh._pickCommand = freeDrawCommand(mesh._pickCommand);\r\n            mesh._textureCommand = freeDrawCommand(mesh._textureCommand);\r\n        }\r\n\r\n        MeshVisualizer.traverse(mesh, function () {\r\n            freeMesh(mesh);\r\n\r\n            if (mesh._actualMesh && mesh._actualMesh._drawCommand) {\r\n\r\n                var actualMesh = mesh._actualMesh;\r\n                freeMesh(actualMesh);\r\n                Cesium.destroyObject(actualMesh.geometry);\r\n                mesh._actualMesh = actualMesh && actualMesh.destroy();\r\n                Cesium.destroyObject(actualMesh);\r\n            }\r\n        }, false);\r\n    },\r\n    /**\r\n    *\r\n    *拾取点，用局部坐标系表达。内部使用Cesium.Scene.pickPosition和MeshVisualizer.worldCoordinatesToLocal实现。\r\n    *@param {Cesium.Cartesian2}windowPosition\r\n    *@param {Cesium.Cartesian3}[result]\r\n    *@return {Cesium.Cartesian3}\r\n    */\r\n    pickPosition: function (windowPosition, result) {\r\n        if (!this._scene) {\r\n            return undefined;\r\n        }\r\n        this._scene.pickPosition(windowPosition, surfacePointLocal);\r\n\r\n        if (!surfacePointLocal) {\r\n            return undefined;\r\n        }\r\n\r\n        this.worldCoordinatesToLocal(surfacePointLocal, surfacePointLocal);\r\n        Cesium.Cartesian3.clone(surfacePointLocal, result);\r\n        return result;\r\n    },\r\n    /**\r\n    *\r\n    *创建一条射线，用局部坐标系表达\r\n    *@param {Cesium.Cartesian2}windowPosition\r\n    *@param {Cesium.Ray}[result]\r\n    *@return {Cesium.Ray}\r\n    */\r\n    getPickRay: function (windowPosition, result) {\r\n        if (!this._scene) {\r\n            return undefined;\r\n        }\r\n        if (!result) {\r\n            result = Cesium.Ray();\r\n        }\r\n        this._scene.camera.getPickRay(windowPosition, scratchRay);//ray用于计算小球发射点位置，这里射线的起始点是世界坐标，不能像Threejs那样直接拿来计算，需要转成局部坐标\r\n        this._scene.pickPosition(windowPosition, surfacePointLocal);//射线和局部场景的交点\r\n\r\n        if (!surfacePointLocal) {\r\n            return undefined;\r\n        }\r\n\r\n        Cesium.Cartesian3.clone(scratchRay.direction, rayDir);\r\n\r\n        //世界坐标转局部坐标\r\n        this.worldCoordinatesToLocal(scratchRay.origin, rayOriginLocal);\r\n        this.worldCoordinatesToLocal(surfacePointLocal, surfacePointLocal);\r\n\r\n        Cesium.Cartesian3.add(rayOriginLocal, rayDir, pos);\r\n        //计算发射方向\r\n        Cesium.Cartesian3.subtract(surfacePointLocal, pos, rayDir);\r\n        Cesium.Cartesian3.clone(surfacePointLocal, result.origin);\r\n        Cesium.Cartesian3.clone(rayDir, result.direction);\r\n        return result;\r\n    },\r\n    /**\r\n    *世界坐标到局部坐标\r\n    *@param {Cesium.Cartesian3}worldCoordinates\r\n    *@param {Cesium.Cartesian3}[result]\r\n    *@return {Cesium.Cartesian3}\r\n    */\r\n    worldCoordinatesToLocal: function (worldCoordinates, result) {\r\n        if (!result) {\r\n            result = new Cartesian3();\r\n        }\r\n        Cesium.Matrix4.inverseTransformation(this._actualModelMatrix, world2localMatrix)\r\n        Cesium.Matrix4.multiplyByPoint(world2localMatrix, worldCoordinates, result);\r\n        return result;\r\n    },\r\n    /**\r\n   *局部坐标到世界坐标\r\n   *@param {Cesium.Cartesian3}localCoordinates\r\n   *@param {Cesium.Cartesian3}[result]\r\n   *@return {Cesium.Cartesian3}\r\n   */\r\n    localToWorldCoordinates: function (localCoordinates, result) {\r\n        if (!result) {\r\n            result = new Cartesian3();\r\n        }\r\n        Cesium.Matrix4.multiplyByPoint(this._actualModelMatrix, localCoordinates, result);\r\n        return result;\r\n    },\r\n    onModelMatrixNeedUpdate: function () {\r\n        this._modelMatrixNeedsUpdate = true;\r\n    },\r\n    /**\r\n     *\r\n     *@param {Number}x\r\n     *@param {Number}y\r\n     *@param {Number}z\r\n     */\r\n    setPosition: function (x, y, z) {\r\n        var changed = false;\r\n        if (arguments.length == 1) {\r\n            if (typeof x == 'number') {\r\n                if (x != this._position.x) changed = true;\r\n                this._position.x = x;\r\n            } else if (x instanceof Cesium.Cartesian3) {\r\n                if (x != this._position.x\r\n                    || y != this._position.y\r\n                    || z != this._position.z) {\r\n                    changed = true;\r\n                }\r\n\r\n                this._position.x = x.x;\r\n                this._position.y = x.y;\r\n                this._position.z = x.z;\r\n            }\r\n        }\r\n        if (arguments.length == 2 && typeof y == 'number') {\r\n            if (y != this._position.y) changed = true;\r\n            this._position.y = y;\r\n        }\r\n        if (arguments.length == 3 && typeof z == 'number') {\r\n            if (z != this._position.z) changed = true;\r\n            this._position.z = z;\r\n        }\r\n        if (changed) {\r\n            this._modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     *@param {Number}x\r\n     *@param {Number}y\r\n     *@param {Number}z\r\n     */\r\n    setScale: function (x, y, z) {\r\n        var changed = false;\r\n        if (arguments.length == 1) {\r\n            if (typeof x == 'number') {\r\n                if (x != this._scale.x) changed = true;\r\n                this._scale.x = x;\r\n            } else if (x instanceof Cesium.Cartesian3) {\r\n                if (x != this._scale.x\r\n                    || y != this._scale.y\r\n                    || z != this._scale.z) {\r\n                    changed = true;\r\n                }\r\n\r\n                this._scale.x = x.x;\r\n                this._scale.y = x.y;\r\n                this._scale.z = x.z;\r\n            }\r\n        }\r\n        if (arguments.length == 2 && typeof y == 'number') {\r\n            if (y != this._scale.y) changed = true;\r\n            this._scale.y = y;\r\n        }\r\n        if (arguments.length == 3 && typeof z == 'number') {\r\n            if (z != this._scale.z) changed = true;\r\n            this._scale.z = z;\r\n        }\r\n        if (changed) {\r\n            this._modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n\r\n    toWireframe: function (geometry) {\r\n        if (geometry.primitiveType !== Cesium.PrimitiveType.TRIANGLES\r\n            && geometry.primitiveType !== Cesium.PrimitiveType.TRIANGLE_FAN\r\n            && geometry.primitiveType !== Cesium.PrimitiveType.TRIANGLE_STRIP) {\r\n            return geometry;\r\n        }\r\n        if (!geometry.triangleIndices) {\r\n            geometry.triangleIndices = geometry.indices;\r\n        }\r\n        //if (geometry.lineIndices) {\r\n        //    geometry.indices = geometry.lineIndices;\r\n        //    return geometry;\r\n        //}\r\n        geometry = GeometryPipeline.toWireframe(geometry);\r\n        //geometry.lineIndices = geometry.indices;\r\n        return geometry;\r\n    },\r\n\r\n    restoreFromWireframe: function (geometry) {\r\n        if (geometry.primitiveType == Cesium.PrimitiveType.POINTS) {\r\n            return geometry;\r\n        }\r\n        if (geometry.triangleIndices) {\r\n            geometry.indices = geometry.triangleIndices;\r\n        }\r\n        geometry.primitiveType = Cesium.PrimitiveType.TRIANGLES;\r\n        return geometry;\r\n    },\r\n    createBoundingSphere: function (mesh) {\r\n        var instancesLength = mesh._instances.length;\r\n        var points = new Array(instancesLength);\r\n        for (var i = 0; i < instancesLength; ++i) {\r\n            points[i] = Matrix4.getTranslation(mesh._instances[i].modelMatrix, new Cartesian3());\r\n        }\r\n\r\n        mesh._boundingSphere = Cesium.BoundingSphere.fromPoints(points);\r\n        Cartesian3.clone(mesh._boundingSphere.center, mesh._center);\r\n    },\r\n    /**\r\n    * \r\n    *@param {Cesium.Mesh} mesh\r\n    *@param {Cesium.FrameState} frameState\r\n    *@return {Cesium.DrawCommand} \r\n    *@private\r\n    */\r\n    createDrawCommand: function (mesh, frameState) {\r\n        var that = this;\r\n        var context = frameState.context;\r\n        var geometry = mesh.geometry;\r\n        var material = mesh.material;\r\n\r\n        var pickObject = {\r\n            primitive: this,\r\n            id: mesh\r\n        };\r\n        var pickId = context.createPickId(pickObject);\r\n        that._pickIds.push(pickId);\r\n\r\n        var command = new Cesium.DrawCommand({\r\n            // pickId: mesh.material.allowPick ? pickId : undefined,\r\n            modelMatrix: mesh._instances && mesh._instances.length > 0 ? undefined : Matrix4.clone(this.modelMatrix),\r\n            owner: mesh,\r\n            primitiveType: geometry.primitiveType,\r\n            cull: false,// material.cullFrustum,\r\n            instanceCount: mesh._instances && mesh._instances.length > 0 ? mesh._availableInstances.length : undefined,\r\n            pass: material.translucent ? Cesium.Pass.TRANSLUCENT : Cesium.Pass.OPAQUE\r\n            // , boundingVolume: geometry.boundingSphere\r\n        });\r\n\r\n        var attributeLocations = GeometryPipeline.createAttributeLocations(geometry);\r\n        var vertexArrayAttributes;\r\n        if (mesh._instances && mesh._instances.length) {\r\n            this.createBoundingSphere(mesh);\r\n\r\n            vertexArrayAttributes = []\r\n            var maxAttribLocation = 0;\r\n            for (var location in attributeLocations) {\r\n                if (attributeLocations.hasOwnProperty(location)) {\r\n                    maxAttribLocation = Math.max(maxAttribLocation, attributeLocations[location])\r\n                }\r\n            }\r\n            // command.instanceCount = mesh._instances.length;\r\n            var collection = mesh;\r\n\r\n            collection._pickIds = createPickIds(collection, frameState.context);\r\n\r\n            createVertexBuffer(collection, frameState.context);\r\n\r\n            var vertexSizeInFloats = 12;\r\n            var componentSizeInBytes = ComponentDatatype.getSizeInBytes(ComponentDatatype.FLOAT);\r\n\r\n            var instancedAttributes = {\r\n                czm_modelMatrixRow0: {\r\n                    index: maxAttribLocation + 1,\r\n                    vertexBuffer: collection._vertexBuffer,\r\n                    componentsPerAttribute: 4,\r\n                    componentDatatype: ComponentDatatype.FLOAT,\r\n                    normalize: false,\r\n                    offsetInBytes: 0,\r\n                    strideInBytes: componentSizeInBytes * vertexSizeInFloats,\r\n                    instanceDivisor: 1\r\n                },\r\n                czm_modelMatrixRow1: {\r\n                    index: maxAttribLocation + 2,\r\n                    vertexBuffer: collection._vertexBuffer,\r\n                    componentsPerAttribute: 4,\r\n                    componentDatatype: ComponentDatatype.FLOAT,\r\n                    normalize: false,\r\n                    offsetInBytes: componentSizeInBytes * 4,\r\n                    strideInBytes: componentSizeInBytes * vertexSizeInFloats,\r\n                    instanceDivisor: 1\r\n                },\r\n                czm_modelMatrixRow2: {\r\n                    index: maxAttribLocation + 3,\r\n                    vertexBuffer: collection._vertexBuffer,\r\n                    componentsPerAttribute: 4,\r\n                    componentDatatype: ComponentDatatype.FLOAT,\r\n                    normalize: false,\r\n                    offsetInBytes: componentSizeInBytes * 8,\r\n                    strideInBytes: componentSizeInBytes * vertexSizeInFloats,\r\n                    instanceDivisor: 1\r\n                }\r\n            };\r\n\r\n            instancedAttributes.a_pickColor = {\r\n                index: maxAttribLocation + 4,\r\n                vertexBuffer: collection._pickIdBuffer,\r\n                componentsPerAttribute: 4,\r\n                componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n                normalize: true,\r\n                offsetInBytes: 0,\r\n                strideInBytes: 0,\r\n                instanceDivisor: 1\r\n            };\r\n\r\n            for (var location in instancedAttributes) {\r\n                if (instancedAttributes.hasOwnProperty(location)) {\r\n                    attributeLocations[location] = ++maxAttribLocation;\r\n                    vertexArrayAttributes.push(instancedAttributes[location])\r\n                }\r\n            }\r\n\r\n            maxAttribLocation = createInstancedAttributes(mesh, frameState.context, vertexArrayAttributes, attributeLocations, maxAttribLocation);\r\n        }\r\n\r\n        command.vertexArray = VertexArray.fromGeometry({\r\n            context: context,\r\n            geometry: geometry,\r\n            attributeLocations: attributeLocations,\r\n            bufferUsage: BufferUsage.STATIC_DRAW,\r\n\r\n            vertexArrayAttributes: vertexArrayAttributes\r\n        });\r\n        if (vertexArrayAttributes && vertexArrayAttributes.length) {\r\n            command._cacehVertexArrayAttributes = vertexArrayAttributes.map(function (a) {\r\n                return a;\r\n            })\r\n        }\r\n        command.vertexArray._attributeLocations = attributeLocations;\r\n\r\n        var pickColor = pickId.color;\r\n\r\n        var shader = {\r\n            fragmentShader: this.getFragmentShaderSource(material),\r\n            vertexShader: this.getVertexShaderSource(mesh, material)\r\n        };\r\n        if (material.material3js) {\r\n            shader = ShaderUtils.processShader3js(material.material3js, shader);\r\n        }\r\n\r\n        if (mesh._instances && mesh._instances.length) {\r\n\r\n            var vs = shader.vertexShader;\r\n            var renamedSource = Cesium.ShaderSource.replaceMain(vs, 'czm_instancing_main');\r\n\r\n            var pickAttribute = 'attribute vec4 a_pickColor;\\n' +\r\n                'varying vec4 czm_pickColor;\\n';\r\n            var pickVarying = '    czm_pickColor = a_pickColor;\\n';\r\n\r\n            vs = //'mat4 czm_instanced_modelView;\\n' +\r\n                'attribute vec4 czm_modelMatrixRow0;\\n' +\r\n                'attribute vec4 czm_modelMatrixRow1;\\n' +\r\n                'attribute vec4 czm_modelMatrixRow2;\\n' +\r\n                'uniform mat4 czm_instanced_modifiedModelView;\\n' +\r\n                // batchIdAttribute +\r\n                pickAttribute +\r\n                renamedSource +\r\n                'void main()\\n' +\r\n                '{\\n' +\r\n                '    modelMatrix = mat4(czm_modelMatrixRow0.x, czm_modelMatrixRow1.x, czm_modelMatrixRow2.x, 0.0, czm_modelMatrixRow0.y, czm_modelMatrixRow1.y, czm_modelMatrixRow2.y, 0.0, czm_modelMatrixRow0.z, czm_modelMatrixRow1.z, czm_modelMatrixRow2.z, 0.0, czm_modelMatrixRow0.w, czm_modelMatrixRow1.w, czm_modelMatrixRow2.w, 1.0);\\n' +\r\n                '    modelViewMatrix = czm_instanced_modifiedModelView * modelMatrix;\\n' +\r\n                '    u_modelMatrix =modelMatrix;\\n' +\r\n                '    u_modelViewMatrix = modelViewMatrix ;\\n' +\r\n                // globalVarsMain +\r\n                '    czm_instancing_main();\\n' +\r\n                pickVarying +\r\n                '}\\n';\r\n            shader.vertexShader = vs;\r\n        }\r\n\r\n\r\n        var vs = new Cesium.ShaderSource({\r\n            sources: [shader.vertexShader]\r\n        });\r\n        var fs = new Cesium.ShaderSource({\r\n            sources: [shader.fragmentShader]\r\n        });\r\n        // if (this.onlySunLighting) {\r\n        //fs.defines.push('ONLY_SUN_LIGHTING');\r\n        // }\r\n        var translucent = material.translucent;\r\n        if (!translucent && context.fragmentDepth) {\r\n            fs.defines.push('WRITE_DEPTH');\r\n        }\r\n        var logDepthExtension =\r\n            '#ifdef GL_EXT_frag_depth \\n' +\r\n            '#extension GL_EXT_frag_depth : enable \\n' +\r\n            '#endif \\n\\n';\r\n\r\n        // if (this._useLogDepth) {\r\n        vs.defines.push('LOG_DEPTH');\r\n        fs.defines.push('LOG_DEPTH');\r\n        //fs.sources.push(logDepthExtension);\r\n        // }\r\n\r\n\r\n        command._sp = ShaderProgram.fromCache({\r\n            context: context,\r\n            fragmentShaderSource: fs,//shader.fragmentShader,//this.getFragmentShaderSource(material),\r\n            vertexShaderSource: vs,//shader.vertexShader,//this.getVertexShaderSource(geometry, material),\r\n            attributeLocations: attributeLocations\r\n        });\r\n        if (!Cesium.defined(mesh.material.allowPick)) {\r\n            mesh.material.allowPick = true;\r\n        }\r\n        if (mesh.material.allowPick) {\r\n\r\n\r\n        }\r\n        command.shaderProgram = command._sp;\r\n        command.renderState = this.getRenderState(material);\r\n\r\n        command._renderStateOptions = material._renderStateOptions;\r\n\r\n        command.uniformMap = this.getUniformMap(material, frameState);\r\n        command.uniformMap.czm_pickColor = function () {\r\n            return pickId.color;\r\n        }\r\n        command.uniformMap.czm_instanced_modifiedModelView = this.getModifiedModelViewCallback(context, mesh);\r\n\r\n        var pickCommand = new Cesium.DrawCommand({\r\n            owner: mesh,\r\n            pickOnly: true,\r\n            instanceCount: mesh._instances && mesh._instances.length > 0 ? mesh._availableInstances.length : undefined,\r\n            modelMatrix: mesh._instances && mesh._instances.length > 0 ? undefined : Matrix4.clone(this.modelMatrix),\r\n            primitiveType: geometry.primitiveType,\r\n            cull: material.cullFrustum,\r\n            pass: material.translucent ? Cesium.Pass.TRANSLUCENT : Cesium.Pass.OPAQUE\r\n        });\r\n        // Recompile shader when material changes\r\n\r\n\r\n\r\n        vs = new Cesium.ShaderSource({\r\n            sources: [shader.vertexShader]\r\n        });\r\n        fs = new Cesium.ShaderSource({\r\n            sources: [shader.fragmentShader],\r\n            pickColorQualifier: mesh._instances && mesh._instances.length ? 'varying' : (material.pickColorQualifier || 'uniform')\r\n        });\r\n        // if (this.onlySunLighting) {\r\n        fs.defines.push('ONLY_SUN_LIGHTING');\r\n        // }\r\n        translucent = material.translucent;\r\n        if (!translucent && context.fragmentDepth) {\r\n            fs.defines.push('WRITE_DEPTH');\r\n        }\r\n\r\n\r\n        // if (this._useLogDepth) {\r\n        vs.defines.push('LOG_DEPTH');\r\n        fs.defines.push('LOG_DEPTH');\r\n        fs.sources.push(logDepthExtension);\r\n        // }\r\n\r\n\r\n\r\n        var _pickSP = ShaderProgram.replaceCache({\r\n            context: context,\r\n            shaderProgram: _pickSP,\r\n            vertexShaderSource: vs,\r\n            fragmentShaderSource: fs,\r\n            attributeLocations: attributeLocations\r\n        });\r\n\r\n        pickCommand.vertexArray = command.vertexArray;\r\n        pickCommand.renderState = this.getRenderState(material);\r\n        pickCommand.shaderProgram = _pickSP;\r\n        pickCommand.uniformMap = command.uniformMap;\r\n        pickCommand.executeInClosestFrustum = translucent;\r\n        mesh._pickCommand = pickCommand;\r\n\r\n        return command;\r\n    },\r\n\r\n    getModifiedModelViewCallback: function (context, mesh) {\r\n        return function () {\r\n            if (!mesh._rtcTransform) {\r\n                mesh._rtcTransform = new Matrix4()\r\n            }\r\n            if (!mesh._rtcModelView) {\r\n                mesh._rtcModelView = new Matrix4()\r\n            }\r\n            Matrix4.multiplyByTranslation(mesh.modelMatrix, mesh._center, mesh._rtcTransform);\r\n\r\n            return Matrix4.multiply(context.uniformState.view, mesh._rtcTransform, mesh._rtcModelView);\r\n        }\r\n    },\r\n    /**\r\n    *\r\n    *\r\n    *@param {THREE.Material}material \r\n    *@return {Cesium.RenderState}frameState\r\n    *@private\r\n    */\r\n    getRenderState_old: function (material) {\r\n        var renderState = {\r\n            blending: material.blending ? BlendingState.ALPHA_BLEND : BlendingState.DISABLED,\r\n            depthTest: {\r\n                enabled: material.depthTest,\r\n                func: DepthFunction.GREATER//LESS\r\n            },\r\n            cull: {\r\n                enabled: true,\r\n                face: CullFace.FRONT\r\n            },\r\n            depthRange: {\r\n                near: 0,\r\n                far: 1\r\n            },\r\n            colorMask: {\r\n                red: true,\r\n                green: true,\r\n                blue: true,\r\n                alpha: true\r\n            },\r\n            depthMask: material.depthMask\r\n        }\r\n        renderState.cull.enabled = true;\r\n        renderState.blending.color = {\r\n            red: 0.0,\r\n            green: 0.0,\r\n            blue: 0.0,\r\n            alpha: 0.0\r\n        };\r\n        switch (material.side) {\r\n            case MeshMaterial.Sides.FRONT:\r\n                renderState.cull.face = CullFace.BACK;\r\n                break;\r\n            case MeshMaterial.Sides.BACK:\r\n                renderState.cull.face = CullFace.FRONT;\r\n                break;\r\n            default:\r\n                renderState.cull.enabled = false;\r\n                break;\r\n        }\r\n\r\n        renderState = RenderState.fromCache(renderState);\r\n\r\n        return renderState;\r\n    },\r\n\r\n    /**\r\n    *\r\n    *\r\n    *@param {THREE.Material}material \r\n    *@return {Cesium.RenderState}frameState\r\n    *@private\r\n    */\r\n    getRenderState: function (material) {\r\n        var renderStateOpts = {\r\n            blending: material.blending ? BlendingState.ALPHA_BLEND : BlendingState.DISABLED,\r\n            depthTest: {\r\n                enabled: material.depthTest,\r\n                func: DepthFunction.LESS\r\n            },\r\n            cull: {\r\n                enabled: false,\r\n                face: CullFace.FRONT\r\n            },\r\n            depthRange: {\r\n                near: 0,\r\n                far: 1\r\n            },\r\n            colorMask: {\r\n                red: true,\r\n                green: true,\r\n                blue: true,\r\n                alpha: true\r\n            },\r\n            depthMask: material.depthMask\r\n        }\r\n        renderStateOpts.cull.enabled = true;\r\n\r\n        // renderStateOpts.blending.color = {\r\n        //     red: 0.0,\r\n        //     green: 0.0,\r\n        //     blue: 0.0,\r\n        //     alpha: 0.0\r\n        // };\r\n        switch (material.side) {\r\n            case MeshMaterial.Sides.FRONT:\r\n                renderStateOpts.cull.face = CullFace.BACK;\r\n                break;\r\n            case MeshMaterial.Sides.BACK:\r\n                renderStateOpts.cull.face = CullFace.FRONT;\r\n                break;\r\n            default:\r\n                renderStateOpts.cull.enabled = false;\r\n                break;\r\n        }\r\n\r\n        material._renderStateOptions = renderStateOpts;\r\n        var renderState = RenderState.fromCache(renderStateOpts);\r\n\r\n        return renderState;\r\n    },\r\n\r\n    /**\r\n    *\r\n    *\r\n    *@param {THREE.Material}material \r\n    *@param {Cesium.FrameState}frameState\r\n    *@private\r\n    */\r\n    getUniformMap: function (material, frameState) {\r\n        var uniformMaps = this._uniformMaps;\r\n        if (uniformMaps[material.uuid] && !material.needsUpdate) {\r\n            return uniformMaps[material.uuid];\r\n\r\n        }\r\n        var uniformMap = {};\r\n        uniformMaps[material.uuid] = uniformMap;\r\n\r\n        if (material.onDispose) {\r\n            material.onDispose(function () {\r\n                delete uniformMaps[material.uuid];\r\n            })\r\n        }\r\n        \r\n        material.needsUpdate = false;\r\n\r\n        uniformMap.cameraPosition = function () {\r\n            return frameState.camera.position;\r\n        }\r\n        uniformMap.u_cameraPosition = function () {\r\n            return frameState.camera.position;\r\n        }\r\n        //base matrix\r\n        uniformMap.u_normalMatrix = function () {\r\n            return frameState.context.uniformState.normal;\r\n        }\r\n        uniformMap.u_projectionMatrix = function () {\r\n            return frameState.context.uniformState.projection;\r\n        }\r\n\r\n        uniformMap.u_modelViewMatrix = function () {\r\n            return frameState.context.uniformState.modelView;\r\n        }\r\n        //base matrix for threejs\r\n        uniformMap.normalMatrix = function () {\r\n            return frameState.context.uniformState.normal;\r\n        }\r\n        uniformMap.projectionMatrix = function () {\r\n            return frameState.context.uniformState.projection;\r\n        }\r\n\r\n        uniformMap.modelViewMatrix = function () {\r\n            return frameState.context.uniformState.modelView;\r\n        }\r\n        uniformMap.modelMatrix = function () {\r\n            return frameState.context.uniformState.model;\r\n        }\r\n        uniformMap.u_modelMatrix = function () {\r\n            return frameState.context.uniformState.model;\r\n        }\r\n        uniformMap.u_viewMatrix = function () {\r\n            return frameState.context.uniformState.view;\r\n        }\r\n        uniformMap.viewMatrix = function () {\r\n            return frameState.context.uniformState.view;\r\n        }\r\n        uniformMap.logDepthBufFC = function () {\r\n            return 2.0 / (Math.log(frameState.camera.frustum.far + 1.0) / Math.LN2)\r\n        }\r\n\r\n        if (material.uniformStateUsed && material.uniformStateUsed.length) {\r\n            material.uniformStateUsed.forEach(function (item) {\r\n                if (!uniformMap[item.glslVarName]) {\r\n                    if (!frameState.context.uniformState[item.uniformStateName]) {\r\n                        throw new Error(item.uniformStateName + \"不是Cesium引擎的内置对象\");\r\n                    }\r\n                    uniformMap[item.glslVarName] = function () {\r\n                        return frameState.context.uniformState[item.uniformStateName];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        var that = this;\r\n\r\n        function getCubeTextureCallback(name, item, mtl) {\r\n            var callback = function () {\r\n                if (!that._textureCache[item.uuid] || item.needsUpdate) {\r\n                    if (!callback.allLoaded && !callback.isLoading) {\r\n                        var promises = [];\r\n                        for (var i = 0; i < item.value.length; i++) {\r\n                            if (item.value[i] instanceof HTMLCanvasElement\r\n                                || item.value[i] instanceof HTMLVideoElement\r\n                                || item.value[i] instanceof HTMLImageElement\r\n                            ) {\r\n                                var deferred = Cesium.when.defer();\r\n                                requestAnimationFrame(function () {\r\n                                    deferred.resolve(item.value[i]);\r\n                                });\r\n                                promises.push(deferred);\r\n                            } else if (typeof item.value[i] === 'string') {\r\n                                promises.push(loadImage(item.value[i]));\r\n                            } else {\r\n                                throw Error(name + \"\" + i + \"给定值“ \" + item[i] + \"” 不是有效的纹理图片\");\r\n                            }\r\n                        }\r\n                        callback.isLoading = true;\r\n                        item.needsUpdate = false;\r\n                        Cesium.when.all(promises, function (images) {\r\n\r\n                            that._textureCache[item.uuid] = new Cesium.CubeMap({\r\n                                context: frameState.context,\r\n                                source: {\r\n                                    positiveX: images[0],\r\n                                    negativeX: images[1],\r\n                                    positiveY: images[2],\r\n                                    negativeY: images[3],\r\n                                    positiveZ: images[4],\r\n                                    negativeZ: images[5]\r\n                                }\r\n                            });\r\n                            if (item.onDispose) {\r\n                                item.onDispose(function () {\r\n                                    if (that._textureCache[item.uuid]) {\r\n                                        that._textureCache[item.uuid].destroy();\r\n                                        delete that._textureCache[item.uuid];\r\n                                    }\r\n                                })\r\n                            }\r\n                            callback.allLoaded = true;\r\n                            callback.isLoading = false;\r\n                        });\r\n                    }\r\n                }\r\n                if (callback.allLoaded) {\r\n                    return that._textureCache[item.uuid];\r\n                }\r\n                else {\r\n                    if (!that.defaultCubeMap) {\r\n\r\n                        if (!that.defaultTextureImage) {\r\n                            that.defaultTextureImage = document.createElement(\"canvas\");\r\n                            that.defaultTextureImage.width = 1;\r\n                            that.defaultTextureImage.height = 1;\r\n                        }\r\n\r\n                        that.defaultCubeMap = new Cesium.CubeMap({\r\n                            context: frameState.context,\r\n                            source: {\r\n                                positiveX: that.defaultTextureImage,\r\n                                negativeX: that.defaultTextureImage,\r\n                                positiveY: that.defaultTextureImage,\r\n                                negativeY: that.defaultTextureImage,\r\n                                positiveZ: that.defaultTextureImage,\r\n                                negativeZ: that.defaultTextureImage\r\n                            }\r\n                        });\r\n                    }\r\n                    return that.defaultCubeMap;\r\n                }\r\n            }\r\n            if (callback.allLoaded) {\r\n                callback.allLoaded = false;\r\n                callback.isLoading = false;\r\n            }\r\n            return callback;\r\n        }\r\n\r\n        function createTexture(texture, context) {\r\n\r\n            var TextureMinificationFilter = Cesium.TextureMinificationFilter;\r\n            var TextureWrap = Cesium.TextureWrap;\r\n\r\n            var sampler = texture.sampler;\r\n\r\n            var mipmap =\r\n                (sampler.minificationFilter === TextureMinificationFilter.NEAREST_MIPMAP_NEAREST) ||\r\n                (sampler.minificationFilter === TextureMinificationFilter.NEAREST_MIPMAP_LINEAR) ||\r\n                (sampler.minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_NEAREST) ||\r\n                (sampler.minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR);\r\n            var requiresNpot = mipmap ||\r\n                (sampler.wrapS === TextureWrap.REPEAT) ||\r\n                (sampler.wrapS === TextureWrap.MIRRORED_REPEAT) ||\r\n                (sampler.wrapT === TextureWrap.REPEAT) ||\r\n                (sampler.wrapT === TextureWrap.MIRRORED_REPEAT);\r\n\r\n            var source = texture.source;\r\n            var npot = !CesiumMath.isPowerOfTwo(source.width) || !CesiumMath.isPowerOfTwo(source.height);\r\n\r\n            if (requiresNpot && npot) {\r\n                // WebGL requires power-of-two texture dimensions for mipmapping and REPEAT/MIRRORED_REPEAT wrap modes.\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = CesiumMath.nextPowerOfTwo(source.width);\r\n                canvas.height = CesiumMath.nextPowerOfTwo(source.height);\r\n                var canvasContext = canvas.getContext('2d');\r\n                canvasContext.drawImage(source, 0, 0, source.width, source.height, 0, 0, canvas.width, canvas.height);\r\n                source = canvas;\r\n            }\r\n\r\n            var tx;\r\n\r\n            if (texture.target === WebGLConstants.TEXTURE_2D) {\r\n                tx = new Texture({\r\n                    context: context,\r\n                    source: source,\r\n                    width: texture.width,\r\n                    height: texture.height,\r\n                    pixelFormat: texture.internalFormat,\r\n                    pixelDatatype: texture.type,\r\n                    sampler: sampler,\r\n                    flipY: texture.flipY\r\n                });\r\n            }\r\n            // GLTF_SPEC: Support TEXTURE_CUBE_MAP.  https://github.com/KhronosGroup/glTF/issues/40\r\n\r\n            if (mipmap) {\r\n                tx.generateMipmap();\r\n            }\r\n\r\n            return tx;\r\n        }\r\n        var WebGLConstants = Cesium.WebGLConstants;\r\n        function onTextureImageLoaded(image, item) {\r\n            var tex;\r\n            if (defined(image.internalFormat)) {\r\n                tex = new Texture({\r\n                    context: frameState.context,\r\n                    pixelFormat: image.internalFormat,\r\n                    width: image.width,\r\n                    height: image.height,\r\n                    source: {\r\n                        arrayBufferView: image.bufferView\r\n                    },\r\n                    flipY: item.flipY\r\n                });\r\n            } else {\r\n                var format = Cesium.WebGLConstants.RGB;\r\n                if (image instanceof HTMLCanvasElement\r\n                    || image instanceof HTMLVideoElement\r\n                    || (image.src && image.src.toLocaleLowerCase().indexOf(\".png\") >= 0)\r\n                ) {\r\n                    format = Cesium.WebGLConstants.RGBA;\r\n                }\r\n                if (item.sampler) {\r\n                    tex = createTexture({\r\n                        context: frameState.context,\r\n                        source: image,\r\n                        target: WebGLConstants.TEXTURE_2D,\r\n                        width: item.width,\r\n                        height: item.height,\r\n                        pixelFormat: format,\r\n                        flipY: item.flipY,\r\n                        sampler: new Cesium.Sampler(item.sampler)\r\n                    }, frameState.context);\r\n                } else {\r\n                    tex = new Texture({\r\n                        context: frameState.context,\r\n                        source: image,\r\n                        target: WebGLConstants.TEXTURE_2D,\r\n                        width: item.width,\r\n                        height: item.height,\r\n                        pixelFormat: format,\r\n                        flipY: Cesium.defined(item.flipY) ? item.flipY : true\r\n                    });\r\n                }\r\n            }\r\n            return tex;\r\n        }\r\n\r\n        function getTextureCallback(item) {\r\n\r\n            var callback = function () {\r\n\r\n                var cacheKey = typeof item.value == 'string' ? item.value : null;\r\n                if (!cacheKey) {\r\n                    if (item.value instanceof HTMLImageElement\r\n                        || item.value instanceof HTMLCanvasElement\r\n                        || item.value instanceof HTMLVideoElement\r\n                    ) {\r\n                        if (!item.value.uuid) {\r\n                            item.value.uuid = item.uuid;\r\n                        }\r\n                        cacheKey = item.value.uuid;\r\n                    }\r\n                }\r\n\r\n                if (!that._textureCache[cacheKey] || item.needsUpdate) {\r\n\r\n                    if (item.value instanceof HTMLImageElement\r\n                        || item.value instanceof HTMLCanvasElement\r\n                        || item.value instanceof HTMLVideoElement\r\n                    ) {\r\n                        var image = item.value;\r\n                        if (!item.value.id) {\r\n                            item.value.id = item.uuid;\r\n                        }\r\n                        that._textureCache[cacheKey] = onTextureImageLoaded(image, item);\r\n\r\n                        if (item.onDispose) {\r\n                            item.onDispose(function () {\r\n                                if (that._textureCache[cacheKey]) {\r\n                                    that._textureCache[cacheKey].destroy();\r\n                                    delete that._textureCache[cacheKey];\r\n                                }\r\n                            })\r\n                        }\r\n                        item.needsUpdate = false;\r\n                        return that._textureCache[cacheKey];\r\n\r\n                    } else {\r\n                        if (typeof item.value === \"string\" && !callback.isLoading) {\r\n                            callback.isLoading = true;\r\n                            item.needsUpdate = false;\r\n                            var url = item.value.toLocaleLowerCase();\r\n\r\n                            var extension = Path.GetExtension(url).slice(1);\r\n                            if (extension == 'tif') {//处理tif纹理\r\n\r\n                                loadArrayBuffer(url).then(function (imageArrayBuffer) {\r\n                                    var tiffParser = new TIFFParser();\r\n                                    var tiffCanvas = tiffParser.parseTIFF(imageArrayBuffer);\r\n                                    if (that._textureCache[cacheKey]) {\r\n                                        that._textureCache[cacheKey].destroy && that._textureCache[cacheKey].destroy();\r\n                                    }\r\n                                    that._textureCache[cacheKey] = onTextureImageLoaded(tiffCanvas, item);\r\n                                    if (item.onDispose) {\r\n                                        item.onDispose(function () {\r\n                                            if (that._textureCache[cacheKey]) {\r\n                                                that._textureCache[cacheKey].destroy();\r\n                                                delete that._textureCache[cacheKey];\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    callback.isLoading = false;\r\n\r\n                                }).otherwise(function (err) {\r\n                                    console.log(err);\r\n                                })\r\n\r\n                            } else {\r\n                                loadImage(item.value).then(function (image) {\r\n                                    if (that._textureCache[cacheKey]) {\r\n                                        that._textureCache[cacheKey].destroy && that._textureCache[cacheKey].destroy();\r\n                                    }\r\n                                    that._textureCache[cacheKey] = onTextureImageLoaded(image, item);\r\n                                    if (item.onDispose) {\r\n                                        item.onDispose(function () {\r\n                                            if (that._textureCache[cacheKey]) {\r\n                                                that._textureCache[cacheKey].destroy();\r\n                                                delete that._textureCache[cacheKey];\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    callback.isLoading = false;\r\n                                }).otherwise(function (err) {\r\n                                    console.log(err);\r\n                                })\r\n                            }\r\n                        }\r\n\r\n                        if (!that.defaultTextureImage) {\r\n                            that.defaultTextureImage = document.createElement(\"canvas\");\r\n                            that.defaultTextureImage.width = 1;\r\n                            that.defaultTextureImage.height = 1;\r\n                        }\r\n                        if (!that.defaultTexture) {\r\n                            that.defaultTexture = new Texture({\r\n                                context: frameState.context,\r\n                                source: that.defaultTextureImage\r\n                            });\r\n                        }\r\n\r\n                        return that.defaultTexture;\r\n                    }\r\n\r\n                } else {\r\n                    return that._textureCache[cacheKey];\r\n                }\r\n\r\n            }\r\n\r\n            return callback;\r\n        }\r\n\r\n        if (material.uniforms) {\r\n\r\n            function setUniformCallbackFunc(name, item) {\r\n\r\n                if (item !== undefined && item !== null) {//item may be 0\r\n                    var isImageUrl = typeof item.value === \"string\";\r\n                    var isCssColorString = typeof item.value === \"string\";\r\n                    if (typeof item.value === \"string\") {\r\n                        var itemLowerCase = item.value.toLocaleLowerCase();\r\n                        if (itemLowerCase.endsWith(\".png\")\r\n                            || itemLowerCase.endsWith(\".jpg\")\r\n                            || itemLowerCase.endsWith(\".bmp\")\r\n                            || itemLowerCase.endsWith(\".gif\")\r\n                            || itemLowerCase.endsWith(\".tif\")\r\n                            || itemLowerCase.endsWith(\".tiff\")\r\n                            || itemLowerCase.startsWith(\"data:\")\r\n                        ) {\r\n                            isImageUrl = true;\r\n                            isCssColorString = false;\r\n                        } else {\r\n                            try {\r\n                                Cesium.Color.fromCssColorString(item.value);\r\n                                isImageUrl = true;\r\n                                isCssColorString = false;\r\n                            } catch (e) {\r\n                                isImageUrl = false;\r\n                                isCssColorString = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (item.value instanceof Cesium.Cartesian2\r\n                        || item.value instanceof Cesium.Cartesian3\r\n                        || item.value instanceof Cesium.Cartesian4\r\n                        || item.value instanceof Cesium.Color\r\n                        || item.value instanceof Cesium.Matrix4\r\n                        || item.value instanceof Cesium.Matrix3\r\n                        || item.value instanceof Cesium.Matrix2\r\n                        || item.value instanceof Cesium.Texture\r\n                        || typeof item.value === \"number\"\r\n                        || typeof item.value === \"boolean\"\r\n                        || isCssColorString\r\n                        || item.isColor\r\n                        || item.isCartesian2\r\n                        || item.isCartesian3\r\n                        || item.isCartesian4\r\n                        || item.value instanceof Cesium.Texture\r\n                        || (item.value instanceof Array && (typeof item.value[0] === 'number'\r\n                            || item.value[0] instanceof Cesium.Cartesian2\r\n                            || item.value[0] instanceof Cesium.Cartesian3\r\n                            || item.value[0] instanceof Cesium.Cartesian4))\r\n                    ) {\r\n                        if (!that._uniformValueCache) {\r\n                            that._uniformValueCache = {};\r\n                        }\r\n                        that._uniformValueCache[item.uuid] = item;\r\n                        if (isCssColorString) {\r\n                            item.value = Cesium.Color.fromCssColorString(item.value);\r\n                        }\r\n                        uniformMap[name] = function () {\r\n                            return that._uniformValueCache[item.uuid].value;\r\n                        }\r\n                        if (item.onDispose) {\r\n                            item.onDispose(function () {\r\n                                if (that._uniformValueCache[item.uuid]) {\r\n                                    delete that._uniformValueCache[item.uuid];\r\n                                }\r\n                            })\r\n                        }\r\n                    } else if (item.value instanceof Array && item.value.length == 6) {\r\n                        uniformMap[name] = getCubeTextureCallback(name, item);\r\n                    } else if (isImageUrl\r\n                        || item.value instanceof HTMLImageElement\r\n                        || item.value instanceof HTMLCanvasElement\r\n                        || item.value instanceof HTMLVideoElement\r\n                    ) {\r\n                        uniformMap[name] = getTextureCallback(item, material);\r\n                    } else if (item.value instanceof FramebufferTexture) {\r\n                        if (!that._renderToTextureCommands) {\r\n                            that._renderToTextureCommands = [];\r\n                        }\r\n                        if (!that._framebufferTextures[item.uuid]) {\r\n                            that._framebufferTextures[item.uuid] = item;\r\n                        }\r\n                        uniformMap[name] = function () {\r\n                            if (!that._framebufferTextures[item.uuid]\r\n                                || !that._framebufferTextures[item.uuid].value.texture) {\r\n                                return frameState.context.defaultTexture;\r\n                            }\r\n                            return that._framebufferTextures[item.uuid].value.texture;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var uniforms = material.uniforms;\r\n            for (var name in uniforms) {\r\n\r\n                if (uniforms.hasOwnProperty(name) && Cesium.defined(uniforms[name].value) && uniforms[name].value != null) {\r\n                    if (Array.isArray(uniforms[name].value) && uniforms[name].value.length == 0) {\r\n                        continue;\r\n                    }\r\n                    var item = uniforms[name];\r\n                    if (item == undefined || item == null) {\r\n                        continue;\r\n                    }\r\n                    setUniformCallbackFunc(name, item);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._uniformMaps[material.uuid];\r\n    },\r\n    /**\r\n    *\r\n    *@param {Cesium.Geometry} geometry\r\n    *@param {Cesium.Material} material\r\n    *@return {String}\r\n    *@private  \r\n    */\r\n    getVertexShaderSource: function (mesh, material) {\r\n        var geometry = mesh.geometry;\r\n        function getAttributeDefineBlok(userDefine) {\r\n            var glsl = \"\";\r\n\r\n            var attrs = geometry.attributes;\r\n            for (var name in attrs) {\r\n\r\n                if (attrs.hasOwnProperty(name)) {\r\n                    var attr = attrs[name]\r\n                    if (attr) {\r\n\r\n                        var type = null;\r\n                        switch (attr.componentsPerAttribute) {\r\n                            case 1:\r\n                                type = \"float\";\r\n                                break;\r\n                            case 2:\r\n                                type = \"vec2\";\r\n                                break;\r\n                            case 3:\r\n                                type = \"vec3\";\r\n                                break;\r\n                            case 4:\r\n                                type = \"vec4\";\r\n                                break;\r\n                            default:\r\n                        }\r\n\r\n                        if (type) {\r\n                            if (userDefine.indexOf(\"attribute \" + type + \" \" + name) >= 0) {\r\n                                continue;\r\n                            }\r\n                            glsl += \"attribute \" + type + \" \" + name + \";\\n\";\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            return glsl;\r\n        }\r\n\r\n        var uniforms = \"\\n\\\r\n        uniform mat4 modelViewMatrix;\\n\\\r\n        uniform mat4 viewMatrix;\\n\\\r\n        uniform mat4 modelMatrix;\\n\\\r\n        uniform mat4 projectionMatrix;\\n\\\r\n        uniform mat3 normalMatrix;\\n\\\r\n        uniform mat4 u_modelViewMatrix;\\n\\\r\n        uniform mat4 u_viewMatrix;\\n\\\r\n        uniform mat4 u_modelMatrix;\\n\\\r\n        uniform mat4 u_projectionMatrix;\\n\\\r\n        uniform mat3 u_normalMatrix;\\n\\\r\n        uniform vec3 cameraPosition;\\n\\\r\n        uniform vec3 u_cameraPosition;\\n\";\r\n\r\n        var innerUniforms = [\r\n\r\n            mesh._instances && mesh._instances.length > 0 ? 'mat4 modelViewMatrix' : \"uniform mat4 modelViewMatrix\",\r\n            mesh._instances && mesh._instances.length > 0 ? 'mat4 modelMatrix' : \"uniform mat4 modelMatrix\",\r\n            \"uniform mat4 projectionMatrix\",\r\n            \"uniform mat3 normalMatrix\",\r\n            mesh._instances && mesh._instances.length > 0 ? 'mat4 u_modelViewMatrix' : \"uniform mat4 u_modelViewMatrix\",\r\n            mesh._instances && mesh._instances.length > 0 ? 'mat4 u_modelMatrix' : \"uniform mat4 u_modelMatrix\",\r\n            \"uniform mat4 u_projectionMatrix\",\r\n            \"uniform mat3 u_normalMatrix\",\r\n            \"uniform mat4 u_viewMatrix\",\r\n            \"uniform mat4 viewMatrix\",\r\n            \"uniform vec3 cameraPosition\",\r\n            \"uniform vec3 u_cameraPosition\"\r\n        ];\r\n        if (material.vertexShader) {\r\n            uniforms = \"\";\r\n            innerUniforms.forEach(function (item) {\r\n                if (material.vertexShader.indexOf(item) < 0) {\r\n                    uniforms += item + \";\\n\";\r\n                }\r\n            });\r\n            var vs = getAttributeDefineBlok(material.vertexShader) + uniforms +\r\n                material.vertexShader;\r\n\r\n            vs = ShaderChunk.parseIncludes(vs);\r\n\r\n            return vs;\r\n        }\r\n        else {\r\n            throw new Error(\"material.vertexShader 是必须参数\");\r\n        }\r\n    },\r\n    /**\r\n     * \r\n     *@param {Cesium.Material} material\r\n     *@return {String} \r\n     *@private\r\n     */\r\n    getFragmentShaderSource: function (material) {\r\n\r\n        if (material.fragmentShader) {\r\n            var fs = ShaderChunk.parseIncludes(material.fragmentShader);\r\n            return fs;\r\n        } else {\r\n            throw new Error(\"material.fragmentShader 是必须参数\");\r\n        }\r\n    }\r\n}\r\n\r\nMeshVisualizer.prototype._computeModelMatrix = function (mesh, frameState) {\r\n    if (mesh._actualMesh) {\r\n        mesh = mesh._actualMesh;\r\n    }\r\n    var that = this;\r\n    if (mesh instanceof LOD || mesh instanceof ReferenceMesh || typeof mesh.update === 'function') {\r\n        if (mesh.parent) {\r\n            if (mesh.parent == that) {\r\n                mesh.update(that._actualModelMatrix, frameState);\r\n\r\n            } else if (mesh.parent.modelMatrix) {\r\n                mesh.update(mesh.parent.modelMatrix, frameState);\r\n            } else {\r\n                mesh.update(that._actualModelMatrix, frameState);\r\n            }\r\n        } else {\r\n            mesh.update(that._actualModelMatrix, frameState);\r\n        }\r\n    } else {\r\n        var position = mesh.position;\r\n        if (mesh.parent instanceof LOD) {\r\n            Matrix4.clone(mesh.parent.modelMatrix, mesh.modelMatrix);\r\n\r\n        } else if (mesh._modelMatrixNeedsUpdate) {\r\n            var rotation = mesh.quaternion ? mesh.quaternion : mesh.rotation;\r\n\r\n            if (mesh.parent && mesh.parent.modelMatrix) {\r\n\r\n                var actualModelMatrix = mesh.parent.modelMatrix ? mesh.parent.modelMatrix : mesh._drawCommand.modelMatrix;\r\n                RendererUtils.computeModelMatrix(\r\n                    actualModelMatrix,\r\n                    mesh.position,\r\n                    rotation,\r\n                    mesh.scale,\r\n                    mesh.modelMatrix\r\n                );\r\n\r\n            } else {\r\n                RendererUtils.computeModelMatrix(\r\n                    that._actualModelMatrix,\r\n                    mesh.position,\r\n                    rotation,\r\n                    mesh.scale,\r\n                    mesh.modelMatrix\r\n                );\r\n            }\r\n\r\n            mesh._modelMatrixNeedsUpdate = false;\r\n        }\r\n    }\r\n}\r\n/**\r\n*\r\n*@param {Cesium.FrameState}frameState\r\n*/\r\nMeshVisualizer.prototype.update = function (frameState) {\r\n    if (!this._scene) {\r\n        this._scene = frameState.camera._scene;\r\n    }\r\n    if (!this._ready || !this.show && this._chidren.length > 0) {//如果未准备好则不加入渲染队列\r\n        return;\r\n    }\r\n    this.beforeUpdate.raiseEvent(frameState);\r\n\r\n    var that = this;\r\n    var wireframeChanged = false;\r\n    var sysWireframe = frameState.camera._scene._globe._surface.tileProvider._debug.wireframe;\r\n    if (this.debug) {\r\n        sysWireframe = true;\r\n    }\r\n\r\n    if (sysWireframe != this._isWireframe) {\r\n        wireframeChanged = true;\r\n    }\r\n    if (this._modelMatrixNeedsUpdate) {\r\n        this._actualModelMatrix = RendererUtils.computeModelMatrix(\r\n            this._modelMatrix,\r\n            this._position,\r\n            this._rotation,\r\n            this._scale,\r\n            this._actualModelMatrix\r\n        );\r\n        if (this._up && this._up.y) {\r\n            this._actualModelMatrix = RendererUtils.yUp2Zup(this._actualModelMatrix, this._actualModelMatrix);\r\n        }\r\n        Cesium.Cartesian3.clone(this._scale, this._oldScale);\r\n        Cesium.Cartesian3.clone(this._position, this._oldPosition);\r\n        this._modelMatrixNeedsUpdate = false;\r\n    }\r\n\r\n    MeshVisualizer.traverse(this, function (mesh) {\r\n        if (!mesh.show) return;\r\n\r\n        if (mesh._instances && mesh._instances.length) {\r\n            mesh._availableInstances = mesh._availableInstances || [];\r\n            mesh._availableInstances.splice(0);\r\n\r\n            if (!mesh.geometry.boundingSphere) {\r\n                mesh.geometry.boundingSphere = Cesium.BoundingSphere.fromVertices(mesh.geometry.attributes.position.values);\r\n            }\r\n\r\n            mesh._instances.forEach(function (instance) {\r\n                if (!instance.show) return;\r\n                Matrix4.getTranslation(instance.modelMatrix, instance.boundingSphere.center);\r\n                instance.boundingSphere.radius = mesh.geometry.boundingSphere.radius;\r\n                var intersect = frameState.cullingVolume.computeVisibility(instance.boundingSphere)\r\n                if (intersect != Cesium.Intersect.OUTSIDE) {\r\n                    mesh._availableInstances.push(instance)\r\n                }\r\n            });\r\n            if (mesh._availableInstances.length == 0) return;\r\n        }\r\n\r\n        if (MeshUtils.isMesh3js(mesh)) {\r\n            var needsUpdate = !mesh._actualMesh\r\n                || mesh.needsUpdate\r\n                || mesh.geometry.needsUpdate;\r\n\r\n            if (needsUpdate) {\r\n                mesh._actualMesh = MeshUtils.fromMesh3js(mesh);\r\n                mesh.modelMatrixNeedsUpdate = true;\r\n            }\r\n            else {\r\n                for (var pn in mesh.geometry.attributes) {\r\n                    if (mesh.geometry.attributes.hasOwnProperty(pn)) {\r\n                        mesh._actualMesh.geometry.attributes[pn].needsUpdate = mesh.geometry.attributes[pn].needsUpdate;\r\n                    }\r\n                }\r\n                var index = mesh.geometry.index;\r\n                if (index && index.needsUpdate) {\r\n                    mesh._actualMesh.geometry.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            mesh._actualMesh.quaternion = Cesium.Quaternion.clone(mesh.quaternion);\r\n            mesh._actualMesh.position = mesh.position;\r\n            mesh._actualMesh.scale = mesh.scale;\r\n            mesh._actualMesh.modelMatrixNeedsUpdate = mesh.modelMatrixNeedsUpdate;\r\n            mesh = mesh._actualMesh;\r\n            MaterialUtils.updateMaterialFrom3js(mesh.material);\r\n        }\r\n\r\n        that._computeModelMatrix(mesh, frameState);\r\n\r\n        if (typeof mesh.update !== 'function') {\r\n            if (frameState.passes.pick && !mesh.material.allowPick) {\r\n                return;\r\n            }\r\n\r\n            if (!mesh._drawCommand\r\n                || mesh.needsUpdate\r\n                || mesh.geometry.needsUpdate\r\n                || wireframeChanged\r\n            ) {//重新构建绘图命令，比如geometry完全不同于之前一帧 或者顶点和索引数量都发生改变等时，执行这段\r\n\r\n                if (sysWireframe || mesh.material.wireframe) {\r\n                    that.toWireframe(mesh.geometry);\r\n                } else {\r\n                    that.restoreFromWireframe(mesh.geometry);\r\n                }\r\n\r\n                if (mesh._drawCommand) mesh._drawCommand.destroy();\r\n                mesh._drawCommand = that.createDrawCommand(mesh, frameState);\r\n\r\n                mesh.needsUpdate = false;\r\n                mesh.geometry.needsUpdate = false;\r\n            } else {//在不需要重新构建绘图命令时，检查各个属性和索引是否需要更新，需要则将更新相应的缓冲区\r\n\r\n                //更新属性缓冲区\r\n                for (var name in mesh.geometry.attributes) {\r\n                    if (mesh.geometry.attributes.hasOwnProperty(name)) {\r\n                        if (mesh.geometry.attributes[name] && mesh.geometry.attributes[name].needsUpdate) {\r\n                            var attrLocation = mesh._drawCommand.vertexArray._attributeLocations[name]\r\n                            var vb = mesh._drawCommand.vertexArray._attributes[attrLocation].vertexBuffer;\r\n                            var arrayView = mesh.geometry.attributes[name].values;\r\n                            var gl = vb._gl;\r\n                            var target = vb._bufferTarget;\r\n                            gl.bindBuffer(target, vb._buffer);\r\n                            gl.bufferData(target, arrayView, BufferUsage.STATIC_DRAW);\r\n                            gl.bindBuffer(target, null);\r\n\r\n                            // vb.copyFromArrayView(mesh.geometry.attributes[name].values, 0);\r\n                        }\r\n                    }\r\n                }\r\n                //更新索引缓冲区\r\n                if (mesh.geometry.indexNeedsUpdate) {\r\n                    var vb = mesh._drawCommand.vertexArray.indexBuffer;\r\n                    var gl = vb._gl;\r\n                    var target = vb._bufferTarget;\r\n                    gl.bindBuffer(target, vb._buffer);\r\n                    gl.bufferData(target, mesh.geometry.indices, BufferUsage.STATIC_DRAW);\r\n                    gl.bindBuffer(target, null);\r\n                    mesh.geometry.indexNeedsUpdate = false;\r\n                    // vb.copyFromArrayView(mesh.geometry.indices, 0);\r\n                }\r\n\r\n                if (mesh._instances && mesh._instances.length) {\r\n                    updateVertexBuffer(mesh, frameState.context);\r\n                }\r\n            }\r\n\r\n            mesh._drawCommand.modelMatrix = mesh.modelMatrix;\r\n\r\n            if (mesh._instances && mesh._instances.length) {\r\n                mesh._drawCommand.boundingVolume = mesh._boundingSphere;\r\n                mesh._drawCommand.instanceCount = mesh._availableInstances.length;\r\n                mesh._pickCommand && (mesh._pickCommand.instanceCount = mesh._availableInstances.length);\r\n            }\r\n            else {\r\n                if (!mesh._drawCommand.boundingVolume) {\r\n                    if (!mesh.geometry.boundingSphere) {\r\n                        mesh.geometry.boundingSphere = Cesium.BoundingSphere.fromVertices(mesh.geometry.attributes.position.values);\r\n                    }\r\n                    mesh._drawCommand.boundingVolume = Cesium.BoundingSphere.clone(mesh.geometry.boundingSphere);\r\n                }\r\n                Cesium.Matrix4.getTranslation(mesh.modelMatrix, mesh._drawCommand.boundingVolume.center);\r\n            }\r\n            mesh._pickCommand.boundingVolume = mesh._drawCommand.boundingVolume;\r\n\r\n            mesh._drawCommand.uniformMap = that.getUniformMap(mesh.material, frameState);\r\n            if (frameState.passes.pick) {\r\n\r\n                var command = mesh._pickCommand;\r\n                frameState.commandList.push(command);\r\n\r\n            } else {\r\n                mesh.material._renderStateOptions.depthTest.enabled = mesh.material.depthTest;\r\n                mesh._drawCommand.renderState = RenderState.fromCache(mesh.material._renderStateOptions);\r\n                // mesh._drawCommand.renderState.depthTest.enabled = mesh.material.depthTest;\r\n\r\n                mesh._drawCommand.shaderProgram = mesh._drawCommand._sp;\r\n                frameState.commandList.push(mesh._drawCommand);\r\n            }\r\n\r\n        } else {\r\n            mesh.needsUpdate = false;\r\n        }\r\n\r\n    }, true);\r\n\r\n    //执行帧缓冲绘图命令\r\n    for (var i in that._framebufferTextures) {\r\n        if (that._framebufferTextures.hasOwnProperty(i)) {\r\n            var item = that._framebufferTextures[i].value;\r\n            that.updateFrameBufferTexture(frameState, item);\r\n        }\r\n    }\r\n\r\n    this._isWireframe = sysWireframe;\r\n    wireframeChanged = false;\r\n    this._modelMatrixNeedsUpdate = false;\r\n    this._geometryChanged = false;\r\n\r\n}\r\n\r\n///////2020.04.20  --start\r\n\r\n\r\n/**\r\n*单独渲染frameBufferTexture中的mesh，最终更新frameBufferTexture中的texture\r\n*@param {Cesium.FrameState}frameState\r\n*@param {Cesium.FramebufferTexture}frameBufferTexture\r\n@param {{x:number,y:number,width:number,height:number}}viewport\r\n*/\r\nMeshVisualizer.prototype.initFrameBufferTexture = function (frameState, frameBufferTexture, viewport) {\r\n    var that = this;\r\n\r\n    var item = frameBufferTexture;\r\n    if (item instanceof FramebufferTexture) {\r\n\r\n        item.drawCommands = [];\r\n        MeshVisualizer.traverse(item.mesh, function (mesh) {\r\n            if (MeshUtils.isMesh3js(mesh)) {\r\n                var needsUpdate = !mesh._actualMesh\r\n                    || mesh.needsUpdate\r\n                    || mesh.geometry.needsUpdate;\r\n\r\n                if (needsUpdate) {\r\n                    mesh._actualMesh = MeshUtils.fromMesh3js(mesh);\r\n                }\r\n                if (!needsUpdate) {\r\n                    for (var pn in mesh.geometry.attributes) {\r\n                        if (mesh.geometry.attributes.hasOwnProperty(pn)) {\r\n                            mesh._actualMesh.geometry[pn].needsUpdate = mesh.geometry.attributes[pn].needsUpdate;\r\n                        }\r\n                    }\r\n                    var index = mesh.geometry.getIndex();\r\n                    if (index && index.needsUpdate) {\r\n                        mesh._actualMesh.geometry.needsUpdate = true;\r\n                    }\r\n                }\r\n\r\n                mesh._actualMesh.quaternion = Cesium.Quaternion.clone(mesh.quaternion);\r\n                mesh._actualMesh.position = mesh.position;\r\n                mesh._actualMesh.scale = mesh.scale;\r\n                mesh._actualMesh.modelMatrixNeedsUpdate = mesh.modelMatrixNeedsUpdate;\r\n                mesh = mesh._actualMesh;\r\n                MaterialUtils.updateMaterialFrom3js(mesh.material);\r\n            }\r\n            that._computeModelMatrix(mesh, frameState);\r\n\r\n            if (!mesh._textureCommand\r\n                || mesh.needsUpdate\r\n                || mesh.geometry.needsUpdate\r\n            ) {\r\n                if (mesh.material.wireframe) {\r\n                    that.toWireframe(mesh.geometry);\r\n                } else {\r\n                    that.restoreFromWireframe(mesh.geometry);\r\n                }\r\n\r\n                mesh._textureCommand = that.createDrawCommand(mesh, frameState);\r\n                //mesh._textureCommand.boundingVolume = mesh.geometry.boundingSphere;\r\n                mesh.needsUpdate = false;\r\n                mesh.material.needsUpdate = false;\r\n\r\n            } else {//在不需要重新构建绘图命令时，检查各个属性和索引是否需要更新，需要则将更新相应的缓冲区\r\n\r\n                var vaNeedsUpdate = false\r\n                //更新属性缓冲区\r\n                for (var name in mesh.geometry.attributes) {\r\n                    if (mesh.geometry.attributes.hasOwnProperty(name)\r\n                        && mesh.geometry.attributes[name]) {\r\n\r\n                        if (mesh.geometry.attributes[name] && mesh.geometry.attributes[name].needsUpdate) {\r\n                            var attrLocation = mesh._textureCommand.vertexArray._attributeLocations[name]\r\n                            var vb = mesh._textureCommand.vertexArray._attributes[attrLocation].vertexBuffer;\r\n                            var arrayView = mesh.geometry.attributes[name].values;\r\n                            var gl = vb._gl;\r\n                            if (vb._sizeInBytes == arrayView * arrayView.constructor.BYTES_PER_ELEMENT) {\r\n                                var target = vb._bufferTarget;\r\n                                gl.bindBuffer(target, vb._buffer);\r\n                                gl.bufferData(target, arrayView, BufferUsage.STATIC_DRAW);\r\n                                gl.bindBuffer(target, null);\r\n                            } else {\r\n                                vaNeedsUpdate = true;\r\n                                break;\r\n                            }\r\n\r\n                            //vb.copyFromArrayView(mesh.geometry.attributes[name].values, 0);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //更新索引缓冲区\r\n                if (!vaNeedsUpdate && mesh.geometry.indexNeedsUpdate) {\r\n\r\n                    var arrayBufferView = mesh.geometry.indices;\r\n\r\n                    var vb = mesh._textureCommand.vertexArray.indexBuffer;\r\n                    if (vb._sizeInBytes != arrayBufferView.length * arrayBufferView.constructor.BYTES_PER_ELEMENT) {\r\n                        vb.destroy();\r\n                        var buffer = Buffer.createIndexBuffer({\r\n                            context: frameState.context,\r\n                            typedArray: arrayBufferView,\r\n                            usage: BufferUsage.STATIC_DRAW,\r\n                            indexDatatype: arrayBufferView instanceof Uint16Array ? Cesium.IndexDatatype.UNSIGNED_SHORT : Cesium.IndexDatatype.UNSIGNED_INT\r\n                        });\r\n                        mesh._textureCommand.vertexArray._indexBuffer = buffer;\r\n                    } else {\r\n                        var gl = vb._gl;\r\n                        var target = vb._bufferTarget;\r\n                        gl.bindBuffer(target, vb._buffer);\r\n                        gl.bufferData(target, arrayBufferView, BufferUsage.STATIC_DRAW);\r\n                        gl.bindBuffer(target, null);\r\n                    }\r\n\r\n                    mesh.geometry.indexNeedsUpdate = false;\r\n                }\r\n\r\n                if (vaNeedsUpdate) {\r\n                    var command = mesh._textureCommand\r\n                    var attributeLocations = command.vertexArray._attributeLocations\r\n                    var vertexArrayAttributes = command._cacehVertexArrayAttributes\r\n                    command.vertexArray.destroy();\r\n                    command.vertexArray = VertexArray.fromGeometry({\r\n                        context: frameState.context,\r\n                        geometry: mesh.geometry,\r\n                        attributeLocations: attributeLocations,\r\n                        bufferUsage: BufferUsage.STATIC_DRAW,\r\n\r\n                        vertexArrayAttributes: vertexArrayAttributes\r\n                    });\r\n                    if (vertexArrayAttributes && vertexArrayAttributes.length) {\r\n                        command._cacehVertexArrayAttributes = vertexArrayAttributes.map(function (a) {\r\n                            return a;\r\n                        })\r\n                    }\r\n                    command.vertexArray._attributeLocations = attributeLocations;\r\n\r\n                    for (var name in mesh.geometry.attributes) {\r\n                        if (mesh.geometry.attributes.hasOwnProperty(name)\r\n                            && mesh.geometry.attributes[name]) {\r\n                            mesh.geometry.attributes[name].needsUpdate = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            mesh._textureCommand.modelMatrix = mesh.modelMatrix;\r\n\r\n            var context = frameState.context;\r\n            var drawingBufferWidth = context.drawingBufferWidth;\r\n            var drawingBufferHeight = context.drawingBufferHeight;\r\n            var fbNeedsUpdate = false;\r\n\r\n            if (!item.texture\r\n                || item.texture.width != drawingBufferWidth\r\n                || item.texture.height != drawingBufferHeight\r\n            ) {\r\n                var notFullScreen = item._notFullScreen || Cesium.defined(item.texture);\r\n                if (!notFullScreen) {\r\n                    item.texture = new Texture({\r\n                        context: context,\r\n                        width: drawingBufferWidth,\r\n                        height: drawingBufferHeight,\r\n                        pixelFormat: PixelFormat.RGBA\r\n                        // ,pixelDatatype:PixelDatatype.FLOAT\r\n                    });\r\n                    fbNeedsUpdate = true;\r\n                }\r\n                item._notFullScreen = notFullScreen;\r\n\r\n            }\r\n            if (!item.depthTexture\r\n                || item.depthTexture.width != item.texture.width\r\n                || item.depthTexture.height != item.texture.height\r\n            ) {\r\n                item.depthTexture = new Cesium.Texture({\r\n                    context: context,\r\n                    width: item.texture.width,\r\n                    height: item.texture.height,\r\n                    pixelFormat: Cesium.PixelFormat.DEPTH_COMPONENT,\r\n                    pixelDatatype: Cesium.PixelDatatype.UNSIGNED_SHORT\r\n                });\r\n                fbNeedsUpdate = true;\r\n            }\r\n            if (!item.framebuffer || fbNeedsUpdate) {\r\n                item.framebuffer = new Cesium.Framebuffer({\r\n                    context: context,\r\n                    colorTextures: [item.texture],\r\n                    destroyAttachments: false,\r\n                    depthTexture: item.depthTexture\r\n                });\r\n            }\r\n\r\n            mesh.material._renderStateOptions.depthTest.enabled = mesh.material.depthTest;\r\n            //mesh._textureCommand.renderState.depthTest.enabled = mesh.depthTest;\r\n            if (viewport) {\r\n                mesh.material._renderStateOptions.viewport = viewport;\r\n            }\r\n            mesh._textureCommand.renderState = RenderState.fromCache(mesh.material._renderStateOptions);\r\n\r\n            item.drawCommands.push(mesh._textureCommand);\r\n\r\n        }, true);\r\n\r\n    }\r\n}\r\n\r\n/**\r\n*单独渲染frameBufferTexture中的mesh，最终更新frameBufferTexture中的texture\r\n*@param {Cesium.FrameState}frameState\r\n*@param {Cesium.FramebufferTexture}frameBufferTexture\r\n@param {{x:number,y:number,width:number,height:number}}viewport\r\n*/\r\nMeshVisualizer.prototype.updateFrameBufferTexture = function (frameState, frameBufferTexture, viewport) {\r\n    this.initFrameBufferTexture(frameState, frameBufferTexture, viewport);\r\n    var item = frameBufferTexture;\r\n    if (item.drawCommands && item.drawCommands.length > 0) {\r\n        // item.depthTexture = RendererUtils.renderToTexture(item.drawCommands, frameState, item.texture, item.depthTexture);\r\n        RendererUtils.renderToTexture(item.drawCommands, frameState, item.framebuffer);\r\n\r\n        for (var i = 0; i < item.drawCommands.length; i++) {\r\n\r\n            item.drawCommands[i]._renderStateOptions.viewport = void (0);\r\n            item.drawCommands[i].renderState = RenderState.fromCache(item.drawCommands[i]._renderStateOptions);\r\n\r\n        }\r\n    }\r\n    if (!frameBufferTexture.ready) {\r\n        frameBufferTexture.ready = true;\r\n        frameBufferTexture.readyPromise.resolve(frameBufferTexture);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n*单独渲染frameBufferTexture中的mesh，最终更新frameBufferTexture中的texture，并读取缓冲区的像素,可以用于实现并行计算(参看MeshVisualizer.prototype.compute)\r\n*@param {Cesium.FrameState}frameState\r\n*@param {Cesium.FramebufferTexture}frameBufferTexture\r\n*@param {Object}[viewport] 可选，视口设置\r\n*@param {Number}viewport.x 视口位置x坐标（屏幕坐标系，左上角为原点）\r\n*@param {Number}viewport.y 视口位置y坐标（屏幕坐标系，左上角为原点）\r\n*@param {Number}viewport.width 视口宽度\r\n*@param {Number}viewport.height 视口高度\r\n*@param {Cesium.PixelDatatype}[viewport.pixelDatatype=Cesium.PixelDatatype.UNSIGNED_BYTE] 输出数据中像素值的rgba各项的数据类型，注意：有的移动设备不支持浮点型 \r\n*@param {Object}[readState] 可选，读取设置\r\n*@param {Number}readState.x 读取区域位置x坐标（屏幕坐标系，左上角为原点）\r\n*@param {Number}readState.y 读取区域位置y坐标（屏幕坐标系，左上角为原点）\r\n*@param {Number}readState.width 读取区域宽度\r\n*@param {Number}readState.height 读取区域高度\r\n*@param {Cesium.PixelDatatype}[readState.pixelDatatype=Cesium.PixelDatatype.UNSIGNED_BYTE] 输出数据中像素值的rgba各项的数据类型，注意：有的移动设备不支持浮点型 \r\n*@param {Array.<Number>}outputPixels \r\n*@return {Array.<Number>}outputPixels  输出的像素\r\n*/\r\nMeshVisualizer.prototype.getPixels = function (frameState, frameBufferTexture, viewport, readState, pixels) {\r\n    viewport = viewport ? viewport : {};\r\n    viewport.x = viewport.x ? viewport.x : 0;\r\n    viewport.y = viewport.y ? viewport.y : 0;\r\n    if (!viewport.width) {\r\n        viewport.width = frameState.context._canvas.width;\r\n    }\r\n    if (!viewport.height) {\r\n        viewport.height = frameState.context._canvas.height;\r\n    }\r\n\r\n    this.initFrameBufferTexture(frameState, frameBufferTexture, viewport)\r\n    var item = frameBufferTexture;\r\n    if (item.drawCommands && item.drawCommands.length > 0) {\r\n        if (!item._computeTexture\r\n            || (item._computeTexture\r\n                && (item._computeTexture.width != viewport.width\r\n                    || item._computeTexture.height != viewport.height)\r\n            )) {\r\n            var pixelDatatype = viewport.pixelDatatype;\r\n            var pixelFormat = viewport.pixelFormat;\r\n            if (pixelDatatype == Cesium.PixelDatatype.FLOAT && !frameState.context._gl.getExtension('OES_texture_float')) {\r\n                throw new Cesium.DeveloperError(\"此设备不支持浮点型纹理\");\r\n            }\r\n            if (item._computeTexture) {\r\n                item._computeTexture.destroy();\r\n                item._computeTexture = null;\r\n            }\r\n            item._computeTexture = new Cesium.Texture({\r\n                context: frameState.context,\r\n                width: viewport.width,\r\n                height: viewport.height,\r\n                pixelFormat: pixelFormat,//PixelFormat.RGBA,\r\n                pixelDatatype: pixelDatatype\r\n            });\r\n        }\r\n\r\n        pixels = RendererUtils.renderToPixels(item.drawCommands, frameState, item._computeTexture, readState ? readState : viewport, pixels);\r\n        for (var i = 0; i < item.drawCommands.length; i++) {\r\n            item.drawCommands[i].renderState.viewport = void (0);\r\n        }\r\n        return pixels;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n///////2020.04.20  --end\r\n\r\n/**\r\n*\r\n*@param {Cesium.Mesh}mesh\r\n*/\r\nMeshVisualizer.prototype.add = function (mesh) {\r\n    this._chidren.push(mesh);\r\n}\r\n\r\n/**\r\n*\r\n*/\r\nMeshVisualizer.prototype.destroy = function () {\r\n    this._ready = false;\r\n    MeshVisualizer.traverse(this, function (mesh) {\r\n        if (mesh._drawCommand) {\r\n            delete mesh._drawCommand;\r\n        }\r\n    }, false);\r\n    for (var i in this._uniformValueCache) {\r\n        if (this._uniformValueCache.hasOwnProperty(i)) {\r\n            delete this._uniformValueCache[i];\r\n        }\r\n    }\r\n    for (var i in this._textureCache) {\r\n        if (this._textureCache.hasOwnProperty(i)) {\r\n            delete this._textureCache[i];\r\n        }\r\n    }\r\n    for (var i in this._uniformMaps) {\r\n        if (this._uniformMaps.hasOwnProperty(i)) {\r\n            delete this._uniformMaps[i];\r\n        }\r\n    }\r\n    for (var i in this._framebufferTextures) {\r\n        if (this._framebufferTextures.hasOwnProperty(i)) {\r\n            delete this._framebufferTextures[i];\r\n        }\r\n    }\r\n    this._uniformValueCache = {};\r\n    this._textureCache = {};\r\n    this._uniformMaps = {};\r\n    this._framebufferTextures = {};\r\n    if (this._pickIds) {\r\n        for (i = 0; i < this._pickIds.length; ++i) {\r\n            this._pickIds[i].destroy && this._pickIds[i].destroy();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n*\r\n*遍历节点\r\n*@param {Cesium.MeshVisualizer|Cesium.Mesh}root\r\n*@param {Cesium.MeshVisualizer~TraverseCallback}traverseFunc 访问每个节点时回调该函数，进行相关操作。回调函数包含一个参数，traverseArgs，其中封装了一个属性cancelCurrent，可以通过改变此属性达到终止遍历当前节点的子节点\r\n*@param {Boolean}visibleOnly visibleOnly为true时仅遍历可见的节点，如果父级节点不可见则不再访问其子节点\r\n*/\r\nMeshVisualizer.traverse = function (node, traverseFunc, visibleOnly, scratchTraverseArgs) {\r\n    if (!node) {\r\n        return;\r\n    }\r\n    if (!scratchTraverseArgs) {\r\n        scratchTraverseArgs = {\r\n            cancelCurrent: false,\r\n            cancelAll: false\r\n        };\r\n    }\r\n    scratchTraverseArgs.cancelCurrent = false;\r\n    if (visibleOnly && (!node.show && !node.visible)) {\r\n        return;\r\n    }\r\n    if ((node.geometry && node.material) || node instanceof LOD || node instanceof ReferenceMesh) {\r\n        traverseFunc(node, scratchTraverseArgs);\r\n    }\r\n\r\n    if (node.children) {\r\n        for (var i = 0; i < node.children.length; i++) {\r\n            if (scratchTraverseArgs.cancelCurrent) {\r\n                continue;\r\n            }\r\n            if (scratchTraverseArgs.cancelAll) {\r\n                break;\r\n            }\r\n            MeshVisualizer.traverse(node.children[i], traverseFunc, visibleOnly, scratchTraverseArgs);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n*\r\n*@Cesium.MeshVisualizer~TraverseCallback\r\n*@param {Cesium.Mesh|Cesium.LOD|Cesium.MeshVisualizer|Object}node\r\n*@param {Object}traverseArgs\r\n*@param {Boolean}traverseArgs.cancelCurrent 为true时终止遍历当前节点的子节点\r\n*@param {Boolean}traverseArgs.cancelAll 为true时终止遍历，退出遍历循环\r\n*/\r\n\r\n\r\nObject.defineProperties(MeshVisualizer.prototype, {\r\n    scene: {\r\n        set: function (val) {\r\n            this._scene = val;\r\n        },\r\n        get: function () {\r\n            return this._scene;\r\n        }\r\n    },\r\n    frameState: {\r\n        get: function () {\r\n            if (!this._scene) {\r\n                return undefined;\r\n            }\r\n            return this._scene.frameState;\r\n        }\r\n    },\r\n    modelMatrixNeedsUpdate: {\r\n        get: function () {\r\n            return this._modelMatrixNeedsUpdate;\r\n        },\r\n        set: function (val) {\r\n            this._modelMatrixNeedsUpdate = val;\r\n            if (val) {\r\n                MeshVisualizer.traverse(this, function (child) {\r\n                    child._modelMatrixNeedsUpdate = val;\r\n                }, false);\r\n            }\r\n        }\r\n    },\r\n    showReference: {\r\n        get: function () {\r\n            return this.referenceMesh.show;\r\n        },\r\n        set: function (val) {\r\n            this.referenceMesh.show = val;\r\n        }\r\n    },\r\n    children: {\r\n        get: function () {\r\n            return this._chidren;\r\n        },\r\n        set: function (val) {\r\n            this._chidren = val;\r\n        }\r\n    },\r\n    show: {\r\n        get: function () {\r\n            return this._show;\r\n        },\r\n        set: function (val) {\r\n            this._show = val;\r\n        }\r\n    },\r\n    debug: {\r\n        get: function () {\r\n            return this._debug;\r\n        },\r\n        set: function (val) {\r\n            this._debug = val;\r\n        }\r\n    },\r\n    ready: {\r\n        get: function () {\r\n            return this._ready;\r\n        }\r\n    },\r\n    modelMatrix: {\r\n        get: function () {\r\n            return this._modelMatrix;\r\n        },\r\n        set: function (val) {\r\n            this._modelMatrix = val;\r\n            this._modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        set: function (val) {\r\n            if (val != this._rotation) {\r\n                this._rotation = val;\r\n                this._needUpdate = true;\r\n            }\r\n            this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n            this._rotation = val;\r\n            this._rotation.paramChanged.addEventListener(this._onNeedUpdateChanged);\r\n        }\r\n    },\r\n    position: {\r\n        get: function () {\r\n            return this._position;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._position.x || val.y != this._position.y || val.z != this._position.z) {\r\n                this._position = val;\r\n                this._modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._position = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._scale.x || val.y != this._scale.y || val.z != this._scale.z) {\r\n                this._scale = val;\r\n                this._modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._scale = val;\r\n        }\r\n    }\r\n});\r\nexport default MeshVisualizer;",
    "﻿\r\nimport BasicGeometry from './BasicGeometry.js';\r\n\r\n/**\r\n*\r\n* :\r\n*\r\n*                       -----width----+(width/2,height/2)\r\n*                       |             |\r\n*                       |    (0,0)    |\r\n*                       |      +    height\r\n*                       |             |\r\n*                       |             |\r\n*                        +----width-----\r\n*        (-width/2,-height/2)\r\n*    \r\n*@param {Number}width\r\n*@param {Number}height\r\n*@param {Number}widthSegments\r\n*@param {Number}heightSegments\r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.widthSegments = widthSegments;\r\n    this.heightSegments = heightSegments;\r\n\r\n}\r\n\r\n/**\r\n*\r\n*@param {}\r\n*/\r\nPlaneBufferGeometry.createGeometry = function (planeBufferGeometry) {\r\n\r\n    var width = planeBufferGeometry.width,\r\n        height = planeBufferGeometry.height,\r\n        widthSegments = planeBufferGeometry.widthSegments,\r\n        heightSegments = planeBufferGeometry.heightSegments;\r\n\r\n\r\n    width = width || 1;\r\n    height = height || 1;\r\n\r\n    var width_half = width / 2;\r\n    var height_half = height / 2;\r\n\r\n    var gridX = Math.floor(widthSegments) || 1;\r\n    var gridY = Math.floor(heightSegments) || 1;\r\n\r\n    var gridX1 = gridX + 1;\r\n    var gridY1 = gridY + 1;\r\n\r\n    var segment_width = width / gridX;\r\n    var segment_height = height / gridY;\r\n\r\n    var ix, iy;\r\n\r\n    // buffers\r\n\r\n    var indices = [];\r\n    var vertices = [];\r\n    var normals = [];\r\n    var uvs = [];\r\n\r\n    // generate vertices, normals and uvs\r\n\r\n    for (iy = 0; iy < gridY1; iy++) {\r\n\r\n        var y = iy * segment_height - height_half;\r\n\r\n        for (ix = 0; ix < gridX1; ix++) {\r\n\r\n            var x = ix * segment_width - width_half;\r\n\r\n            vertices.push(x, -y, 0);\r\n\r\n            normals.push(0, 0, 1);\r\n\r\n            uvs.push(ix / gridX);\r\n            uvs.push(1 - (iy / gridY));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // indices\r\n\r\n    for (iy = 0; iy < gridY; iy++) {\r\n\r\n        for (ix = 0; ix < gridX; ix++) {\r\n\r\n            var a = ix + gridX1 * iy;\r\n            var b = ix + gridX1 * (iy + 1);\r\n            var c = (ix + 1) + gridX1 * (iy + 1);\r\n            var d = (ix + 1) + gridX1 * iy;\r\n\r\n            // faces\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    var geom = BasicGeometry.createGeometry({\r\n        positions: new Float32Array(vertices),\r\n        normals: new Float32Array(normals),\r\n        uvs: new Float32Array(uvs),\r\n        indices: new Int32Array(indices)\r\n    })\r\n\r\n    return geom;\r\n}\r\n\r\nexport default PlaneBufferGeometry; ",
    "﻿/**\r\n *:\r\n *\r\n*       p1------------p4\r\n*       |          +  |\r\n*       |       +     |\r\n*       |     +       |\r\n*       |   +         |\r\n*       | +           |\r\n*       p2------------p3\r\n*    \r\n*@param {Object}options \r\n*@param {Array<Number|Cesium.Cartesian3>}options.positions [p1,p2,p3,p4]或者[p1.x,p1.y,p1.z,p2.x,...,p4.z] \r\n*\r\n*@property {Array<Number|Cesium.Cartesian3>}positions \r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction PlaneGeometry(options) {//positions, widthSegments, heightSegments) {\r\n    this.type = 'PlaneGeometry';\r\n    if (!options || !options.positions) {\r\n        throw new Error(\"缺少positions参数\");\r\n    }\r\n    if (options.positions.length != 4 && options.positions.length / 3 != 4) {\r\n        throw new Error(\"positions参数必须包含四个顶点的位置坐标\");\r\n    }\r\n    this.positions = options.positions;\r\n\r\n}\r\n/**\r\n*\r\n*@param {Cesium.PlaneGeometry}\r\n*@return {Cesium.Geometry}\r\n*/\r\nPlaneGeometry.createGeometry = function (planeGeometry) {\r\n    var positions = planeGeometry.positions;\r\n\r\n    var positionsVal;\r\n    if (Array.isArray(positions)) {\r\n        if (positions[0] instanceof Cesium.Cartesian3) {\r\n            positionsVal = new Float32Array(12);\r\n            for (var i = 0; i < positions.length; i++) {\r\n                var p = positions[i];\r\n                positionsVal[i * 3] = p.x;\r\n                positionsVal[i * 3 + 1] = p.y;\r\n                positionsVal[i * 3 + 2] = p.z;\r\n            }\r\n        } else if (typeof positions[0] === 'number') {\r\n            positionsVal = new Float32Array(positionsVal);\r\n        } else {\r\n            throw new Error(\"positions参数有误\");\r\n        }\r\n    } else {\r\n        throw new Error(\"positions参数必须是数组类型\");\r\n    }\r\n    var indices = new Int32Array([0, 1, 3, 1, 2, 3]);\r\n    var attributes = {\r\n        position: new Cesium.GeometryAttribute({\r\n            componentDatatype: Cesium.ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute: 3,\r\n            values: positions\r\n        })\r\n    };\r\n    var bs = Cesium.BoundingSphere.fromVertices(positions);\r\n    var geo = new Cesium.Geometry({\r\n        attributes: attributes,\r\n        indices: new Int32Array(indices),\r\n        primitiveType: Cesium.PrimitiveType.TRIANGLES,\r\n        boundingSphere: bs\r\n    });\r\n    return geo;\r\n}\r\nexport default PlaneGeometry;",
    "﻿\r\nimport ArrowGeometry from './ArrowGeometry.js';\r\nimport Mesh from './Mesh.js';\r\nimport MeshMaterial from './MeshMaterial.js';\r\nimport Rotation from './Rotation.js';\r\nimport RendererUtils from './RendererUtils.js';\r\n\r\nvar defaultValue;\r\n/**\r\n*\r\n*@param {Object}[options]   \r\n*@param {Cesium.ArrowGeometry}[options.axisParameter]\r\n*@param {Boolean}[options.show=true]  \r\n*@param {Cesium.Cartesian3}[options.position]\r\n*@param {Cesium.VolumeRendering.Rotation}[options.rotation]\r\n*@param {Cesium.Cartesian3}[options.scale]    \r\n* \r\n*@property {Boolean}show  \r\n*@property {Cesium.Cartesian3}position\r\n*@property {Cesium.Rotation}rotation\r\n*@property {Cesium.Cartesian3}scale   \r\n*@property {Boolean}needUpdate\r\n*\r\n*@constructor\r\n*@memberof Cesium \r\n*/\r\nfunction ReferenceMesh(options) {\r\n    defaultValue = defaultValue || Cesium.defaultValue;\r\n    options = Cesium.defaultValue(options, {});\r\n    this._axisParameter = new ArrowGeometry(options.axisParameter);\r\n    this._axisParameterY = new ArrowGeometry(options.axisParameter);\r\n    this._axisParameterY.reverse = true;\r\n\r\n    var materialZ = new MeshMaterial({\r\n        defaultColor: \"rgba(255,0,0,1)\",\r\n        wireframe: false,\r\n        side: MeshMaterial.Sides.DOUBLE,\r\n        translucent: false,\r\n\r\n    });\r\n    var materialY = new MeshMaterial({\r\n        defaultColor: \"rgba(0,255,0,1)\",\r\n        wireframe: false,\r\n        side: MeshMaterial.Sides.DOUBLE,\r\n        translucent: true,\r\n\r\n    });\r\n    var materialX = new MeshMaterial({\r\n        defaultColor: \"rgba(0,0,255,1)\",\r\n        wireframe: false,\r\n        side: MeshMaterial.Sides.DOUBLE,\r\n        translucent: false,\r\n\r\n    });\r\n\r\n    var axisLine = ArrowGeometry.createGeometry(new ArrowGeometry(this._axisParameter));\r\n    var axisLineY = ArrowGeometry.createGeometry(new ArrowGeometry(this._axisParameterY));\r\n\r\n    var meshZ = new Mesh(axisLine, materialZ);\r\n    var meshY = new Mesh(axisLineY, materialY);\r\n    var meshX = new Mesh(axisLine, materialX);\r\n    meshZ.position.z = this._axisParameter.length / 2;\r\n\r\n    meshY.position.y = -this._axisParameter.length / 2;\r\n    meshY.rotation.axis.y = 1;\r\n    meshY.rotation.angle = -180;\r\n\r\n    meshX.position.x = this._axisParameter.length / 2;\r\n    meshX.rotation.axis.x = 1;\r\n    meshX.rotation.angle = -180;\r\n\r\n    meshX.parent = this;\r\n    meshY.parent = this;\r\n    meshZ.parent = this;\r\n\r\n    this._children = [meshX, meshY, meshZ];\r\n    this.x = meshX;\r\n    this.y = meshY;\r\n    this.z = meshZ;\r\n\r\n    this.uuid = Cesium.createGuid();\r\n    this.show = defaultValue(options.show, true);\r\n    this._position = defaultValue(options.position, new Cesium.Cartesian3(0, 0, 0));\r\n    this._scale = defaultValue(options.scale, new Cesium.Cartesian3(1, 1, 1));\r\n    this._rotation = defaultValue(options.rotation, { axis: new Cesium.Cartesian3(0, 0, 1), angle: 0 });\r\n    this._rotation = new Rotation(this._rotation.axis, this._rotation.angle);\r\n    this._needsUpdate = true;\r\n    this._modelMatrixNeedsUpdate = true;\r\n    this._modelMatrix = new Cesium.Matrix4();\r\n    Cesium.Matrix4.clone(Cesium.Matrix4.IDENTITY, this._modelMatrix);\r\n\r\n    this._onNeedUpdateChanged = function () {\r\n        this._modelMatrixNeedsUpdate = true;\r\n    };\r\n    this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n    this._parent = null;\r\n\r\n}\r\nfunction removeByValue(arr, val) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i] == val) {\r\n            arr.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n}\r\nObject.defineProperties(ReferenceMesh.prototype, {\r\n    modelMatrix: {\r\n        get: function () {\r\n            return this._modelMatrix;\r\n        }\r\n    },\r\n    parent: {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        set: function (val) {\r\n            if (val && ((val._children && Array.isArray(val._children)) || (val.children && Array.isArray(val.children)))) {\r\n\r\n                if (this._parent && this._parent != val) {\r\n                    var children = this._parent._children ? this._parent._children : this._parent.children;\r\n                    if (Array.isArray(children)) {\r\n                        removeByValue(children, this);\r\n                    }\r\n                }\r\n                this._parent = val;\r\n                if (typeof this._parent.add === 'function') {\r\n                    this._parent.add(this);\r\n                } else {\r\n                    var children = val._children ? val._children : val.children;\r\n                    children.push(this);\r\n                }\r\n            }\r\n            this.modelMatrixNeedsUpdate = true;\r\n        }\r\n    },\r\n    modelMatrixNeedsUpdate: {\r\n        get: function () {\r\n            return this._modelMatrixNeedsUpdate;\r\n        },\r\n        set: function (val) {\r\n            this._modelMatrixNeedsUpdate = val;\r\n            if (this._modelMatrixNeedsUpdate) {\r\n                Mesh.traverse(this, function (mesh) {\r\n                    mesh._modelMatrixNeedsUpdate = val;\r\n                });\r\n            }\r\n        }\r\n    },\r\n    children: {\r\n        get: function () {\r\n            return this._children;\r\n        }\r\n    },\r\n    needsUpdate: {\r\n        get: function () {\r\n            return this._needsUpdate;\r\n        },\r\n        set: function (val) {\r\n            this._needsUpdate = val;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        set: function (val) {\r\n            if (val != this._rotation) {\r\n                this._rotation = val;\r\n                this.modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._rotation.paramChanged.removeEventListener(this._onNeedUpdateChanged);\r\n            this._rotation = val;\r\n            this._rotation.paramChanged.addEventListener(this._onNeedUpdateChanged);\r\n        }\r\n    },\r\n    position: {\r\n        get: function () {\r\n            return this._position;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._position.x || val.y != this._position.y || val.z != this._position.z) {\r\n                this._position = val;\r\n                this.modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._position = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (val) {\r\n            if (val.x != this._scale.x || val.y != this._scale.y || val.z != this._scale.z) {\r\n                this._scale = val;\r\n                this.modelMatrixNeedsUpdate = true;\r\n            }\r\n            this._scale = val;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n*\r\n*@param {Cesium.Matrix4}meshVisulizerModelMatrix\r\n*@param {Cesium.FrameState}frameState\r\n*/\r\nReferenceMesh.prototype.update = function (parentModelMatrix, frameState) {\r\n\r\n    if (this._modelMatrixNeedsUpdate || this._needsUpdate) {\r\n\r\n        RendererUtils.computeModelMatrix(\r\n            parentModelMatrix,\r\n            this.position,\r\n            this.rotation,\r\n            this.scale,\r\n            this.modelMatrix\r\n        );\r\n\r\n        this._modelMatrixNeedsUpdate = false;\r\n    }\r\n}\r\n\r\nexport default ReferenceMesh;",
    "﻿\r\n\r\nvar yUpToZUp, scratchTranslation, scratchQuaternion, scratchScale, scratchTranslationQuaternionRotationScale, clearCommandScratch;\r\n\r\n/**\r\n*\r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction RendererUtils() { }\r\n/**\r\n*使用帧缓冲技术，执行渲染命令，渲染到纹理  \r\n*@param {Cesium.DrawCommand|Array<Cesium.DrawCommand>}drawCommand 渲染命令（集合）\r\n*@param {Cesium.FrameState}frameState 帧状态对象，可以从Cesium.Scene中获取\r\n*@param {Cesium.Texture}outpuTexture 将渲染到的目标纹理对象\r\n*@param {Cesium.Texture}[outputDepthTexture] 可选，输出的深度纹理\r\n*/\r\nRendererUtils.renderToTexture = function (drawCommand, frameState, outputTexture, outputDepthTexture) {\r\n    var drawCommands = Array.isArray(drawCommand) ? drawCommand : [drawCommand];\r\n    var context = frameState.context;\r\n\r\n    var framebuffer = null, destroy = false;\r\n    if (outputTexture instanceof Cesium.Framebuffer) {\r\n        framebuffer = outputTexture;\r\n    }\r\n    if (!framebuffer) {\r\n        if (!outputDepthTexture\r\n            || outputDepthTexture.width != outputTexture.width\r\n            || outputDepthTexture.height != outputTexture.height) {\r\n            outputDepthTexture = new Cesium.Texture({\r\n                context: context,\r\n                width: outputTexture.width,\r\n                height: outputTexture.height,\r\n                pixelFormat: Cesium.PixelFormat.DEPTH_COMPONENT,\r\n                pixelDatatype: Cesium.PixelDatatype.UNSIGNED_SHORT\r\n            })\r\n\r\n        }\r\n        framebuffer = new Cesium.Framebuffer({\r\n            context: context,\r\n            colorTextures: [outputTexture],\r\n            destroyAttachments: false,\r\n            depthTexture: outputDepthTexture\r\n        });\r\n        destroy = true;\r\n    }\r\n    if (!clearCommandScratch) {\r\n        clearCommandScratch = new Cesium.ClearCommand({\r\n            color: new Cesium.Color(0.0, 0.0, 0.0, 0.0)\r\n        });\r\n    }\r\n    var clearCommand = clearCommandScratch;\r\n    clearCommand.framebuffer = framebuffer;\r\n    clearCommand.renderState = frameState.renderState;\r\n    clearCommand.execute(context);\r\n\r\n    drawCommands.forEach(function (drawCommand) {\r\n        drawCommand.framebuffer = framebuffer;\r\n        drawCommand.execute(context);\r\n    });\r\n    if (destroy) {\r\n        framebuffer.destroy();\r\n    }\r\n}\r\n\r\n/**\r\n*使用帧缓冲技术，执行渲染命令，渲染到纹理并读取像素值，可以用于实现并行计算  \r\n*@param {Cesium.DrawCommand|Array<Cesium.DrawCommand>}drawCommand 渲染命令（集合）\r\n*@param {Cesium.FrameState}frameState 帧状态对象，可以从Cesium.Scene中获取\r\n*@param {Cesium.Texture}outpuTexture 将渲染到的目标纹理对象\r\n*@param {Object}[options] \r\n*@param {Array.<Number>}outputPixels \r\n*@return {Array.<Number>}outputPixels  输出的像素\r\n*/\r\nRendererUtils.renderToPixels = function (drawCommand, frameState, outputTexture, options, pixels) {\r\n    var drawCommands = Array.isArray(drawCommand) ? drawCommand : [drawCommand];\r\n    var context = frameState.context;\r\n\r\n    var framebuffer = null, destroy = false;\r\n    if (outputTexture instanceof Cesium.Framebuffer) {\r\n        framebuffer = outputTexture;\r\n    }\r\n\r\n    if (!framebuffer) {\r\n\r\n        var outputDepthTexture = new Cesium.Texture({\r\n            context: context,\r\n            width: outputTexture.width,\r\n            height: outputTexture.height,\r\n            pixelFormat: Cesium.PixelFormat.DEPTH_COMPONENT,\r\n            pixelDatatype: Cesium.PixelDatatype.UNSIGNED_SHORT\r\n        })\r\n\r\n        framebuffer = new Cesium.Framebuffer({\r\n            context: context,\r\n            colorTextures: [outputTexture],\r\n            depthTexture: context.depthTexture ? outputDepthTexture : undefined,\r\n            destroyAttachments: false\r\n        });\r\n        destroy = true;\r\n    }\r\n    if (!clearCommandScratch) {\r\n        clearCommandScratch = new Cesium.ClearCommand({\r\n            color: new Cesium.Color(0.0, 0.0, 0.0, 0.0)\r\n        });\r\n    }\r\n    var clearCommand = clearCommandScratch;\r\n    clearCommand.framebuffer = framebuffer;\r\n    clearCommand.renderState = frameState.renderState;\r\n    clearCommand.execute(context);\r\n\r\n    drawCommands.forEach(function (drawCommand) {\r\n        drawCommand.framebuffer = framebuffer;\r\n        drawCommand.execute(context);\r\n    });\r\n    options = options ? options : {};\r\n\r\n    pixels = RendererUtils.readPixels(frameState, Object.assign(options, {\r\n        framebuffer: framebuffer\r\n    }), pixels);\r\n    delete options.framebuffer;\r\n    if (destroy) {\r\n        framebuffer.destroy();\r\n    }\r\n    return pixels;\r\n}\r\n\r\nvar scratchBackBufferArray;\r\n\r\n/**\r\n * Validates a framebuffer.\r\n * Available in debug builds only.\r\n * @private\r\n */\r\nfunction validateFramebuffer(context) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (context.validateFramebuffer) {\r\n        var gl = context._gl;\r\n        var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\r\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n            var message;\r\n\r\n            switch (status) {\r\n                case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\r\n                    message = 'Framebuffer is not complete.  Incomplete attachment: at least one attachment point with a renderbuffer or texture attached has its attached object no longer in existence or has an attached image with a width or height of zero, or the color attachment point has a non-color-renderable image attached, or the depth attachment point has a non-depth-renderable image attached, or the stencil attachment point has a non-stencil-renderable image attached.  Color-renderable formats include GL_RGBA4, GL_RGB5_A1, and GL_RGB565. GL_DEPTH_COMPONENT16 is the only depth-renderable format. GL_STENCIL_INDEX8 is the only stencil-renderable format.';\r\n                    break;\r\n                case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\r\n                    message = 'Framebuffer is not complete.  Incomplete dimensions: not all attached images have the same width and height.';\r\n                    break;\r\n                case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\r\n                    message = 'Framebuffer is not complete.  Missing attachment: no images are attached to the framebuffer.';\r\n                    break;\r\n                case gl.FRAMEBUFFER_UNSUPPORTED:\r\n                    message = 'Framebuffer is not complete.  Unsupported: the combination of internal formats of the attached images violates an implementation-dependent set of restrictions.';\r\n                    break;\r\n            }\r\n\r\n            throw new DeveloperError(message);\r\n        }\r\n    }\r\n    //>>includeEnd('debug');\r\n}\r\nfunction bindFramebuffer(context, framebuffer) {\r\n    if (framebuffer !== context._currentFramebuffer) {\r\n        // this check must use typeof, not defined, because defined doesn't work with undeclared variables.\r\n        if (typeof WebGLRenderingContext !== 'undefined') {\r\n            scratchBackBufferArray = [Cesium.WebGLConstants.BACK];\r\n        }\r\n        context._currentFramebuffer = framebuffer;\r\n        var buffers = scratchBackBufferArray;\r\n\r\n        if (Cesium.defined(framebuffer)) {\r\n            framebuffer._bind();\r\n            validateFramebuffer(context);\r\n\r\n            // TODO: Need a way for a command to give what draw buffers are active.\r\n            buffers = framebuffer._getActiveColorAttachments();\r\n        } else {\r\n            var gl = context._gl;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n        if (context.drawBuffers) {\r\n            context.glDrawBuffers(buffers);\r\n        }\r\n    }\r\n}\r\n//var pixels;\r\nvar scratchPixelFormat;\r\nvar scratchPixelDatatype;\r\n/**\r\n * @param {Cesium.FrameState}frameState\r\n * @param {Object}[readState]\r\n * @param {number}readState.x\r\n * @param {number}readState.y\r\n * @param {number}readState.width\r\n * @param {number}readState.height\r\n * @param {Cesium.PixelDatatype}readState.pixelDatatype\r\n * @param {Cesium.PixelFormat}readState.pixelFormat\r\n * @param {ArrayBufferView}pixels\r\n * @return {ArrayBufferView}\r\n */\r\nRendererUtils.readPixels = function (frameState, readState, pixels) {\r\n    var gl = frameState.context._gl;\r\n\r\n    readState = readState || {};\r\n    var x = Math.max(readState.x || 0, 0);\r\n    var y = Math.max(readState.y || 0, 0);\r\n    var width = readState.width || gl.drawingBufferWidth;\r\n    var height = readState.height || gl.drawingBufferHeight;\r\n    var pixelDatatype = readState.pixelDatatype || Cesium.PixelDatatype.UNSIGNED_BYTE;\r\n    var pixelFormat = readState.pixelFormat || Cesium.PixelFormat.RGBA;\r\n    var framebuffer = readState.framebuffer;\r\n\r\n    if (width <= 0) {\r\n        throw new Cesium.DeveloperError('readState.width must be greater than zero.');\r\n    }\r\n\r\n    if (height <= 0) {\r\n        throw new Cesium.DeveloperError('readState.height must be greater than zero.');\r\n    }\r\n\r\n    bindFramebuffer(this, framebuffer);\r\n    var size = 4;\r\n    if (pixelFormat == Cesium.PixelFormat.RGB) {\r\n        size = 3;\r\n    } else if (pixelFormat == Cesium.PixelFormat.ALPHA) {\r\n        size = 1;\r\n    }\r\n\r\n    if (!pixels) {//|| pixels.length !== size * width * height\r\n        //|| scratchPixelFormat != pixelFormat || scratchPixelDatatype != pixelDatatype) {\r\n\r\n        if (pixelDatatype == Cesium.PixelDatatype.FLOAT) {\r\n            pixelDatatype = gl.FLOAT;\r\n            pixels = new Float32Array(size * width * height);\r\n        } else if (pixelDatatype == Cesium.PixelDatatype.UNSIGNED_BYTE) {\r\n            pixels = new Uint8Array(size * width * height);\r\n        } else {\r\n            pixels = new Uint16Array(size * width * height);\r\n        }\r\n    }\r\n    gl.readPixels(x, y, width, height, pixelFormat, pixelDatatype, pixels);\r\n    scratchPixelFormat = pixelFormat;\r\n    scratchPixelDatatype = pixelDatatype;\r\n    return pixels;\r\n};\r\n\r\n/**\r\n*\r\n*@param {Cesium.Matrix4}srcMatrix\r\n*@param {Cesium.Matrix4}dstMatrix\r\n*@return {Cesium.Matrix4}\r\n*/\r\nRendererUtils.yUp2Zup = function (srcMatrix, dstMatrix) {\r\n    if (!yUpToZUp) {\r\n        yUpToZUp = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationX(Cesium.Math.PI_OVER_TWO));\r\n    }\r\n    return Cesium.Matrix4.multiplyTransformation(srcMatrix, yUpToZUp, dstMatrix);\r\n}\r\n/**\r\n*平移、旋转或缩放，返回计算之后的模型转换矩阵\r\n*@param {Cesium.Cartesian3}[translation=undefined]\r\n*@param {Object}[rotation=undefined] 旋转参数\r\n*@param {Cesium.Cartesian3}[rotation.axis] 旋转轴\r\n*@param {Number}[rotation.angle] 旋转角度\r\n*@param {Cesium.Cartesian3}[rotation.scale] 缩放\r\n*@param {Cesium.Matrix4}[outModelMatrix] 计算结果矩阵，和返回值一样，但是传递此参数时则返回值不是新创建的Cesium.Matrix4实例\r\n*@return {Cesium.Matrix4}\r\n*/\r\nRendererUtils.computeModelMatrix = function (srcModelMatrix, translation, rotation, scale, outModelMatrix) {\r\n    if (arguments.length == 0) {\r\n        return srcModelMatrix;\r\n    }\r\n    if (!scratchTranslation) scratchTranslation = new Cesium.Cartesian3();\r\n    if (!scratchQuaternion) scratchQuaternion = new Cesium.Quaternion();\r\n    if (!scratchScale) scratchScale = new Cesium.Cartesian3();\r\n    if (!scratchTranslationQuaternionRotationScale) scratchTranslationQuaternionRotationScale = new Cesium.Matrix4()\r\n\r\n    var Matrix4 = Cesium.Matrix4;\r\n    if (!outModelMatrix) {\r\n        outModelMatrix = new Matrix4();\r\n    }\r\n    Matrix4.clone(srcModelMatrix, outModelMatrix);\r\n\r\n    if (!translation) {\r\n        scratchTranslation.x = 0;\r\n        scratchTranslation.y = 0;\r\n        scratchTranslation.z = 0;\r\n    }\r\n    scratchTranslation.x = translation.x;\r\n    scratchTranslation.y = translation.y;\r\n    scratchTranslation.z = translation.z;\r\n\r\n    if (!scale) {\r\n        scratchScale.x = 0;\r\n        scratchScale.y = 0;\r\n        scratchScale.z = 0;\r\n    }\r\n    scratchScale.x = scale.x;\r\n    scratchScale.y = scale.y;\r\n    scratchScale.z = scale.z;\r\n\r\n    if (rotation instanceof Cesium.Quaternion) {\r\n        Cesium.Quaternion.clone(rotation, scratchQuaternion);\r\n    } else {\r\n        var axis = rotation.axis;\r\n        var angle = rotation.angle;\r\n        Cesium.Quaternion.fromAxisAngle(\r\n            new Cesium.Cartesian3(axis.x, axis.y, axis.z),//axis.y=1 y是旋转轴\r\n            Cesium.Math.toRadians(angle),\r\n            scratchQuaternion\r\n        );\r\n    }\r\n\r\n    //translate,rotate,scale\r\n\r\n    Matrix4.fromTranslationQuaternionRotationScale(\r\n        scratchTranslation, scratchQuaternion,\r\n        scratchScale, scratchTranslationQuaternionRotationScale);\r\n\r\n    Matrix4.multiplyTransformation(\r\n        outModelMatrix,\r\n        scratchTranslationQuaternionRotationScale,\r\n        outModelMatrix);\r\n    return outModelMatrix;\r\n}\r\n\r\nexport default RendererUtils; ",
    "﻿ \r\n/**\r\n*\r\n*@param {Cesium.Cartesian3}axis 旋转轴\r\n*@param {Number}angle 旋转角度\r\n*\r\n*@property {Cesium.Cartesian3}axis 旋转轴\r\n*@property {Number}angle 旋转角度\r\n*@property {Cesium.Event}paramChanged  \r\n*@constructor\r\n*@memberof Cesium\r\n*/\r\nfunction Rotation(axis, angle) {\r\n    this._axis = axis;\r\n    this._angle = angle;\r\n    this.paramChanged = new Cesium.Event();\r\n}\r\nObject.defineProperties(Rotation.prototype, {\r\n    axis: {\r\n        set: function (val) {\r\n            if (val.x != this._axis.x\r\n                || val.y != this._axis.y\r\n                || val.z != this._axis.z) {\r\n                this._axis = val;\r\n                this.paramChanged.raiseEvent();\r\n            }\r\n            this._axis = val;\r\n        },\r\n        get: function () {\r\n            return this._axis;\r\n        }\r\n    },\r\n    angle: {\r\n        set: function (val) {\r\n            if (val != this._angle) {\r\n                this._angle = val;\r\n                this.paramChanged.raiseEvent();\r\n            }\r\n            this._angle = val;\r\n        },\r\n        get: function () {\r\n            return this._angle;\r\n        }\r\n    }\r\n})\r\n\r\nexport default Rotation;",
    "﻿\n/**\n*\n*@memberof Cesium\n*@constructor\n*/\nfunction ShaderUtils() {\n\n}\n\n/**\n*\n*\n*/\nShaderUtils.processShader3js = function (material3js, shader) {\n    var program = new WebGLProgram(material3js, shader);\n    return program;\n\n}\n\nif (typeof THREE != 'undefined') {\n \n    var shaderIDs = {\n        MeshDepthMaterial: 'depth',\n        MeshNormalMaterial: 'normal',\n        MeshBasicMaterial: 'basic',\n        MeshLambertMaterial: 'lambert',\n        MeshPhongMaterial: 'phong',\n        MeshToonMaterial: 'phong',\n        MeshStandardMaterial: 'physical',\n        MeshPhysicalMaterial: 'physical',\n        LineBasicMaterial: 'basic',\n        LineDashedMaterial: 'dashed',\n        PointsMaterial: 'points'\n    };\n\n    var parameterNames = [\n        \"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n        \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n        \"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n        \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n        \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n        \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n        \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n        \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n        \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n        \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\"\n    ];\n    var ShaderChunk = THREE.ShaderChunk;\n    var ShaderLib = THREE.ShaderLib;\n    var BackSide = THREE.BackSide,\n        DoubleSide = THREE.DoubleSide,\n        FlatShading = THREE.FlatShading,\n        CubeUVRefractionMapping = THREE.CubeUVRefractionMapping,\n        CubeUVReflectionMapping = THREE.CubeUVReflectionMapping,\n        GammaEncoding = THREE.GammaEncoding,\n        LinearEncoding = THREE.LinearEncoding,\n        NoToneMapping = THREE.NoToneMapping,\n        AddOperation = THREE.AddOperation,\n        MixOperation = THREE.MixOperation,\n        MultiplyOperation = THREE.MultiplyOperation,\n        EquirectangularRefractionMapping = THREE.EquirectangularRefractionMapping,\n        CubeRefractionMapping = THREE.CubeRefractionMapping,\n        SphericalReflectionMapping = THREE.SphericalReflectionMapping,\n        EquirectangularReflectionMapping = THREE.EquirectangularReflectionMapping,\n        CubeReflectionMapping = THREE.CubeReflectionMapping,\n        PCFSoftShadowMap = THREE.PCFSoftShadowMap,\n        PCFShadowMap = THREE.PCFShadowMap,\n        CineonToneMapping = THREE.CineonToneMapping,\n        Uncharted2ToneMapping = THREE.Uncharted2ToneMapping,\n        ReinhardToneMapping = THREE.ReinhardToneMapping,\n        LinearToneMapping = THREE.LinearToneMapping,\n        GammaEncoding = THREE.GammaEncoding,\n        RGBDEncoding = THREE.RGBDEncoding,\n        RGBM16Encoding = THREE.RGBM16Encoding,\n        RGBM7Encoding = THREE.RGBM7Encoding,\n        RGBEEncoding = THREE.RGBEEncoding,\n        sRGBEncoding = THREE.sRGBEncoding;\n\n    function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n\n        var encoding;\n\n        if (!map) {\n\n            encoding = LinearEncoding;\n\n        } else if (map.isTexture) {\n\n            encoding = map.encoding;\n\n        } else if (map.isWebGLRenderTarget) {\n\n            console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n            encoding = map.texture.encoding;\n\n        }\n\n        // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n        if (encoding === LinearEncoding && gammaOverrideLinear) {\n\n            encoding = GammaEncoding;\n\n        }\n\n        return encoding;\n\n    }\n\n    function getParameters(material) {//, lights, fog, nClipPlanes, nClipIntersection, object) {\n\n        var shaderID = shaderIDs[material.type];\n\n        // heuristics to create shader parameters according to lights in the scene\n        // (not to blow over maxLights budget)\n\n        //var maxBones = allocateBones(object);\n        //var precision = renderer.getPrecision();\n\n        //if (material.precision !== null) {\n\n        //    precision = capabilities.getMaxPrecision(material.precision);\n\n        //    if (precision !== material.precision) {\n\n        //        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\n        //    }\n\n        //}\n\n        var currentRenderTarget = null;// renderer.getCurrentRenderTarget();\n        var renderer = {};\n        var parameters = {\n\n            shaderID: shaderID,\n\n            precision: \"high\",//precision,\n            supportsVertexTextures: true,// capabilities.vertexTextures,\n            outputEncoding: getTextureEncodingFromMap((!currentRenderTarget) ? null : currentRenderTarget.texture, renderer.gammaOutput),\n            map: !!material.map,\n            mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n            envMap: !!material.envMap,\n            envMapMode: material.envMap && material.envMap.mapping,\n            envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n            envMapCubeUV: (!!material.envMap) && ((material.envMap.mapping === CubeUVReflectionMapping) || (material.envMap.mapping === CubeUVRefractionMapping)),\n            lightMap: !!material.lightMap,\n            aoMap: !!material.aoMap,\n            emissiveMap: !!material.emissiveMap,\n            emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n            bumpMap: !!material.bumpMap,\n            normalMap: !!material.normalMap,\n            displacementMap: !!material.displacementMap,\n            roughnessMap: !!material.roughnessMap,\n            metalnessMap: !!material.metalnessMap,\n            specularMap: !!material.specularMap,\n            alphaMap: !!material.alphaMap,\n\n            gradientMap: !!material.gradientMap,\n\n            combine: material.combine,\n\n            vertexColors: material.vertexColors,\n\n            fog: false,//!!fog,\n            useFog: material.fog,\n            fogExp: false,//(fog && fog.isFogExp2),\n\n            flatShading: material.shading === FlatShading,\n\n            sizeAttenuation: material.sizeAttenuation,\n            logarithmicDepthBuffer: false,// capabilities.logarithmicDepthBuffer,\n\n            skinning: material.skinning,\n            //maxBones: maxBones,\n            //useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n            morphTargets: material.morphTargets,\n            morphNormals: material.morphNormals,\n            //maxMorphTargets: renderer.maxMorphTargets,\n            //maxMorphNormals: renderer.maxMorphNormals,\n\n            numDirLights: 0,// lights.directional.length,\n            numPointLights: 0,// lights.point.length,\n            numSpotLights: 0,// lights.spot.length,\n            numRectAreaLights: 0,// lights.rectArea.length,\n            numHemiLights: 0,// lights.hemi.length,\n\n            numClippingPlanes: 0,//nClipPlanes,\n            numClipIntersection: 0,//nClipIntersection,\n\n            //shadowMapEnabled:  renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n            //shadowMapType: renderer.shadowMap.type,\n\n            //toneMapping: renderer.toneMapping,\n            //physicallyCorrectLights: renderer.physicallyCorrectLights,\n\n            premultipliedAlpha: material.premultipliedAlpha,\n\n            alphaTest: material.alphaTest,\n            doubleSided: material.side === DoubleSide,\n            flipSided: material.side === BackSide,\n\n            depthPacking: (material.depthPacking !== undefined) ? material.depthPacking : false\n\n        };\n\n        return parameters;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    var programIdCount = 0;\n\n    function getEncodingComponents(encoding) {\n\n        switch (encoding) {\n\n            case LinearEncoding:\n                return ['Linear', '( value )'];\n            case sRGBEncoding:\n                return ['sRGB', '( value )'];\n            case RGBEEncoding:\n                return ['RGBE', '( value )'];\n            case RGBM7Encoding:\n                return ['RGBM', '( value, 7.0 )'];\n            case RGBM16Encoding:\n                return ['RGBM', '( value, 16.0 )'];\n            case RGBDEncoding:\n                return ['RGBD', '( value, 256.0 )'];\n            case GammaEncoding:\n                return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n            default:\n                throw new Error('unsupported encoding: ' + encoding);\n\n        }\n\n    }\n\n    function getTexelDecodingFunction(functionName, encoding) {\n\n        var components = getEncodingComponents(encoding);\n        return \"vec4 \" + functionName + \"( vec4 value ) {  return \" + components[0] + \"ToLinear\" + components[1] + \" ; }\";\n\n    }\n\n    function getTexelEncodingFunction(functionName, encoding) {\n\n        var components = getEncodingComponents(encoding);\n        return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \" ; }\";\n\n    }\n\n    function getToneMappingFunction(functionName, toneMapping) {\n\n        var toneMappingName;\n\n        switch (toneMapping) {\n\n            case LinearToneMapping:\n                toneMappingName = \"Linear\";\n                break;\n\n            case ReinhardToneMapping:\n                toneMappingName = \"Reinhard\";\n                break;\n\n            case Uncharted2ToneMapping:\n                toneMappingName = \"Uncharted2\";\n                break;\n\n            case CineonToneMapping:\n                toneMappingName = \"OptimizedCineon\";\n                break;\n\n            default:\n                throw new Error('unsupported toneMapping: ' + toneMapping);\n\n        }\n\n        return \"vec3 \" + functionName + \"( vec3 color ) {  return \" + toneMappingName + \"ToneMapping( color );  }\";\n\n    }\n\n    function generateExtensions(extensions, parameters, rendererExtensions) {\n\n        extensions = extensions || {};\n\n        var chunks = [\n            (extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading) ? '#extension GL_OES_standard_derivatives : enable' : '',\n            (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '',\n            (extensions.drawBuffers) && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '',\n            (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n        ];\n\n        return chunks.filter(filterEmptyLine).join('\\n');\n\n    }\n\n    function generateDefines(defines) {\n\n        var chunks = [];\n\n        for (var name in defines) {\n\n            var value = defines[name];\n\n            if (value === false) continue;\n\n            chunks.push('#define ' + name + ' ' + value);\n\n        }\n\n        return chunks.join('\\n');\n\n    }\n\n    function filterEmptyLine(string) {\n\n        return string !== '';\n\n    }\n\n    function replaceLightNums(string, parameters) {\n\n        return string\n            .replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights)\n            .replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights)\n            .replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights)\n            .replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights)\n            .replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n\n    }\n\n    function parseIncludes(string) {\n\n        var pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n        function replace(match, include) {\n\n            var replace = ShaderChunk[include];\n\n            if (replace === undefined) {\n\n                throw new Error('Can not resolve #include <' + include + '>');\n\n            }\n\n            return parseIncludes(replace);\n\n        }\n\n        return string.replace(pattern, replace);\n\n    }\n\n    function unrollLoops(string) {\n\n        var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n        function replace(match, start, end, snippet) {\n\n            var unroll = '';\n\n            for (var i = parseInt(start); i < parseInt(end); i++) {\n\n                unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n\n            }\n\n            return unroll;\n\n        }\n\n        return string.replace(pattern, replace);\n\n    }\n\n    function WebGLProgram(material, shader) {//, parameters) {\n\n        var parameters = getParameters(material);\n        //var shader = ShaderLib[parameters.shaderID];\n\n        //var extensions = material.extensions;\n        var defines = material.defines;\n\n        var vertexShader = shader.vertexShader;\n        var fragmentShader = shader.fragmentShader;\n\n        var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n        if (parameters.shadowMapType === THREE.PCFShadowMap) {\n\n            shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n        } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n\n            shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n        }\n\n        var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n        var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n        if (parameters.envMap) {\n\n            switch (material.envMap.mapping) {\n\n                case CubeReflectionMapping:\n                case CubeRefractionMapping:\n                    envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n                    break;\n\n                case CubeUVReflectionMapping:\n                case CubeUVRefractionMapping:\n                    envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n                    break;\n\n                case EquirectangularReflectionMapping:\n                case EquirectangularRefractionMapping:\n                    envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n                    break;\n\n                case SphericalReflectionMapping:\n                    envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n                    break;\n\n            }\n\n            switch (material.envMap.mapping) {\n\n                case CubeRefractionMapping:\n                case EquirectangularRefractionMapping:\n                    envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n                    break;\n\n            }\n\n            switch (material.combine) {\n\n                case MultiplyOperation:\n                    envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n                    break;\n\n                case MixOperation:\n                    envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n                    break;\n\n                case AddOperation:\n                    envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n                    break;\n\n            }\n\n        }\n\n        var gammaFactorDefine = 1.0;// (renderer.gammaFactor > 0) ? renderer.gammaFactor : 1.0;\n\n\n        // var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n\n        var customDefines = generateDefines(defines);\n\n\n        var prefixVertex, prefixFragment;\n\n        if (material.isRawShaderMaterial) {\n\n            prefixVertex = [\n\n                customDefines,\n\n                '\\n'\n\n            ].filter(filterEmptyLine).join('\\n');\n\n            prefixFragment = [\n\n                //customExtensions,\n                customDefines,\n\n                '\\n'\n\n            ].filter(filterEmptyLine).join('\\n');\n\n        } else {\n\n            prefixVertex = [\n\n                //'precision ' + parameters.precision + ' float;',\n                //'precision ' + parameters.precision + ' int;',\n\n                '#define SHADER_NAME ' + shader.name,\n\n                //customDefines,\n\n                parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n                '#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n                '#define MAX_BONES ' + parameters.maxBones,\n                //(parameters.useFog && parameters.fog) ? '#define USE_FOG' : '',\n                //(parameters.useFog && parameters.fogExp) ? '#define FOG_EXP2' : '',\n\n                parameters.map ? '#define USE_MAP' : '',\n                parameters.envMap ? '#define USE_ENVMAP' : '',\n                parameters.envMap ? '#define ' + envMapModeDefine : '',\n                parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n                parameters.aoMap ? '#define USE_AOMAP' : '',\n                parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n                parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n                parameters.normalMap ? '#define USE_NORMALMAP' : '',\n                parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n                parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n                parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n                parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n                parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n                parameters.vertexColors ? '#define USE_COLOR' : '',\n\n                parameters.flatShading ? '#define FLAT_SHADED' : '',\n\n                parameters.skinning ? '#define USE_SKINNING' : '',\n                parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n                parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n                parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n                parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n                parameters.flipSided ? '#define FLIP_SIDED' : '',\n\n                '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n                parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n                parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n                parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n                parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n                //parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n                //'uniform mat4 modelMatrix;',\n                //'uniform mat4 modelViewMatrix;',\n                //'uniform mat4 projectionMatrix;',\n                //'uniform mat4 viewMatrix;',\n                //'uniform mat3 normalMatrix;',\n                //'uniform vec3 cameraPosition;',\n\n                //'attribute vec3 position;',\n                //'attribute vec3 normal;',\n                //'attribute vec2 uv;',\n\n                '#ifdef USE_COLOR',\n\n                '\tattribute vec3 color;',\n\n                '#endif',\n\n                '#ifdef USE_MORPHTARGETS',\n\n                '\tattribute vec3 morphTarget0;',\n                '\tattribute vec3 morphTarget1;',\n                '\tattribute vec3 morphTarget2;',\n                '\tattribute vec3 morphTarget3;',\n\n                '\t#ifdef USE_MORPHNORMALS',\n\n                '\t\tattribute vec3 morphNormal0;',\n                '\t\tattribute vec3 morphNormal1;',\n                '\t\tattribute vec3 morphNormal2;',\n                '\t\tattribute vec3 morphNormal3;',\n\n                '\t#else',\n\n                '\t\tattribute vec3 morphTarget4;',\n                '\t\tattribute vec3 morphTarget5;',\n                '\t\tattribute vec3 morphTarget6;',\n                '\t\tattribute vec3 morphTarget7;',\n\n                '\t#endif',\n\n                '#endif',\n\n                '#ifdef USE_SKINNING',\n\n                '\tattribute vec4 skinIndex;',\n                '\tattribute vec4 skinWeight;',\n\n                '#endif',\n\n                '\\n'\n\n            ].filter(filterEmptyLine).join('\\n');\n\n            prefixFragment = [\n\n                //customExtensions,\n\n                //'precision ' + parameters.precision + ' float;',\n                //'precision ' + parameters.precision + ' int;',\n\n                '#define SHADER_NAME ' + shader.name,\n\n                customDefines,\n\n                parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n                '#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n                (parameters.useFog && parameters.fog) ? '#define USE_FOG' : '',\n                (parameters.useFog && parameters.fogExp) ? '#define FOG_EXP2' : '',\n\n                parameters.map ? '#define USE_MAP' : '',\n                parameters.envMap ? '#define USE_ENVMAP' : '',\n                parameters.envMap ? '#define ' + envMapTypeDefine : '',\n                parameters.envMap ? '#define ' + envMapModeDefine : '',\n                parameters.envMap ? '#define ' + envMapBlendingDefine : '',\n                parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n                parameters.aoMap ? '#define USE_AOMAP' : '',\n                parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n                parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n                parameters.normalMap ? '#define USE_NORMALMAP' : '',\n                parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n                parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n                parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n                parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n                parameters.vertexColors ? '#define USE_COLOR' : '',\n\n                parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n                parameters.flatShading ? '#define FLAT_SHADED' : '',\n\n                parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n                parameters.flipSided ? '#define FLIP_SIDED' : '',\n\n                '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n                '#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n                parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n                parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n                parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n                parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n                parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n                //parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n                //parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '',\n\n                'uniform mat4 viewMatrix;',\n                'uniform vec3 cameraPosition;',\n\n                //(parameters.toneMapping !== THREE.NoToneMapping) ? \"#define TONE_MAPPING\" : '',\n                //(parameters.toneMapping !== THREE.NoToneMapping) ? ShaderChunk['tonemapping_pars_fragment'] : '',  // this code is required here because it is used by the toneMapping() function defined below\n                //(parameters.toneMapping !== THREE.NoToneMapping) ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '',\n\n                parameters.dithering ? '#define DITHERING' : '',\n\n                (parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding) ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n                parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '',\n                parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '',\n                parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '',\n                parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '',\n\n                parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n                '\\n'\n\n            ].filter(filterEmptyLine).join('\\n');\n\n        }\n\n        vertexShader = parseIncludes(vertexShader);\n        vertexShader = replaceLightNums(vertexShader, parameters);\n\n        fragmentShader = parseIncludes(fragmentShader);\n        fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n        if (!material.isShaderMaterial) {\n\n            vertexShader = unrollLoops(vertexShader);\n            fragmentShader = unrollLoops(fragmentShader);\n\n        }\n\n        var vertexGlsl = prefixVertex + vertexShader;\n        var fragmentGlsl = prefixFragment + fragmentShader;\n\n\n        this.id = programIdCount++;\n        this.usedTimes = 1;\n        this.vertexShader = vertexGlsl;\n        this.fragmentShader = fragmentGlsl;\n\n        return this;\n\n    }\n\n}\nexport default ShaderUtils;",
    "﻿\nimport none_frag from './none_frag.js';\nimport none_vert from './none_vert.js';\nimport normals_frag from './normals_frag.js';\nimport normals_vert from './normals_vert.js';\nimport texture_frag from './texture_frag.js';\nimport texture_vert from './texture_vert.js';\nimport texture_normals_frag from './texture_normals_frag.js';\nimport texture_normals_vert from './texture_normals_vert.js';\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = asin( flipNormal * reflectVec.y ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\nvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\nvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\nvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars: lights_pars,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_template: lights_template,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_flip: normal_flip,\n    normal_fragment: normal_fragment,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n\n    cube_frag: cube_frag,\n    cube_vert: cube_vert,\n    depth_frag: depth_frag,\n    depth_vert: depth_vert,\n    distanceRGBA_frag: distanceRGBA_frag,\n    distanceRGBA_vert: distanceRGBA_vert,\n    equirect_frag: equirect_frag,\n    equirect_vert: equirect_vert,\n    linedashed_frag: linedashed_frag,\n    linedashed_vert: linedashed_vert,\n    meshbasic_frag: meshbasic_frag,\n    meshbasic_vert: meshbasic_vert,\n    meshlambert_frag: meshlambert_frag,\n    meshlambert_vert: meshlambert_vert,\n    meshphong_frag: meshphong_frag,\n    meshphong_vert: meshphong_vert,\n    meshphysical_frag: meshphysical_frag,\n    meshphysical_vert: meshphysical_vert,\n    normal_frag: normal_frag,\n    normal_vert: normal_vert,\n    points_frag: points_frag,\n    points_vert: points_vert,\n    shadow_frag: shadow_frag,\n    shadow_vert: shadow_vert,\n\n    none_frag: none_frag,\n    none_vert: none_vert,\n    normals_frag: normals_frag,\n    normals_vert: normals_vert,\n    texture_frag: texture_frag,\n    texture_vert: texture_vert,\n    texture_normals_frag: texture_normals_frag,\n    texture_normals_vert: texture_normals_vert\n};\n\nShaderChunk.parseIncludes = function (string) {\n\n    var pattern = /#include +<([\\w\\d.]+)>/g;\n\n    function replace(match, include) {\n\n        var replace = ShaderChunk[include];\n\n        if (replace === undefined) {\n\n            throw new Error('Can not resolve #include <' + include + '>');\n\n        }\n\n        return ShaderChunk.parseIncludes(replace);\n\n    }\n\n    return string.replace(pattern, replace);\n\n}\nexport default ShaderChunk; ",
    "﻿\nimport ShaderChunk from './ShaderChunk.js';\n\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n    common: {\n\n        diffuse: {\n            value: {\n                isColor: true,\n                red: 1, green: 1, blue: 1, alpha: 1\n            }\n            // new Cesium.Color(0xeeeeee)\n        },\n        opacity: { value: 1.0 },\n\n        map: { value: null },\n        offsetRepeat: {\n            value: {\n                isCartesian4: true,\n                x: 0, y: 0, z: 1, w: 1\n            }\n            //new Cesium.Cartesian4(0, 0, 1, 1) \n        },\n\n        specularMap: { value: null },\n        alphaMap: { value: null },\n\n        envMap: { value: null },\n        flipEnvMap: { value: -1 },\n        reflectivity: { value: 1.0 },\n        refractionRatio: { value: 0.98 }\n\n    },\n\n    aomap: {\n\n        aoMap: { value: null },\n        aoMapIntensity: { value: 1 }\n\n    },\n\n    lightmap: {\n\n        lightMap: { value: null },\n        lightMapIntensity: { value: 1 }\n\n    },\n\n    emissivemap: {\n\n        emissiveMap: { value: null }\n\n    },\n\n    bumpmap: {\n\n        bumpMap: { value: null },\n        bumpScale: { value: 1 }\n\n    },\n\n    normalmap: {\n\n        normalMap: { value: null },\n        normalScale: {\n            value: {\n                isCartesian2: true,\n                x: 1, y: 1\n            }\n            //new Cesium.Cartesian2(1, 1) \n        }\n\n    },\n\n    displacementmap: {\n\n        displacementMap: { value: null },\n        displacementScale: { value: 1 },\n        displacementBias: { value: 0 }\n\n    },\n\n    roughnessmap: {\n\n        roughnessMap: { value: null }\n\n    },\n\n    metalnessmap: {\n\n        metalnessMap: { value: null }\n\n    },\n\n    gradientmap: {\n\n        gradientMap: { value: null }\n\n    },\n\n    fog: {\n\n        fogDensity: { value: 0.00025 },\n        fogNear: { value: 1 },\n        fogFar: { value: 2000 },\n        fogColor: {\n            value: {\n                isColor: true,\n                red: 0, green: 0, blue: 1, alpha: 1\n            }\n            // new Cesium.Color(0xffffff) \n        }\n\n    },\n\n    lights: {\n\n        ambientLightColor: { value: [] },\n\n        directionalLights: {\n            value: [], properties: {\n                direction: {},\n                color: {},\n\n                shadow: {},\n                shadowBias: {},\n                shadowRadius: {},\n                shadowMapSize: {}\n            }\n        },\n\n        directionalShadowMap: { value: [] },\n        directionalShadowMatrix: { value: [] },\n\n        spotLights: {\n            value: [], properties: {\n                color: {},\n                position: {},\n                direction: {},\n                distance: {},\n                coneCos: {},\n                penumbraCos: {},\n                decay: {},\n\n                shadow: {},\n                shadowBias: {},\n                shadowRadius: {},\n                shadowMapSize: {}\n            }\n        },\n\n        spotShadowMap: { value: [] },\n        spotShadowMatrix: { value: [] },\n\n        pointLights: {\n            value: [], properties: {\n                color: {},\n                position: {},\n                decay: {},\n                distance: {},\n\n                shadow: {},\n                shadowBias: {},\n                shadowRadius: {},\n                shadowMapSize: {}\n            }\n        },\n\n        pointShadowMap: { value: [] },\n        pointShadowMatrix: { value: [] },\n\n        hemisphereLights: {\n            value: [], properties: {\n                direction: {},\n                skyColor: {},\n                groundColor: {}\n            }\n        },\n\n        // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n        rectAreaLights: {\n            value: [], properties: {\n                color: {},\n                position: {},\n                width: {},\n                height: {}\n            }\n        }\n\n    },\n\n    points: {\n\n        diffuse: {\n            value: {\n                isColor: true,\n                red: 1, green: 1, blue: 1, alpha: 1\n            }\n            // new Cesium.Color(0xeeeeee) \n        },\n        opacity: { value: 1.0 },\n        size: { value: 1.0 },\n        scale: { value: 1.0 },\n        map: { value: null },\n        offsetRepeat: {\n            value: {\n                isCartesian4: true,\n                x: 0, y: 0, z: 1, w: 1\n            }\n            // new Cesium.Cartesian4(0, 0, 1, 1) \n        }\n\n    }\n\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n    merge: function (uniforms) {\n\n        var merged = {};\n\n        for (var u = 0; u < uniforms.length; u++) {\n\n            var tmp = this.clone(uniforms[u]);\n\n            for (var p in tmp) {\n\n                merged[p] = tmp[p];\n\n            }\n\n        }\n\n        return merged;\n\n    },\n\n    clone: function (uniforms_src) {\n\n        var uniforms_dst = {};\n\n        for (var u in uniforms_src) {\n\n            uniforms_dst[u] = {};\n\n            for (var p in uniforms_src[u]) {\n\n                var parameter_src = uniforms_src[u][p];\n\n                if (typeof Cesium != 'undefined' && parameter_src && (parameter_src instanceof Cesium.Color ||\n                    parameter_src instanceof Cesium.Matrix3 || parameter_src instanceof Cesium.Matrix4 ||\n                    parameter_src instanceof Cesium.Cartesian2 || parameter_src instanceof Cesium.Cartesian3\n                    || parameter_src instanceof Cesium.Cartesian4\n                    //||parameter_src.isTexture\n                )) {\n\n                    uniforms_dst[u][p] = parameter_src.constructor.clone(parameter_src);//.clone();\n\n                } else if (Array.isArray(parameter_src)) {\n\n                    uniforms_dst[u][p] = parameter_src.slice();\n\n                } else if (typeof Cesium != 'undefined' && parameter_src) {\n                    if (parameter_src.isColor) {\n                        uniforms_dst[u][p] = Cesium.Color.clone(parameter_src);\n\n                    } else if (parameter_src.isCartesian2) {\n                        uniforms_dst[u][p] = Cesium.Cartesian2.clone(parameter_src);\n\n                    } else if (parameter_src.isCartesian3) {\n                        uniforms_dst[u][p] = Cesium.Cartesian3.clone(parameter_src);\n\n                    } else if (parameter_src.isCartesian4) {\n                        uniforms_dst[u][p] = Cesium.Cartesian4.clone(parameter_src);\n\n                    } else {\n\n                        uniforms_dst[u][p] = parameter_src;\n\n                    }\n                } else {\n\n                    uniforms_dst[u][p] = parameter_src;\n\n                }\n\n            }\n\n        }\n\n        return uniforms_dst;\n\n    }\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n    basic: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.aomap,\n            UniformsLib.lightmap,\n            UniformsLib.fog\n        ]),\n\n        vertexShader: ShaderChunk.meshbasic_vert,\n        fragmentShader: ShaderChunk.meshbasic_frag\n\n    },\n\n    lambert: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.aomap,\n            UniformsLib.lightmap,\n            UniformsLib.emissivemap,\n            UniformsLib.fog,\n            UniformsLib.lights,\n            {\n                emissive: {\n                    value: {\n                        isColor: true,\n                        red: 1, green: 1, blue: 1, alpha: 1\n                    }\n                    // new Cesium.Color(0x000000) \n                }\n            }\n        ]),\n\n        vertexShader: ShaderChunk.meshlambert_vert,\n        fragmentShader: ShaderChunk.meshlambert_frag\n\n    },\n\n    phong: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.aomap,\n            UniformsLib.lightmap,\n            UniformsLib.emissivemap,\n            UniformsLib.bumpmap,\n            UniformsLib.normalmap,\n            UniformsLib.displacementmap,\n            UniformsLib.gradientmap,\n            UniformsLib.fog,\n            UniformsLib.lights,\n            {\n                emissive: {\n                    value: {\n                        isColor: true,\n                        red: 1, green: 1, blue: 1, alpha: 1\n                    }\n                    // new Cesium.Color(0x000000) \n                },\n                specular: {\n                    value:\n                    {\n                        isColor: true,\n                        red: 1, green: 1, blue: 1, alpha: 1\n                    }\n                    // new Cesium.Color(0x111111) \n                },\n                shininess: { value: 30 }\n            }\n        ]),\n\n        vertexShader: ShaderChunk.meshphong_vert,\n        fragmentShader: ShaderChunk.meshphong_frag\n\n    },\n\n    standard: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.aomap,\n            UniformsLib.lightmap,\n            UniformsLib.emissivemap,\n            UniformsLib.bumpmap,\n            UniformsLib.normalmap,\n            UniformsLib.displacementmap,\n            UniformsLib.roughnessmap,\n            UniformsLib.metalnessmap,\n            UniformsLib.fog,\n            UniformsLib.lights,\n            {\n                emissive: {\n                    value: {\n                        isColor: true,\n                        red: 0, green: 0, blue: 0, alpha: 1\n                    }\n                    // new Cesium.Color(0x000000) \n                },\n                roughness: { value: 0.5 },\n                metalness: { value: 0.5 },\n                envMapIntensity: { value: 1 } // temporary\n            }\n        ]),\n\n        vertexShader: ShaderChunk.meshphysical_vert,\n        fragmentShader: ShaderChunk.meshphysical_frag\n\n    },\n\n    points: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.points,\n            UniformsLib.fog\n        ]),\n\n        vertexShader: ShaderChunk.points_vert,\n        fragmentShader: ShaderChunk.points_frag\n\n    },\n\n    dashed: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.fog,\n            {\n                scale: { value: 1 },\n                dashSize: { value: 1 },\n                totalSize: { value: 2 }\n            }\n        ]),\n\n        vertexShader: ShaderChunk.linedashed_vert,\n        fragmentShader: ShaderChunk.linedashed_frag\n\n    },\n\n    depth: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.displacementmap\n        ]),\n\n        vertexShader: ShaderChunk.depth_vert,\n        fragmentShader: ShaderChunk.depth_frag\n\n    },\n\n    normal: {\n\n        uniforms: UniformsUtils.merge([\n            UniformsLib.common,\n            UniformsLib.bumpmap,\n            UniformsLib.normalmap,\n            UniformsLib.displacementmap,\n            {\n                opacity: { value: 1.0 }\n            }\n        ]),\n\n        vertexShader: ShaderChunk.normal_vert,\n        fragmentShader: ShaderChunk.normal_frag\n\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n\n    cube: {\n\n        uniforms: {\n            tCube: { value: null },\n            tFlip: { value: -1 },\n            opacity: { value: 1.0 }\n        },\n\n        vertexShader: ShaderChunk.cube_vert,\n        fragmentShader: ShaderChunk.cube_frag\n\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n\n    equirect: {\n\n        uniforms: {\n            tEquirect: { value: null },\n            tFlip: { value: -1 }\n        },\n\n        vertexShader: ShaderChunk.equirect_vert,\n        fragmentShader: ShaderChunk.equirect_frag\n\n    },\n\n    distanceRGBA: {\n\n        uniforms: {\n            lightPos: { value: {\n                isCartesian3:true,\n                x:0,y:0,z:0\n            }\n                //new Cesium.Cartesian3() \n            }\n        },\n\n        vertexShader: ShaderChunk.distanceRGBA_vert,\n        fragmentShader: ShaderChunk.distanceRGBA_frag\n\n    }\n\n};\n\nShaderLib.physical = {\n\n    uniforms: UniformsUtils.merge([\n        ShaderLib.standard.uniforms,\n        {\n            clearCoat: { value: 0 },\n            clearCoatRoughness: { value: 0 }\n        }\n    ]),\n\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nexport default ShaderLib;",
    "\nvar none_frag = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\n\\n\\\nuniform vec4 ambientColor;\\n\\\nuniform vec4 diffuseColor;\\n\\\nuniform vec4 specularColor;\\n\\\nuniform float specularShininess;\\n\\\nuniform float picked;\\n\\\nuniform vec4  pickedColor;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n\\\n    vec4 ambient = ambientColor;\\n\\\n    vec4 diffuse = diffuseColor;\\n\\\n    vec4 specular = specularColor;\\n\\\n    color.xyz += ambient.xyz;\\n\\\n    color.xyz += diffuse.xyz;\\n\\\n    color.xyz += specular.xyz;\\n\\\n    color = vec4(color.rgb * diffuse.a, diffuse.a);\\n\\\n    gl_FragColor = color;\\n\\\n    if(picked!=0.0){\\n\\\n        gl_FragColor =mix(color, pickedColor*0.5,1.0);\\n\\\n    }\\n\\\n}\";\nexport default none_frag; \n",
    "\nvar none_vert = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\n\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 pos =  modelViewMatrix * vec4( position,1.0);\\n\\\n    v_position = pos.xyz;\\n\\\n    gl_Position =  projectionMatrix * pos;\\n\\\n}\";\nexport default none_vert; ",
    "\nvar normals_frag = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec3 v_normal;\\n\\\n\\n\\\nuniform vec4 ambientColor;\\n\\\nuniform vec4 diffuseColor;\\n\\\nuniform vec4 specularColor;\\n\\\nuniform float specularShininess;\\n\\\nuniform float alpha;\\n\\\nuniform float picked;\\n\\\nuniform vec4  pickedColor;\\n\\\n\\n\\\nvarying vec3 v_light0Direction;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec3 normal = normalize(v_normal);\\n\\\n    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n\\\n    vec3 diffuseLight = vec3(0.0, 0.0, 0.0);\\n\\\n    vec3 lightColor = vec3(1.0,1.0,1.0);\\n\\\nvec4 ambient = ambientColor;\\n\\\n    vec4 diffuse = diffuseColor;\\n\\\n    vec4 specular = specularColor;\\n\\\n\\n\\\n    vec3 specularLight = vec3(0.0, 0.0, 0.0);\\n\\\n    {\\n\\\n        float specularIntensity = 0.0;\\n\\\n        float attenuation = 1.0;\\n\\\n        vec3 l = normalize(v_light0Direction);\\n\\\n        vec3 viewDir = -normalize(v_position);\\n\\\n        vec3 h = normalize(l+viewDir);\\n\\\n        specularIntensity = max(0.0, pow(max(dot(normal,h), 0.0) , specularShininess)) * attenuation;\\n\\\n        specularLight += lightColor * specularIntensity;\\n\\\n        diffuseLight += lightColor * max(dot(normal,l), 0.0) * attenuation;\\n\\\n    }\\n\\\n    //specular.xyz *= specularLight;\\n\\\n    //diffuse.xyz *= diffuseLight;\\n\\\n    color.xyz += ambient.xyz;\\n\\\n    color.xyz += diffuse.xyz;\\n\\\n    color.xyz += specular.xyz;\\n\\\n    color = vec4(color.rgb * diffuse.a, diffuse.a*alpha);\\n\\\n    gl_FragColor = color;\\n\\\n    if(picked!=0.0){\\n\\\n        gl_FragColor =mix(color, pickedColor*0.5,1.0);\\n\\\n    }\\n\\\n}\";\nexport default normals_frag; ",
    "\nvar normals_vert = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\n\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec3 v_normal;\\n\\\n\\n\\\nvarying vec3 v_light0Direction;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 pos =  modelViewMatrix * vec4( position,1.0);\\n\\\n    v_normal =  normalMatrix *  normal;\\n\\\n    v_position = pos.xyz;\\n\\\n    v_light0Direction = mat3( modelViewMatrix) * vec3(1.0,1.0,1.0);\\n\\\n    gl_Position =  projectionMatrix * pos;\\n\\\n}\";\n\nexport default normals_vert; ",
    "\r\nvar phong_frag = '\\n\\\r\nvarying vec3 v_position;\\n\\\r\nvarying vec3 v_normal;\\n\\\r\nuniform float picked;\\n\\\r\nuniform vec4  pickedColor;\\n\\\r\nuniform vec4  defaultColor;\\n\\\r\nuniform float specular;\\n\\\r\nuniform float shininess;\\n\\\r\nuniform vec3  emission;\\n\\\r\nuniform vec3  u_cameraPosition;\\n\\\r\nvoid main() {\\n\\\r\n    vec3 positionToEyeEC = -v_position; \\n\\\r\n    vec3 normalEC =normalize(v_normal);\\n\\\r\n    vec4 color=defaultColor;\\n\\\r\n    if(picked!=0.0){\\n\\\r\n        color = pickedColor;\\n\\\r\n    }\\n\\\r\n    czm_material material;\\n\\\r\n    material.specular = specular;\\n\\\r\n    material.shininess = shininess;\\n\\\r\n    material.normal =  normalEC;\\n\\\r\n    material.emission =emission;//vec3(0.2,0.2,0.2);\\n\\\r\n    material.diffuse = color.rgb ;\\n\\\r\n    material.alpha =  color.a;\\n\\\r\n    vec3 lightDirectionEC=-u_cameraPosition;\\n\\\r\n    gl_FragColor =  czm_phong(normalize(positionToEyeEC), material,lightDirectionEC);\\n\\\r\n}';\r\n\r\nexport default phong_frag; ",
    "﻿\nvar phong_vert = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\n\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec3 v_normal;\\n\\\n\\n\\\nvarying vec3 v_light0Direction;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 pos =  modelViewMatrix * vec4( position,1.0);\\n\\\n    v_normal =  normalMatrix *  normal;\\n\\\n    v_position = pos.xyz;\\n\\\n    v_light0Direction = mat3( modelViewMatrix) * vec3(1.0,1.0,1.0);\\n\\\n    gl_Position =  projectionMatrix * pos;\\n\\\n}\";\n\nexport default phong_vert; ",
    "\nvar texture_frag = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec2 v_texcoord0;\\n\\\n\\n\\\nuniform vec4 ambientColor;\\n\\\nuniform sampler2D diffuseColorMap;\\n\\\nuniform vec4 specularColor;\\n\\\nuniform float specularShininess;\\n\\\nuniform float picked;\\n\\\nuniform vec4  pickedColor;\\n\\\n\\n\\\nuniform float alpha;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n\\\n    vec3 diffuseLight = vec3(0.0, 0.0, 0.0);\\n\\\n    vec3 lightColor = vec3(1.0,1.0,1.0);\\n\\\n    vec4 ambient = ambientColor;\\n\\\n    vec4 diffuse = texture2D(diffuseColorMap, v_texcoord0);\\n\\\n    vec4 specular = specularColor;\\n\\\n    color.xyz += ambient.xyz;\\n\\\n    color.xyz += diffuse.xyz;\\n\\\n    color.xyz += specular.xyz;\\n\\\n    color = vec4(diffuse.rgb * diffuse.a, diffuse.a*alpha);\\n\\\n    gl_FragColor = color;\\n\\\n    if(picked!=0.0){\\n\\\n        gl_FragColor =mix(color, pickedColor*0.5,1.0);\\n\\\n    }\\n\\\n}\";\nexport default texture_frag; \n",
    "\nvar texture_normals_frag = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec2 v_texcoord0;\\n\\\nvarying vec3 v_normal;\\n\\\n\\n\\\nuniform vec4 ambientColor;\\n\\\nuniform sampler2D diffuseColorMap;\\n\\\nuniform vec4 specularColor;\\n\\\nuniform float specularShininess;\\n\\\nuniform float picked;\\n\\\nuniform vec4  pickedColor;\\n\\\n\\n\\\nvarying vec3 v_light0Direction;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec3 normal = normalize(v_normal);\\n\\\n    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n\\\n    vec3 diffuseLight = vec3(0.0, 0.0, 0.0);\\n\\\n    vec3 lightColor = vec3(1.0,1.0,1.0);\\n\\\n    vec4 ambient = ambientColor;\\n\\\n    vec4 diffuse = texture2D(diffuseColorMap, v_texcoord0);\\n\\\n    vec4 specular = specularColor;\\n\\\n\\n\\\n    vec3 specularLight = vec3(0.0, 0.0, 0.0);\\n\\\n    {\\n\\\n        float specularIntensity = 0.0;\\n\\\n        float attenuation = 1.0;\\n\\\n        vec3 l = normalize(v_light0Direction);\\n\\\n        vec3 viewDir = -normalize(v_position);\\n\\\n        vec3 h = normalize(l+viewDir);\\n\\\n        specularIntensity = max(0.0, pow(max(dot(normal,h), 0.0) , specularShininess)) * attenuation;\\n\\\n        specularLight += lightColor * specularIntensity;\\n\\\n        diffuseLight += lightColor * max(dot(normal,l), 0.0) * attenuation;\\n\\\n    }\\n\\\n    //specular.xyz *= specularLight;\\n\\\n    //diffuse.xyz *= diffuseLight;\\n\\\n    color.xyz += ambient.xyz;\\n\\\n    color.xyz += diffuse.xyz;\\n\\\n    color.xyz += specular.xyz;\\n\\\n    color = vec4(diffuse.rgb * diffuse.a, diffuse.a);\\n\\\n    gl_FragColor = color;\\n\\\n    if(picked!=0.0){\\n\\\n        gl_FragColor = pickedColor*color;\\n\\\n    }\\n\\\n}\";\n\nexport default texture_normals_frag; ",
    "\nvar texture_normals_vert = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\n\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec2 v_texcoord0;\\n\\\nvarying vec3 v_normal;\\n\\\n\\n\\\nvarying vec3 v_light0Direction;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 pos =  modelViewMatrix * vec4( position,1.0);\\n\\\n    v_normal =  normalMatrix *  normal;\\n\\\n    v_texcoord0 =uv;\\n\\\n    v_position = pos.xyz;\\n\\\n    v_light0Direction = mat3( modelViewMatrix) * vec3(1.0,1.0,1.0);\\n\\\n    gl_Position =  projectionMatrix * pos;\\n\\\n}\";\nexport default texture_normals_vert; ",
    "\nvar texture_vert = \"\\n\\\n#ifdef GL_ES\\n\\\n    precision highp float;\\n\\\n#endif\\n\\\n\\n\\\n\\n\\\n\\n\\\nvarying vec3 v_position;\\n\\\nvarying vec2 v_texcoord0;\\n\\\n\\n\\\nvoid main(void) \\n\\\n{\\n\\\n    vec4 pos =  modelViewMatrix * vec4( position,1.0);\\n\\\n    v_texcoord0 =  uv;\\n\\\n    v_position = pos.xyz;\\n\\\n    gl_Position =  projectionMatrix * pos;\\n\\\n}\";\n\nexport default texture_vert; ",
    "﻿\r\nimport RendererUtils from './Core/RendererUtils.js';\r\nimport Mesh from './Core/Mesh.js';\r\nimport MeshMaterial from './Core/MeshMaterial.js';\r\nimport ShaderChunk from './Core/Shaders/ShaderChunk.js';\r\nimport MeshVisualizer from './Core/MeshVisualizer.js';\r\nimport FramebufferTexture from './Core/FramebufferTexture.js';\r\nimport GeometryUtils from './Core/GeometryUtils.js';\r\nimport LOD from './Core/LOD.js';\r\nimport PlaneGeometry from './Core/PlaneGeometry.js';\r\nimport Rotation from './Core/Rotation.js';\r\nimport ReferenceMesh from './Core/ReferenceMesh.js';\r\nimport BasicMeshMaterial from './Core/BasicMeshMaterial.js';\r\nimport BasicGeometry from './Core/BasicGeometry.js';\r\nimport ShaderLib from './Core/Shaders/ShaderLib.js';\r\nimport PlaneBufferGeometry from './Core/PlaneBufferGeometry.js';\r\nimport CSG from './Util/CSG.js';\r\nimport MeshPhongMaterial from './Core/MeshPhongMaterial.js';\r\nimport MaterialUtils from './Core/MaterialUtils.js';\r\nimport ShaderUtils from './Core/ShaderUtils.js';\r\nimport defineProperty from './Util/defineProperty.js';\r\n\r\n\r\n\r\n\r\n// var g = typeof window != 'undefined' ? window : (typeof global != 'undefined' ? global : globalThis);\r\nvar CesiumMeshVisualizer = {};\r\nif (typeof Cesium !== 'undefined') {\r\n    //     g.Cesium = {};\r\n    // } else {\r\n    CesiumMeshVisualizer = Cesium;\r\n}\r\n\r\nCesiumMeshVisualizer.defineProperty = defineProperty;\r\nCesiumMeshVisualizer.RendererUtils = RendererUtils;\r\nCesiumMeshVisualizer.MaterialUtils = MaterialUtils;\r\nCesiumMeshVisualizer.ShaderUtils = ShaderUtils;\r\nCesiumMeshVisualizer.GeometryUtils = GeometryUtils;\r\n\r\nCesiumMeshVisualizer.Mesh = Mesh;\r\nCesiumMeshVisualizer.MeshMaterial = MeshMaterial;\r\nCesiumMeshVisualizer.ShaderChunk = ShaderChunk;\r\nCesiumMeshVisualizer.ShaderLib = ShaderLib;\r\nCesiumMeshVisualizer.MeshVisualizer = MeshVisualizer;\r\nCesiumMeshVisualizer.FramebufferTexture = FramebufferTexture;\r\nCesiumMeshVisualizer.LOD = LOD;\r\nCesiumMeshVisualizer.PlaneGeometry = PlaneGeometry;\r\nCesiumMeshVisualizer.Rotation = Rotation;\r\nCesiumMeshVisualizer.ReferenceMesh = ReferenceMesh;\r\nCesiumMeshVisualizer.BasicMeshMaterial = BasicMeshMaterial;\r\nCesiumMeshVisualizer.BasicGeometry = BasicGeometry;\r\nCesiumMeshVisualizer.PlaneBufferGeometry = PlaneBufferGeometry;\r\nCesiumMeshVisualizer.CSG = CSG;\r\nCesiumMeshVisualizer.MeshPhongMaterial = MeshPhongMaterial;\r\nCesiumMeshVisualizer.MeshVisualizerVERSION = '1.0.1';\r\n\r\n\r\nexport {\r\n    RendererUtils, Mesh, MeshMaterial, ShaderChunk, ShaderLib, MeshVisualizer,\r\n    FramebufferTexture, GeometryUtils, LOD, PlaneGeometry, Rotation, ReferenceMesh,\r\n    BasicMeshMaterial, BasicGeometry, PlaneBufferGeometry, CSG,\r\n    MeshPhongMaterial, MaterialUtils, ShaderUtils,defineProperty\r\n}\r\n\r\nexport default CesiumMeshVisualizer;\r\nif (typeof module != 'undefined') {\r\n    module.exports = CesiumMeshVisualizer;\r\n}",
    "// Constructive Solid Geometry (CSG) is a modeling technique that uses Boolean\n// operations like union and intersection to combine 3D solids. This library\n// implements CSG operations on meshes elegantly and concisely using BSP trees,\n// and is meant to serve as an easily understandable implementation of the\n// algorithm. All edge cases involving overlapping coplanar polygons in both\n// solids are correctly handled.\n// \n// Example usage:\n// \n//     var cube = CSG.cube();\n//     var sphere = CSG.sphere({ radius: 1.3 });\n//     var polygons = cube.subtract(sphere).toPolygons();\n// \n// ## Implementation Details\n// \n// All CSG operations are implemented in terms of two functions, `clipTo()` and\n// `invert()`, which remove parts of a BSP tree inside another BSP tree and swap\n// solid and empty space, respectively. To find the union of `a` and `b`, we\n// want to remove everything in `a` inside `b` and everything in `b` inside `a`,\n// then combine polygons from `a` and `b` into one solid:\n// \n//     a.clipTo(b);\n//     b.clipTo(a);\n//     a.build(b.allPolygons());\n// \n// The only tricky part is handling overlapping coplanar polygons in both trees.\n// The code above keeps both copies, but we need to keep them in one tree and\n// remove them in the other tree. To remove them from `b` we can clip the\n// inverse of `b` against `a`. The code for union now looks like this:\n// \n//     a.clipTo(b);\n//     b.clipTo(a);\n//     b.invert();\n//     b.clipTo(a);\n//     b.invert();\n//     a.build(b.allPolygons());\n// \n// Subtraction and intersection naturally follow from set operations. If\n// union is `A | B`, subtraction is `A - B = ~(~A | B)` and intersection is\n// `A & B = ~(~A | ~B)` where `~` is the complement operator.\n// \n// ## License\n// \n// Copyright (c) 2011 Evan Wallace (http://madebyevan.com/), under the MIT license.\n\n// # class CSG\n\n// Holds a binary space partition tree representing a 3D solid. Two solids can\n// be combined using the `union()`, `subtract()`, and `intersect()` methods.\n\nfunction CSG() {\n  this.polygons = [];\n};\n\n// Construct a CSG solid from a list of `CSG.Polygon` instances.\nCSG.fromPolygons = function (polygons) {\n  var csg = new CSG();\n  csg.polygons = polygons;\n  return csg;\n};\n\nCSG.prototype = {\n  clone: function () {\n    var csg = new CSG();\n    csg.polygons = this.polygons.map(function (p) { return p.clone(); });\n    return csg;\n  },\n\n  toPolygons: function () {\n    return this.polygons;\n  },\n\n  // Return a new CSG solid representing space in either this solid or in the\n  // solid `csg`. Neither this solid nor the solid `csg` are modified.\n  // \n  //     A.union(B)\n  // \n  //     +-------+            +-------+\n  //     |       |            |       |\n  //     |   A   |            |       |\n  //     |    +--+----+   =   |       +----+\n  //     +----+--+    |       +----+       |\n  //          |   B   |            |       |\n  //          |       |            |       |\n  //          +-------+            +-------+\n  // \n  union: function (csg) {\n    var a = new CSG.Node(this.clone().polygons);\n    var b = new CSG.Node(csg.clone().polygons);\n    a.clipTo(b);\n    b.clipTo(a);\n    b.invert();\n    b.clipTo(a);\n    b.invert();\n    a.build(b.allPolygons());\n    return CSG.fromPolygons(a.allPolygons());\n  },\n\n  // Return a new CSG solid representing space in this solid but not in the\n  // solid `csg`. Neither this solid nor the solid `csg` are modified.\n  // \n  //     A.subtract(B)\n  // \n  //     +-------+            +-------+\n  //     |       |            |       |\n  //     |   A   |            |       |\n  //     |    +--+----+   =   |    +--+\n  //     +----+--+    |       +----+\n  //          |   B   |\n  //          |       |\n  //          +-------+\n  // \n  subtract: function (csg) {\n    var a = new CSG.Node(this.clone().polygons);\n    var b = new CSG.Node(csg.clone().polygons);\n    a.invert();\n    a.clipTo(b);\n    b.clipTo(a);\n    b.invert();\n    b.clipTo(a);\n    b.invert();\n    a.build(b.allPolygons());\n    a.invert();\n    return CSG.fromPolygons(a.allPolygons());\n  },\n\n  // Return a new CSG solid representing space both this solid and in the\n  // solid `csg`. Neither this solid nor the solid `csg` are modified.\n  // \n  //     A.intersect(B)\n  // \n  //     +-------+\n  //     |       |\n  //     |   A   |\n  //     |    +--+----+   =   +--+\n  //     +----+--+    |       +--+\n  //          |   B   |\n  //          |       |\n  //          +-------+\n  // \n  intersect: function (csg) {\n    var a = new CSG.Node(this.clone().polygons);\n    var b = new CSG.Node(csg.clone().polygons);\n    a.invert();\n    b.clipTo(a);\n    b.invert();\n    a.clipTo(b);\n    b.clipTo(a);\n    a.build(b.allPolygons());\n    a.invert();\n    return CSG.fromPolygons(a.allPolygons());\n  },\n\n  // Return a new CSG solid with solid and empty space switched. This solid is\n  // not modified.\n  inverse: function () {\n    var csg = this.clone();\n    csg.polygons.map(function (p) { p.flip(); });\n    return csg;\n  }\n};\n\n// Construct an axis-aligned solid cuboid. Optional parameters are `center` and\n// `radius`, which default to `[0, 0, 0]` and `[1, 1, 1]`. The radius can be\n// specified using a single number or a list of three numbers, one for each axis.\n// \n// Example code:\n// \n//     var cube = CSG.cube({\n//       center: [0, 0, 0],\n//       radius: 1\n//     });\nCSG.cube = function (options) {\n  options = options || {};\n  var c = new CSG.Vector(options.center || [0, 0, 0]);\n  var r = !options.radius ? [1, 1, 1] : options.radius.length ?\n    options.radius : [options.radius, options.radius, options.radius];\n  return CSG.fromPolygons([\n    [[0, 4, 6, 2], [-1, 0, 0]],\n    [[1, 3, 7, 5], [+1, 0, 0]],\n    [[0, 1, 5, 4], [0, -1, 0]],\n    [[2, 6, 7, 3], [0, +1, 0]],\n    [[0, 2, 3, 1], [0, 0, -1]],\n    [[4, 5, 7, 6], [0, 0, +1]]\n  ].map(function (info) {\n    return new CSG.Polygon(info[0].map(function (i) {\n      var pos = new CSG.Vector(\n        c.x + r[0] * (2 * !!(i & 1) - 1),\n        c.y + r[1] * (2 * !!(i & 2) - 1),\n        c.z + r[2] * (2 * !!(i & 4) - 1)\n      );\n      return new CSG.Vertex(pos, new CSG.Vector(info[1]));\n    }));\n  }));\n};\n\n// Construct a solid sphere. Optional parameters are `center`, `radius`,\n// `slices`, and `stacks`, which default to `[0, 0, 0]`, `1`, `16`, and `8`.\n// The `slices` and `stacks` parameters control the tessellation along the\n// longitude and latitude directions.\n// \n// Example usage:\n// \n//     var sphere = CSG.sphere({\n//       center: [0, 0, 0],\n//       radius: 1,\n//       slices: 16,\n//       stacks: 8\n//     });\nCSG.sphere = function (options) {\n  options = options || {};\n  var c = new CSG.Vector(options.center || [0, 0, 0]);\n  var r = options.radius || 1;\n  var slices = options.slices || 16;\n  var stacks = options.stacks || 8;\n  var polygons = [], vertices;\n  function vertex(theta, phi) {\n    theta *= Math.PI * 2;\n    phi *= Math.PI;\n    var dir = new CSG.Vector(\n      Math.cos(theta) * Math.sin(phi),\n      Math.cos(phi),\n      Math.sin(theta) * Math.sin(phi)\n    );\n    vertices.push(new CSG.Vertex(c.plus(dir.times(r)), dir));\n  }\n  for (var i = 0; i < slices; i++) {\n    for (var j = 0; j < stacks; j++) {\n      vertices = [];\n      vertex(i / slices, j / stacks);\n      if (j > 0) vertex((i + 1) / slices, j / stacks);\n      if (j < stacks - 1) vertex((i + 1) / slices, (j + 1) / stacks);\n      vertex(i / slices, (j + 1) / stacks);\n      polygons.push(new CSG.Polygon(vertices));\n    }\n  }\n  return CSG.fromPolygons(polygons);\n};\n\n// Construct a solid cylinder. Optional parameters are `start`, `end`,\n// `radius`, and `slices`, which default to `[0, -1, 0]`, `[0, 1, 0]`, `1`, and\n// `16`. The `slices` parameter controls the tessellation.\n// \n// Example usage:\n// \n//     var cylinder = CSG.cylinder({\n//       start: [0, -1, 0],\n//       end: [0, 1, 0],\n//       radius: 1,\n//       slices: 16\n//     });\nCSG.cylinder = function (options) {\n  options = options || {};\n  var s = new CSG.Vector(options.start || [0, -1, 0]);\n  var e = new CSG.Vector(options.end || [0, 1, 0]);\n  var ray = e.minus(s);\n  var r = options.radius || 1;\n  var slices = options.slices || 16;\n  var axisZ = ray.unit(), isY = (Math.abs(axisZ.y) > 0.5);\n  var axisX = new CSG.Vector(isY, !isY, 0).cross(axisZ).unit();\n  var axisY = axisX.cross(axisZ).unit();\n  var start = new CSG.Vertex(s, axisZ.negated());\n  var end = new CSG.Vertex(e, axisZ.unit());\n  var polygons = [];\n  function point(stack, slice, normalBlend) {\n    var angle = slice * Math.PI * 2;\n    var out = axisX.times(Math.cos(angle)).plus(axisY.times(Math.sin(angle)));\n    var pos = s.plus(ray.times(stack)).plus(out.times(r));\n    var normal = out.times(1 - Math.abs(normalBlend)).plus(axisZ.times(normalBlend));\n    return new CSG.Vertex(pos, normal);\n  }\n  for (var i = 0; i < slices; i++) {\n    var t0 = i / slices, t1 = (i + 1) / slices;\n    polygons.push(new CSG.Polygon([start, point(0, t0, -1), point(0, t1, -1)]));\n    polygons.push(new CSG.Polygon([point(0, t1, 0), point(0, t0, 0), point(1, t0, 0), point(1, t1, 0)]));\n    polygons.push(new CSG.Polygon([end, point(1, t1, 1), point(1, t0, 1)]));\n  }\n  return CSG.fromPolygons(polygons);\n};\n\n// # class Vector\n\n// Represents a 3D vector.\n// \n// Example usage:\n// \n//     new CSG.Vector(1, 2, 3);\n//     new CSG.Vector([1, 2, 3]);\n//     new CSG.Vector({ x: 1, y: 2, z: 3 });\n\nCSG.Vector = function (x, y, z) {\n  if (arguments.length == 3) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  } else if ('x' in x) {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z;\n  } else {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2];\n  }\n};\n\nCSG.Vector.prototype = {\n  clone: function () {\n    return new CSG.Vector(this.x, this.y, this.z);\n  },\n\n  negated: function () {\n    return new CSG.Vector(-this.x, -this.y, -this.z);\n  },\n\n  plus: function (a) {\n    return new CSG.Vector(this.x + a.x, this.y + a.y, this.z + a.z);\n  },\n\n  minus: function (a) {\n    return new CSG.Vector(this.x - a.x, this.y - a.y, this.z - a.z);\n  },\n\n  times: function (a) {\n    return new CSG.Vector(this.x * a, this.y * a, this.z * a);\n  },\n\n  dividedBy: function (a) {\n    return new CSG.Vector(this.x / a, this.y / a, this.z / a);\n  },\n\n  dot: function (a) {\n    return this.x * a.x + this.y * a.y + this.z * a.z;\n  },\n\n  lerp: function (a, t) {\n    return this.plus(a.minus(this).times(t));\n  },\n\n  length: function () {\n    return Math.sqrt(this.dot(this));\n  },\n\n  unit: function () {\n    return this.dividedBy(this.length());\n  },\n\n  cross: function (a) {\n    return new CSG.Vector(\n      this.y * a.z - this.z * a.y,\n      this.z * a.x - this.x * a.z,\n      this.x * a.y - this.y * a.x\n    );\n  }\n};\n\n// # class Vertex\n\n// Represents a vertex of a polygon. Use your own vertex class instead of this\n// one to provide additional features like texture coordinates and vertex\n// colors. Custom vertex classes need to provide a `pos` property and `clone()`,\n// `flip()`, and `interpolate()` methods that behave analogous to the ones\n// defined by `CSG.Vertex`. This class provides `normal` so convenience\n// functions like `CSG.sphere()` can return a smooth vertex normal, but `normal`\n// is not used anywhere else.\n\nCSG.Vertex = function (pos, normal) {\n  this.pos = new CSG.Vector(pos);\n  this.normal = new CSG.Vector(normal);\n};\n\nCSG.Vertex.prototype = {\n  clone: function () {\n    return new CSG.Vertex(this.pos.clone(), this.normal.clone());\n  },\n\n  // Invert all orientation-specific data (e.g. vertex normal). Called when the\n  // orientation of a polygon is flipped.\n  flip: function () {\n    this.normal = this.normal.negated();\n  },\n\n  // Create a new vertex between this vertex and `other` by linearly\n  // interpolating all properties using a parameter of `t`. Subclasses should\n  // override this to interpolate additional properties.\n  interpolate: function (other, t) {\n    return new CSG.Vertex(\n      this.pos.lerp(other.pos, t),\n      this.normal.lerp(other.normal, t)\n    );\n  }\n};\n\n// # class Plane\n\n// Represents a plane in 3D space.\n\nCSG.Plane = function (normal, w) {\n  this.normal = normal;\n  this.w = w;\n};\n\n// `CSG.Plane.EPSILON` is the tolerance used by `splitPolygon()` to decide if a\n// point is on the plane.\nCSG.Plane.EPSILON = 1e-5;\n\nCSG.Plane.fromPoints = function (a, b, c) {\n  var n = b.minus(a).cross(c.minus(a)).unit();\n  return new CSG.Plane(n, n.dot(a));\n};\n\nCSG.Plane.prototype = {\n  clone: function () {\n    return new CSG.Plane(this.normal.clone(), this.w);\n  },\n\n  flip: function () {\n    this.normal = this.normal.negated();\n    this.w = -this.w;\n  },\n\n  // Split `polygon` by this plane if needed, then put the polygon or polygon\n  // fragments in the appropriate lists. Coplanar polygons go into either\n  // `coplanarFront` or `coplanarBack` depending on their orientation with\n  // respect to this plane. Polygons in front or in back of this plane go into\n  // either `front` or `back`.\n  splitPolygon: function (polygon, coplanarFront, coplanarBack, front, back) {\n    var COPLANAR = 0;\n    var FRONT = 1;\n    var BACK = 2;\n    var SPANNING = 3;\n\n    // Classify each point as well as the entire polygon into one of the above\n    // four classes.\n    var polygonType = 0;\n    var types = [];\n    for (var i = 0; i < polygon.vertices.length; i++) {\n      var t = this.normal.dot(polygon.vertices[i].pos) - this.w;\n      var type = (t < -CSG.Plane.EPSILON) ? BACK : (t > CSG.Plane.EPSILON) ? FRONT : COPLANAR;\n      polygonType |= type;\n      types.push(type);\n    }\n\n    // Put the polygon in the correct list, splitting it when necessary.\n    switch (polygonType) {\n      case COPLANAR:\n        (this.normal.dot(polygon.plane.normal) > 0 ? coplanarFront : coplanarBack).push(polygon);\n        break;\n      case FRONT:\n        front.push(polygon);\n        break;\n      case BACK:\n        back.push(polygon);\n        break;\n      case SPANNING:\n        var f = [], b = [];\n        for (var i = 0; i < polygon.vertices.length; i++) {\n          var j = (i + 1) % polygon.vertices.length;\n          var ti = types[i], tj = types[j];\n          var vi = polygon.vertices[i], vj = polygon.vertices[j];\n          if (ti != BACK) f.push(vi);\n          if (ti != FRONT) b.push(ti != BACK ? vi.clone() : vi);\n          if ((ti | tj) == SPANNING) {\n            var t = (this.w - this.normal.dot(vi.pos)) / this.normal.dot(vj.pos.minus(vi.pos));\n            var v = vi.interpolate(vj, t);\n            f.push(v);\n            b.push(v.clone());\n          }\n        }\n        if (f.length >= 3) front.push(new CSG.Polygon(f, polygon.shared));\n        if (b.length >= 3) back.push(new CSG.Polygon(b, polygon.shared));\n        break;\n    }\n  }\n};\n\n// # class Polygon\n\n// Represents a convex polygon. The vertices used to initialize a polygon must\n// be coplanar and form a convex loop. They do not have to be `CSG.Vertex`\n// instances but they must behave similarly (duck typing can be used for\n// customization).\n// \n// Each convex polygon has a `shared` property, which is shared between all\n// polygons that are clones of each other or were split from the same polygon.\n// This can be used to define per-polygon properties (such as surface color).\n\nCSG.Polygon = function (vertices, shared) {\n  this.vertices = vertices;\n  this.shared = shared;\n  this.plane = CSG.Plane.fromPoints(vertices[0].pos, vertices[1].pos, vertices[2].pos);\n};\n\nCSG.Polygon.prototype = {\n  clone: function () {\n    var vertices = this.vertices.map(function (v) { return v.clone(); });\n    return new CSG.Polygon(vertices, this.shared);\n  },\n\n  flip: function () {\n    this.vertices.reverse().map(function (v) { v.flip(); });\n    this.plane.flip();\n  }\n};\n\n// # class Node\n\n// Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\n// by picking a polygon to split along. That polygon (and all other coplanar\n// polygons) are added directly to that node and the other polygons are added to\n// the front and/or back subtrees. This is not a leafy BSP tree since there is\n// no distinction between internal and leaf nodes.\n\nCSG.Node = function (polygons) {\n  this.plane = null;\n  this.front = null;\n  this.back = null;\n  this.polygons = [];\n  if (polygons) this.build(polygons);\n};\n\nCSG.Node.prototype = {\n  clone: function () {\n    var node = new CSG.Node();\n    node.plane = this.plane && this.plane.clone();\n    node.front = this.front && this.front.clone();\n    node.back = this.back && this.back.clone();\n    node.polygons = this.polygons.map(function (p) { return p.clone(); });\n    return node;\n  },\n\n  // Convert solid space to empty space and empty space to solid space.\n  invert: function () {\n    for (var i = 0; i < this.polygons.length; i++) {\n      this.polygons[i].flip();\n    }\n    this.plane.flip();\n    if (this.front) this.front.invert();\n    if (this.back) this.back.invert();\n    var temp = this.front;\n    this.front = this.back;\n    this.back = temp;\n  },\n\n  // Recursively remove all polygons in `polygons` that are inside this BSP\n  // tree.\n  clipPolygons: function (polygons) {\n    if (!this.plane) return polygons.slice();\n    var front = [], back = [];\n    for (var i = 0; i < polygons.length; i++) {\n      this.plane.splitPolygon(polygons[i], front, back, front, back);\n    }\n    if (this.front) front = this.front.clipPolygons(front);\n    if (this.back) back = this.back.clipPolygons(back);\n    else back = [];\n    return front.concat(back);\n  },\n\n  // Remove all polygons in this BSP tree that are inside the other BSP tree\n  // `bsp`.\n  clipTo: function (bsp) {\n    this.polygons = bsp.clipPolygons(this.polygons);\n    if (this.front) this.front.clipTo(bsp);\n    if (this.back) this.back.clipTo(bsp);\n  },\n\n  // Return a list of all polygons in this BSP tree.\n  allPolygons: function () {\n    var polygons = this.polygons.slice();\n    if (this.front) polygons = polygons.concat(this.front.allPolygons());\n    if (this.back) polygons = polygons.concat(this.back.allPolygons());\n    return polygons;\n  },\n\n  // Build a BSP tree out of `polygons`. When called on an existing tree, the\n  // new polygons are filtered down to the bottom of the tree and become new\n  // nodes there. Each set of polygons is partitioned using the first polygon\n  // (no heuristic is used to pick a good split).\n  build: function (polygons) {\n    if (!polygons.length) return;\n    if (!this.plane) this.plane = polygons[0].plane.clone();\n    var front = [], back = [];\n    for (var i = 0; i < polygons.length; i++) {\n      this.plane.splitPolygon(polygons[i], this.polygons, this.polygons, front, back);\n    }\n    if (front.length) {\n      if (!this.front) this.front = new CSG.Node();\n      this.front.build(front);\n    }\n    if (back.length) {\n      if (!this.back) this.back = new CSG.Node();\n      this.back.build(back);\n    }\n  }\n};\n\nexport default CSG;",
    "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nfunction TIFFParser() {\n\tthis.tiffDataView = undefined;\n\tthis.littleEndian = undefined;\n\tthis.fileDirectories = [];\n};\n\nTIFFParser.prototype = {\n\tisLittleEndian: function () {\n\t\t// Get byte order mark.\n\t\tvar BOM = this.getBytes(2, 0);\n\n\t\t// Find out the endianness.\n\t\tif (BOM === 0x4949) {\n\t\t\tthis.littleEndian = true;\n\t\t} else if (BOM === 0x4D4D) {\n\t\t\tthis.littleEndian = false;\n\t\t} else {\n\t\t\tconsole.log( BOM );\n\t\t\tthrow TypeError(\"Invalid byte order value.\");\n\t\t}\n\n\t\treturn this.littleEndian;\n\t},\n\n\thasTowel: function () {\n\t\t// Check for towel.\n\t\tif (this.getBytes(2, 2) !== 42) {\n\t\t\tthrow RangeError(\"You forgot your towel!\");\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tgetFieldTagName: function (fieldTag) {\n\t\t// See: http://www.digitizationguidelines.gov/guidelines/TIFF_Metadata_Final.pdf\n\t\t// See: http://www.digitalpreservation.gov/formats/content/tiff_tags.shtml\n\t\tvar fieldTagNames = {\n\t\t\t// TIFF Baseline\n\t\t\t0x013B: 'Artist',\n\t\t\t0x0102: 'BitsPerSample',\n\t\t\t0x0109: 'CellLength',\n\t\t\t0x0108: 'CellWidth',\n\t\t\t0x0140: 'ColorMap',\n\t\t\t0x0103: 'Compression',\n\t\t\t0x8298: 'Copyright',\n\t\t\t0x0132: 'DateTime',\n\t\t\t0x0152: 'ExtraSamples',\n\t\t\t0x010A: 'FillOrder',\n\t\t\t0x0121: 'FreeByteCounts',\n\t\t\t0x0120: 'FreeOffsets',\n\t\t\t0x0123: 'GrayResponseCurve',\n\t\t\t0x0122: 'GrayResponseUnit',\n\t\t\t0x013C: 'HostComputer',\n\t\t\t0x010E: 'ImageDescription',\n\t\t\t0x0101: 'ImageLength',\n\t\t\t0x0100: 'ImageWidth',\n\t\t\t0x010F: 'Make',\n\t\t\t0x0119: 'MaxSampleValue',\n\t\t\t0x0118: 'MinSampleValue',\n\t\t\t0x0110: 'Model',\n\t\t\t0x00FE: 'NewSubfileType',\n\t\t\t0x0112: 'Orientation',\n\t\t\t0x0106: 'PhotometricInterpretation',\n\t\t\t0x011C: 'PlanarConfiguration',\n\t\t\t0x0128: 'ResolutionUnit',\n\t\t\t0x0116: 'RowsPerStrip',\n\t\t\t0x0115: 'SamplesPerPixel',\n\t\t\t0x0131: 'Software',\n\t\t\t0x0117: 'StripByteCounts',\n\t\t\t0x0111: 'StripOffsets',\n\t\t\t0x00FF: 'SubfileType',\n\t\t\t0x0107: 'Threshholding',\n\t\t\t0x011A: 'XResolution',\n\t\t\t0x011B: 'YResolution',\n\n\t\t\t// TIFF Extended\n\t\t\t0x0146: 'BadFaxLines',\n\t\t\t0x0147: 'CleanFaxData',\n\t\t\t0x0157: 'ClipPath',\n\t\t\t0x0148: 'ConsecutiveBadFaxLines',\n\t\t\t0x01B1: 'Decode',\n\t\t\t0x01B2: 'DefaultImageColor',\n\t\t\t0x010D: 'DocumentName',\n\t\t\t0x0150: 'DotRange',\n\t\t\t0x0141: 'HalftoneHints',\n\t\t\t0x015A: 'Indexed',\n\t\t\t0x015B: 'JPEGTables',\n\t\t\t0x011D: 'PageName',\n\t\t\t0x0129: 'PageNumber',\n\t\t\t0x013D: 'Predictor',\n\t\t\t0x013F: 'PrimaryChromaticities',\n\t\t\t0x0214: 'ReferenceBlackWhite',\n\t\t\t0x0153: 'SampleFormat',\n\t\t\t0x022F: 'StripRowCounts',\n\t\t\t0x014A: 'SubIFDs',\n\t\t\t0x0124: 'T4Options',\n\t\t\t0x0125: 'T6Options',\n\t\t\t0x0145: 'TileByteCounts',\n\t\t\t0x0143: 'TileLength',\n\t\t\t0x0144: 'TileOffsets',\n\t\t\t0x0142: 'TileWidth',\n\t\t\t0x012D: 'TransferFunction',\n\t\t\t0x013E: 'WhitePoint',\n\t\t\t0x0158: 'XClipPathUnits',\n\t\t\t0x011E: 'XPosition',\n\t\t\t0x0211: 'YCbCrCoefficients',\n\t\t\t0x0213: 'YCbCrPositioning',\n\t\t\t0x0212: 'YCbCrSubSampling',\n\t\t\t0x0159: 'YClipPathUnits',\n\t\t\t0x011F: 'YPosition',\n\n\t\t\t// EXIF\n\t\t\t0x9202: 'ApertureValue',\n\t\t\t0xA001: 'ColorSpace',\n\t\t\t0x9004: 'DateTimeDigitized',\n\t\t\t0x9003: 'DateTimeOriginal',\n\t\t\t0x8769: 'Exif IFD',\n\t\t\t0x9000: 'ExifVersion',\n\t\t\t0x829A: 'ExposureTime',\n\t\t\t0xA300: 'FileSource',\n\t\t\t0x9209: 'Flash',\n\t\t\t0xA000: 'FlashpixVersion',\n\t\t\t0x829D: 'FNumber',\n\t\t\t0xA420: 'ImageUniqueID',\n\t\t\t0x9208: 'LightSource',\n\t\t\t0x927C: 'MakerNote',\n\t\t\t0x9201: 'ShutterSpeedValue',\n\t\t\t0x9286: 'UserComment',\n\n\t\t\t// IPTC\n\t\t\t0x83BB: 'IPTC',\n\n\t\t\t// ICC\n\t\t\t0x8773: 'ICC Profile',\n\n\t\t\t// XMP\n\t\t\t0x02BC: 'XMP',\n\n\t\t\t// GDAL\n\t\t\t0xA480: 'GDAL_METADATA',\n\t\t\t0xA481: 'GDAL_NODATA',\n\n\t\t\t// Photoshop\n\t\t\t0x8649: 'Photoshop',\n\t\t};\n\n\t\tvar fieldTagName;\n\n\t\tif (fieldTag in fieldTagNames) {\n\t\t\tfieldTagName = fieldTagNames[fieldTag];\n\t\t} else {\n\t\t\t//console.log( \"Unknown Field Tag:\", fieldTag);\n\t\t\tfieldTagName = \"Tag\" + fieldTag;\n\t\t}\n\n\t\treturn fieldTagName;\n\t},\n\n\tgetFieldTypeName: function (fieldType) {\n\t\tvar fieldTypeNames = {\n\t\t\t0x0001: 'BYTE',\n\t\t\t0x0002: 'ASCII',\n\t\t\t0x0003: 'SHORT',\n\t\t\t0x0004: 'LONG',\n\t\t\t0x0005: 'RATIONAL',\n\t\t\t0x0006: 'SBYTE',\n\t\t\t0x0007: 'UNDEFINED',\n\t\t\t0x0008: 'SSHORT',\n\t\t\t0x0009: 'SLONG',\n\t\t\t0x000A: 'SRATIONAL',\n\t\t\t0x000B: 'FLOAT',\n\t\t\t0x000C: 'DOUBLE',\n\t\t};\n\n\t\tvar fieldTypeName;\n\n\t\tif (fieldType in fieldTypeNames) {\n\t\t\tfieldTypeName = fieldTypeNames[fieldType];\n\t\t}\n\n\t\treturn fieldTypeName;\n\t},\n\n\tgetFieldTypeLength: function (fieldTypeName) {\n\t\tvar fieldTypeLength;\n\n\t\tif (['BYTE', 'ASCII', 'SBYTE', 'UNDEFINED'].indexOf(fieldTypeName) !== -1) {\n\t\t\tfieldTypeLength = 1;\n\t\t} else if (['SHORT', 'SSHORT'].indexOf(fieldTypeName) !== -1) {\n\t\t\tfieldTypeLength = 2;\n\t\t} else if (['LONG', 'SLONG', 'FLOAT'].indexOf(fieldTypeName) !== -1) {\n\t\t\tfieldTypeLength = 4;\n\t\t} else if (['RATIONAL', 'SRATIONAL', 'DOUBLE'].indexOf(fieldTypeName) !== -1) {\n\t\t\tfieldTypeLength = 8;\n\t\t}\n\n\t\treturn fieldTypeLength;\n\t},\n\n\tgetBits: function (numBits, byteOffset, bitOffset) {\n\t\tbitOffset = bitOffset || 0;\n\t\tvar extraBytes = Math.floor(bitOffset / 8);\n\t\tvar newByteOffset = byteOffset + extraBytes;\n\t\tvar totalBits = bitOffset + numBits;\n\t\tvar shiftRight = 32 - numBits;\n\n\t\tif (totalBits <= 0) {\n\t\t\tconsole.log( numBits, byteOffset, bitOffset );\n\t\t\tthrow RangeError(\"No bits requested\");\n\t\t} else if (totalBits <= 8) {\n\t\t\tvar shiftLeft = 24 + bitOffset;\n\t\t\tvar rawBits = this.tiffDataView.getUint8(newByteOffset, this.littleEndian);\n\t\t} else if (totalBits <= 16) {\n\t\t\tvar shiftLeft = 16 + bitOffset;\n\t\t\tvar rawBits = this.tiffDataView.getUint16(newByteOffset, this.littleEndian);\n\t\t} else if (totalBits <= 32) {\n\t\t\tvar shiftLeft = bitOffset;\n\t\t\tvar rawBits = this.tiffDataView.getUint32(newByteOffset, this.littleEndian);\n\t\t} else {\n\t\t\tconsole.log( numBits, byteOffset, bitOffset );\n\t\t\tthrow RangeError(\"Too many bits requested\");\n\t\t}\n\n\t\tvar chunkInfo = {\n\t\t\t'bits': ((rawBits << shiftLeft) >>> shiftRight),\n\t\t\t'byteOffset': newByteOffset + Math.floor(totalBits / 8),\n\t\t\t'bitOffset': totalBits % 8,\n\t\t};\n\n\t\treturn chunkInfo;\n\t},\n\n\tgetBytes: function (numBytes, offset) {\n\t\tif (numBytes <= 0) {\n\t\t\tconsole.log( numBytes, offset );\n\t\t\tthrow RangeError(\"No bytes requested\");\n\t\t} else if (numBytes <= 1) {\n\t\t\treturn this.tiffDataView.getUint8(offset, this.littleEndian);\n\t\t} else if (numBytes <= 2) {\n\t\t\treturn this.tiffDataView.getUint16(offset, this.littleEndian);\n\t\t} else if (numBytes <= 3) {\n\t\t\treturn this.tiffDataView.getUint32(offset, this.littleEndian) >>> 8;\n\t\t} else if (numBytes <= 4) {\n\t\t\treturn this.tiffDataView.getUint32(offset, this.littleEndian);\n\t\t} else {\n\t\t\tconsole.log( numBytes, offset );\n\t\t\tthrow RangeError(\"Too many bytes requested\");\n\t\t}\n\t},\n\n\tgetFieldValues: function (fieldTagName, fieldTypeName, typeCount, valueOffset) {\n\t\tvar fieldValues = [];\n\n\t\tvar fieldTypeLength = this.getFieldTypeLength(fieldTypeName);\n\t\tvar fieldValueSize = fieldTypeLength * typeCount;\n\n\t\tif (fieldValueSize <= 4) {\n\t\t\t// The value is stored at the big end of the valueOffset.\n\t\t\tif (this.littleEndian === false) {\n\t\t\t\tvar value = valueOffset >>> ((4 - fieldTypeLength) * 8);\n\t\t\t} else {\n\t\t\t\tvar value = valueOffset;\n\t\t\t}\n\n\t\t\tfieldValues.push(value);\n\t\t} else {\n\t\t\tfor (var i = 0; i < typeCount; i++) {\n\t\t\t\tvar indexOffset = fieldTypeLength * i;\n\n\t\t\t\tif (fieldTypeLength >= 8) {\n\t\t\t\t\tif (['RATIONAL', 'SRATIONAL'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\t\t\t// Numerator\n\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset));\n\t\t\t\t\t\t// Denominator\n\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset + 4));\n//\t\t\t\t\t} else if (['DOUBLE'].indexOf(fieldTypeName) !== -1) {\n//\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset) + this.getBytes(4, valueOffset + indexOffset + 4));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log( fieldTypeName, typeCount, fieldValueSize );\n\t\t\t\t\t\tthrow TypeError(\"Can't handle this field type or size\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfieldValues.push(this.getBytes(fieldTypeLength, valueOffset + indexOffset));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (fieldTypeName === 'ASCII') {\n\t\t\tfieldValues.forEach(function(e, i, a) { a[i] = String.fromCharCode(e); });\n\t\t}\n\n\t\treturn fieldValues;\n\t},\n\n\tclampColorSample: function(colorSample, bitsPerSample) {\n\t\tvar multiplier = Math.pow(2, 8 - bitsPerSample);\n\n\t\treturn Math.floor((colorSample * multiplier) + (multiplier - 1));\n\t},\n\n\tmakeRGBAFillValue: function(r, g, b, a) {\n\t\tif(typeof a === 'undefined') {\n\t\t\ta = 1.0;\n\t\t}\n\t\treturn \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n\t},\n\n\tparseFileDirectory: function (byteOffset) {\n\t\tvar numDirEntries = this.getBytes(2, byteOffset);\n\n\t\tvar tiffFields = [];\n\n\t\tfor (var i = byteOffset + 2, entryCount = 0; entryCount < numDirEntries; i += 12, entryCount++) {\n\t\t\tvar fieldTag = this.getBytes(2, i);\n\t\t\tvar fieldType = this.getBytes(2, i + 2);\n\t\t\tvar typeCount = this.getBytes(4, i + 4);\n\t\t\tvar valueOffset = this.getBytes(4, i + 8);\n\n\t\t\tvar fieldTagName = this.getFieldTagName( fieldTag );\n\t\t\tvar fieldTypeName = this.getFieldTypeName( fieldType );\n\n\t\t\tvar fieldValues = this.getFieldValues(fieldTagName, fieldTypeName, typeCount, valueOffset);\n\n\t\t\ttiffFields[fieldTagName] = { 'type': fieldTypeName, 'values': fieldValues };\n\t\t}\n\n\t\tthis.fileDirectories.push( tiffFields );\n\n\t\tvar nextIFDByteOffset = this.getBytes(4, i);\n\n\t\tif (nextIFDByteOffset === 0x00000000) {\n\t\t\treturn this.fileDirectories;\n\t\t} else {\n\t\t\treturn this.parseFileDirectory(nextIFDByteOffset);\n\t\t}\n\t},\n\n\tparseTIFF: function (tiffArrayBuffer, canvas) {\n\t\tcanvas = canvas || document.createElement('canvas');\n\n\t\tthis.tiffDataView = new DataView(tiffArrayBuffer);\n\t\tthis.canvas = canvas;\n\n\t\tthis.littleEndian = this.isLittleEndian(this.tiffDataView);\n\n\t\tif (!this.hasTowel(this.tiffDataView, this.littleEndian)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar firstIFDByteOffset = this.getBytes(4, 4);\n\n\t\tthis.fileDirectories = this.parseFileDirectory(firstIFDByteOffset);\n\n\t\tvar fileDirectory = this.fileDirectories[0];\n\n\t\t//console.log( fileDirectory );\n\n\t\tvar imageWidth = fileDirectory.ImageWidth.values[0];\n\t\tvar imageLength = fileDirectory.ImageLength.values[0];\n\n\t\tthis.canvas.width = imageWidth;\n\t\tthis.canvas.height = imageLength;\n\n\t\tvar strips = [];\n\n\t\tvar compression = (fileDirectory.Compression) ? fileDirectory.Compression.values[0] : 1;\n\n\t\tvar samplesPerPixel = fileDirectory.SamplesPerPixel.values[0];\n\n\t\tvar sampleProperties = [];\n\n\t\tvar bitsPerPixel = 0;\n\t\tvar hasBytesPerPixel = false;\n\n\t\tfileDirectory.BitsPerSample.values.forEach(function(bitsPerSample, i, bitsPerSampleValues) {\n\t\t\tsampleProperties[i] = {\n\t\t\t\t'bitsPerSample': bitsPerSample,\n\t\t\t\t'hasBytesPerSample': false,\n\t\t\t\t'bytesPerSample': undefined,\n\t\t\t};\n\n\t\t\tif ((bitsPerSample % 8) === 0) {\n\t\t\t\tsampleProperties[i].hasBytesPerSample = true;\n\t\t\t\tsampleProperties[i].bytesPerSample = bitsPerSample / 8;\n\t\t\t}\n\n\t\t\tbitsPerPixel += bitsPerSample;\n\t\t}, this);\n\n\t\tif ((bitsPerPixel % 8) === 0) {\n\t\t\thasBytesPerPixel = true;\n\t\t\tvar bytesPerPixel = bitsPerPixel / 8;\n\t\t}\n\n\t\tvar stripOffsetValues = fileDirectory.StripOffsets.values;\n\t\tvar numStripOffsetValues = stripOffsetValues.length;\n\n\t\t// StripByteCounts is supposed to be required, but see if we can recover anyway.\n\t\tif (fileDirectory.StripByteCounts) {\n\t\t\tvar stripByteCountValues = fileDirectory.StripByteCounts.values;\n\t\t} else {\n\t\t\tconsole.log(\"Missing StripByteCounts!\");\n\n\t\t\t// Infer StripByteCounts, if possible.\n\t\t\tif (numStripOffsetValues === 1) {\n\t\t\t\tvar stripByteCountValues = [Math.ceil((imageWidth * imageLength * bitsPerPixel) / 8)];\n\t\t\t} else {\n\t\t\t\tthrow Error(\"Cannot recover from missing StripByteCounts\");\n\t\t\t}\n\t\t}\n\n\t\t// Loop through strips and decompress as necessary.\n\t\tfor (var i = 0; i < numStripOffsetValues; i++) {\n\t\t\tvar stripOffset = stripOffsetValues[i];\n\t\t\tstrips[i] = [];\n\n\t\t\tvar stripByteCount = stripByteCountValues[i];\n\n\t\t\t// Loop through pixels.\n\t\t\tfor (var byteOffset = 0, bitOffset = 0, jIncrement = 1, getHeader = true, pixel = [], numBytes = 0, sample = 0, currentSample = 0; byteOffset < stripByteCount; byteOffset += jIncrement) {\n\t\t\t\t// Decompress strip.\n\t\t\t\tswitch (compression) {\n\t\t\t\t\t// Uncompressed\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t// Loop through samples (sub-pixels).\n\t\t\t\t\t\tfor (var m = 0, pixel = []; m < samplesPerPixel; m++) {\n\t\t\t\t\t\t\tif (sampleProperties[m].hasBytesPerSample) {\n\t\t\t\t\t\t\t\t// XXX: This is wrong!\n\t\t\t\t\t\t\t\tvar sampleOffset = sampleProperties[m].bytesPerSample * m;\n\n\t\t\t\t\t\t\t\tpixel.push(this.getBytes(sampleProperties[m].bytesPerSample, stripOffset + byteOffset + sampleOffset));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar sampleInfo = this.getBits(sampleProperties[m].bitsPerSample, stripOffset + byteOffset, bitOffset);\n\n\t\t\t\t\t\t\t\tpixel.push(sampleInfo.bits);\n\n\t\t\t\t\t\t\t\tbyteOffset = sampleInfo.byteOffset - stripOffset;\n\t\t\t\t\t\t\t\tbitOffset = sampleInfo.bitOffset;\n\n\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per sample\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstrips[i].push(pixel);\n\n\t\t\t\t\t\tif (hasBytesPerPixel) {\n\t\t\t\t\t\t\tjIncrement = bytesPerPixel;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjIncrement = 0;\n\n\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per pixel\");\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// CITT Group 3 1-Dimensional Modified Huffman run-length encoding\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// Group 3 Fax\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// Group 4 Fax\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// LZW\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// Old-style JPEG (TIFF 6.0)\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// New-style JPEG (TIFF Specification Supplement 2)\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// PackBits\n\t\t\t\t\tcase 32773:\n\t\t\t\t\t\t// Are we ready for a new block?\n\t\t\t\t\t\tif (getHeader) {\n\t\t\t\t\t\t\tgetHeader = false;\n\n\t\t\t\t\t\t\tvar blockLength = 1;\n\t\t\t\t\t\t\tvar iterations = 1;\n\n\t\t\t\t\t\t\t// The header byte is signed.\n\t\t\t\t\t\t\tvar header = this.tiffDataView.getInt8(stripOffset + byteOffset, this.littleEndian);\n\n\t\t\t\t\t\t\tif ((header >= 0) && (header <= 127)) { // Normal pixels.\n\t\t\t\t\t\t\t\tblockLength = header + 1;\n\t\t\t\t\t\t\t} else if ((header >= -127) && (header <= -1)) { // Collapsed pixels.\n\t\t\t\t\t\t\t\titerations = -header + 1;\n\t\t\t\t\t\t\t} else /*if (header === -128)*/ { // Placeholder byte?\n\t\t\t\t\t\t\t\tgetHeader = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar currentByte = this.getBytes(1, stripOffset + byteOffset);\n\n\t\t\t\t\t\t\t// Duplicate bytes, if necessary.\n\t\t\t\t\t\t\tfor (var m = 0; m < iterations; m++) {\n\t\t\t\t\t\t\t\tif (sampleProperties[sample].hasBytesPerSample) {\n\t\t\t\t\t\t\t\t\t// We're reading one byte at a time, so we need to handle multi-byte samples.\n\t\t\t\t\t\t\t\t\tcurrentSample = (currentSample << (8 * numBytes)) | currentByte;\n\t\t\t\t\t\t\t\t\tnumBytes++;\n\n\t\t\t\t\t\t\t\t\t// Is our sample complete?\n\t\t\t\t\t\t\t\t\tif (numBytes === sampleProperties[sample].bytesPerSample) {\n\t\t\t\t\t\t\t\t\t\tpixel.push(currentSample);\n\t\t\t\t\t\t\t\t\t\tcurrentSample = numBytes = 0;\n\t\t\t\t\t\t\t\t\t\tsample++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per sample\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Is our pixel complete?\n\t\t\t\t\t\t\t\tif (sample === samplesPerPixel)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstrips[i].push(pixel);\n\n\t\t\t\t\t\t\t\t\tpixel = [];\n\t\t\t\t\t\t\t\t\tsample = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tblockLength--;\n\n\t\t\t\t\t\t\t// Is our block complete?\n\t\t\t\t\t\t\tif (blockLength === 0) {\n\t\t\t\t\t\t\t\tgetHeader = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjIncrement = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// Unknown compression algorithm\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Do not attempt to parse the image data.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n//\t\t\tconsole.log( strips[i] );\n\t\t}\n\n//\t\tconsole.log( strips );\n\n\t\tif (canvas.getContext) {\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\t// Set a default fill style.\n\t\t\tctx.fillStyle = this.makeRGBAFillValue(255, 255, 255, 0);\n\n\t\t\t// If RowsPerStrip is missing, the whole image is in one strip.\n\t\t\tif (fileDirectory.RowsPerStrip) {\n\t\t\t\tvar rowsPerStrip = fileDirectory.RowsPerStrip.values[0];\n\t\t\t} else {\n\t\t\t\tvar rowsPerStrip = imageLength;\n\t\t\t}\n\n\t\t\tvar numStrips = strips.length;\n\n\t\t\tvar imageLengthModRowsPerStrip = imageLength % rowsPerStrip;\n\t\t\tvar rowsInLastStrip = (imageLengthModRowsPerStrip === 0) ? rowsPerStrip : imageLengthModRowsPerStrip;\n\n\t\t\tvar numRowsInStrip = rowsPerStrip;\n\t\t\tvar numRowsInPreviousStrip = 0;\n\n\t\t\tvar photometricInterpretation = fileDirectory.PhotometricInterpretation.values[0];\n\n\t\t\tvar extraSamplesValues = [];\n\t\t\tvar numExtraSamples = 0;\n\n\t\t\tif (fileDirectory.ExtraSamples) {\n\t\t\t\textraSamplesValues = fileDirectory.ExtraSamples.values;\n\t\t\t\tnumExtraSamples = extraSamplesValues.length;\n\t\t\t}\n\n\t\t\tif (fileDirectory.ColorMap) {\n\t\t\t\tvar colorMapValues = fileDirectory.ColorMap.values;\n\t\t\t\tvar colorMapSampleSize = Math.pow(2, sampleProperties[0].bitsPerSample);\n\t\t\t}\n\n\t\t\t// Loop through the strips in the image.\n\t\t\tfor (var i = 0; i < numStrips; i++) {\n\t\t\t\t// The last strip may be short.\n\t\t\t\tif ((i + 1) === numStrips) {\n\t\t\t\t\tnumRowsInStrip = rowsInLastStrip;\n\t\t\t\t}\n\n\t\t\t\tvar numPixels = strips[i].length;\n\t\t\t\tvar yPadding = numRowsInPreviousStrip * i;\n\n\t\t\t\t// Loop through the rows in the strip.\n\t\t\t\tfor (var y = 0, j = 0; y < numRowsInStrip, j < numPixels; y++) {\n\t\t\t\t\t// Loop through the pixels in the row.\n\t\t\t\t\tfor (var x = 0; x < imageWidth; x++, j++) {\n\t\t\t\t\t\tvar pixelSamples = strips[i][j];\n\n\t\t\t\t\t\tvar red = 0;\n\t\t\t\t\t\tvar green = 0;\n\t\t\t\t\t\tvar blue = 0;\n\t\t\t\t\t\tvar opacity = 1.0;\n\n\t\t\t\t\t\tif (numExtraSamples > 0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < numExtraSamples; k++) {\n\t\t\t\t\t\t\t\tif (extraSamplesValues[k] === 1 || extraSamplesValues[k] === 2) {\n\t\t\t\t\t\t\t\t\t// Clamp opacity to the range [0,1].\n\t\t\t\t\t\t\t\t\topacity = pixelSamples[3 + k] / 256;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (photometricInterpretation) {\n\t\t\t\t\t\t\t// Bilevel or Grayscale\n\t\t\t\t\t\t\t// WhiteIsZero\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tif (sampleProperties[0].hasBytesPerSample) {\n\t\t\t\t\t\t\t\t\tvar invertValue = Math.pow(0x10, sampleProperties[0].bytesPerSample * 2);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Invert samples.\n\t\t\t\t\t\t\t\tpixelSamples.forEach(function(sample, index, samples) { samples[index] = invertValue - sample; });\n\n\t\t\t\t\t\t\t// Bilevel or Grayscale\n\t\t\t\t\t\t\t// BlackIsZero\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tred = green = blue = this.clampColorSample(pixelSamples[0], sampleProperties[0].bitsPerSample);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// RGB Full Color\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tred = this.clampColorSample(pixelSamples[0], sampleProperties[0].bitsPerSample);\n\t\t\t\t\t\t\t\tgreen = this.clampColorSample(pixelSamples[1], sampleProperties[1].bitsPerSample);\n\t\t\t\t\t\t\t\tblue = this.clampColorSample(pixelSamples[2], sampleProperties[2].bitsPerSample);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// RGB Color Palette\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tif (colorMapValues === undefined) {\n\t\t\t\t\t\t\t\t\tthrow Error(\"Palette image missing color map\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar colorMapIndex = pixelSamples[0];\n\n\t\t\t\t\t\t\t\tred = this.clampColorSample(colorMapValues[colorMapIndex], 16);\n\t\t\t\t\t\t\t\tgreen = this.clampColorSample(colorMapValues[colorMapSampleSize + colorMapIndex], 16);\n\t\t\t\t\t\t\t\tblue = this.clampColorSample(colorMapValues[(2 * colorMapSampleSize) + colorMapIndex], 16);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// Transparency mask\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: Transparency mask' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// CMYK\n\t\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: CMYK' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// YCbCr\n\t\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: YCbCr' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// CIELab\n\t\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: CIELab' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// Unknown Photometric Interpretation\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow RangeError( 'Unknown Photometric Interpretation:', photometricInterpretation );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillStyle = this.makeRGBAFillValue(red, green, blue, opacity);\n\t\t\t\t\t\tctx.fillRect(x, yPadding + y, 1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnumRowsInPreviousStrip = numRowsInStrip;\n\t\t\t}\n\t\t}\n\n/*\t\tfor (var i = 0, numFileDirectories = this.fileDirectories.length; i < numFileDirectories; i++) {\n\t\t\t// Stuff\n\t\t}*/\n\n\t\treturn this.canvas;\n\t},\n}\n// if (typeof module === \"undefined\") {\n//     this.TIFFParser = TIFFParser;\n// } else {\n//     module.exports = TIFFParser;\n// }\n// if (typeof define === \"function\") {\n//     define(function () { return TIFFParser; });\n// }\nexport default TIFFParser;\n",
    "﻿import CSG from '../ThirdParty/csg/csg.js';\n\n/**\n*@param {Cesium.Geometry}\n*@param {Cesium.Cartesian3}[offset]\n*@return {CSG}\n*/\nCSG.toCSG = function (geometry, offset) {\n    if (!offset) {\n        offset = { x: 0, y: 0, z: 0 };\n    }\n    if (!geometry.attributes.normal) {\n        geometry = Cesium.GeometryPipeline.computeNormal(geometry);\n    }\n    if (geometry.primitiveType !== Cesium.PrimitiveType.TRIANGLES) {\n        throw new Error(\"暂不支持此类几何体\");\n    }\n     \n    var polygons = [], vertices = [];\n    var positions = geometry.attributes.position.values;\n    var normals = geometry.attributes.normal.values;\n    var normalIdx = 0, positionIdx = 0;\n\n    for (var i = 0; i < geometry.indices.length; i += 3) {\n        vertices = [];\n\n        var idx1 = geometry.indices[i];\n        var idx2 = geometry.indices[i + 1];\n        var idx3 = geometry.indices[i + 2];\n\n        positionIdx = idx1 * 3;\n        normalIdx = idx1 * 3;\n\n        vertices.push(new CSG.Vertex(\n            [positions[positionIdx++] + offset.x, positions[positionIdx++] + offset.y, positions[positionIdx++] + offset.z],\n            [normals[normalIdx++], normals[normalIdx++], normals[normalIdx++]]\n        ));\n\n        positionIdx = idx2 * 3;\n        normalIdx = idx2 * 3;\n        vertices.push(new CSG.Vertex(\n            [positions[positionIdx++] + offset.x, positions[positionIdx++] + offset.y, positions[positionIdx++] + offset.z],\n            [normals[normalIdx++], normals[normalIdx++], normals[normalIdx++]]\n        ));\n\n        positionIdx = idx3 * 3;\n        normalIdx = idx3 * 3;\n        vertices.push(new CSG.Vertex(\n            [positions[positionIdx++] + offset.x, positions[positionIdx++] + offset.y, positions[positionIdx++] + offset.z],\n            [normals[normalIdx++], normals[normalIdx++], normals[normalIdx++]]\n        ));\n        polygons.push(new CSG.Polygon(vertices));\n    }\n    return CSG.fromPolygons(polygons);\n}\n/**\n*@param {CSG}csg_model\n*@return {Cesium.Geometry}\n*/\nCSG.fromCSG = function (csg_model) {\n    var i, j, vertices,\n        polygons = csg_model.toPolygons();\n\n    if (!CSG) {\n        throw new Error('CSG 库未加载。请从 https://github.com/evanw/csg.js 获取');\n    }\n\n    var positions = [];\n    var normals = [];\n    var indices = [];\n\n    for (i = 0; i < polygons.length; i++) {\n\n        // Vertices\n        vertices = [];\n        for (j = 0; j < polygons[i].vertices.length; j++) {\n            vertices.push(this.getGeometryVertice(positions, normals, polygons[i].vertices[j].pos, polygons[i].plane.normal));\n        }\n        if (vertices[0] === vertices[vertices.length - 1]) {\n            vertices.pop();\n        }\n\n        for (var j = 2; j < vertices.length; j++) {\n            indices.push(vertices[0], vertices[j - 1], vertices[j]);\n        }\n    }\n\n    positions = new Float32Array(positions);\n    normals = new Float32Array(normals);\n\n    indices = new Int32Array(indices);\n    var attributes = {};\n    attributes.position = new Cesium.GeometryAttribute({\n        componentDatatype: Cesium.ComponentDatatype.FLOAT,\n        componentsPerAttribute: 3,\n        values: positions\n    });\n    attributes.normal = new Cesium.GeometryAttribute({\n        componentDatatype: Cesium.ComponentDatatype.FLOAT,\n        componentsPerAttribute: 3,\n        values: normals\n    });\n\n    var cesGeometry = new Cesium.Geometry({\n        attributes: attributes,\n        indices: indices,\n        primitiveType: Cesium.PrimitiveType.TRIANGLES\n    });\n\n    return cesGeometry;\n}\n/**\n*@param {Array<Number>}positions\n*@param {Array<Number>}normals\n*@param {Cesium.CSG.Vector}vertice_position\n*@param {Cesium.CSG.Vector}plane_normal\n*@return {Number}\n*@private\n*/\nCSG.getGeometryVertice = function (positions, normals, vertice_position, plane_normal) {\n    var i, idx = 0;\n    for (i = 0; i < positions.length; i += 3) {\n        if (positions[i] === vertice_position.x\n            && positions[i + 1] === vertice_position.y\n            && positions[i + 2] === vertice_position.z) {\n            // Vertice already exists\n            return idx;\n        }\n        idx++;\n    };\n\n    positions.push(vertice_position.x, vertice_position.y, vertice_position.z);\n    normals.push(plane_normal.x, plane_normal.y, plane_normal.z);\n    return idx;\n}\n\nexport default CSG;",
    " \n/**\n*@class\n*@memberof Cesium\n*/\nfunction Path() { }\n/**\n*\n*获取文件扩展名（后缀）\n*@param {String}fname 文件名\n*/\nPath.GetExtension = function (fname) {\n    var start = fname.lastIndexOf(\".\");\n    if (start >= 0) {\n        return fname.substring(start, fname.length);\n    }\n    return \"\";\n}\n\n/**\n*\n*获取文件扩展名（后缀）\n*@param {String}fname 文件名\n*/\nPath.GetFileName = function (fname) {\n    var start = fname.lastIndexOf(\"/\");\n    if (start < 0) {\n        return fname;\n    }\n    return fname.substring(start + 1, fname.length);\n}\n/**\n*\n*获取文件夹\n*@param {String}fname 文件名\n*/\nPath.GetDirectoryName = function (fname) {\n    var start = fname.lastIndexOf(\"/\");\n    if (start < 0) {\n        return \"\";\n    }\n    return fname.substring(0, start);\n}\n/**\n*\n*获取文件夹\n*@param {String}fname 文件名\n*/\nPath.Combine = function (dir, fname) {\n    return dir + fname;\n}\nPath.ChangeExtension = function (fname, newExt) {\n    return fname.replace(Path.GetExtension(fname), newExt);\n}\n \nexport default Path;",
    "﻿\r\n/**\r\n*定义属性，并监听属性变化事件,属性值的数据类型可以实现equals接口用于进行更进一步的比较\r\n*@param {Object}owner\r\n*@param {String}name\r\n*@param {Any}defaultVal\r\n*@param {(\r\n        changed: string, owner: object, newVal: *, oldVal: *\r\n        ) => void}onChanged\r\n*@memberof Cesium\r\n*/\r\nfunction defineProperty(owner, name, defaultVal, onChanged) {\r\n    owner[\"_\" + name] = defaultVal;\r\n    var value = {\r\n        get: function () {\r\n            return this[\"_\" + name];\r\n        },\r\n        set: function (val) {\r\n            var changed = val != this[\"_\" + name];\r\n            if (this[\"_\" + name] && this[\"_\" + name].equals && val) {\r\n                changed = this[\"_\" + name].equals(val);\r\n            }\r\n            var oldVal = this[\"_\" + name];\r\n            this[\"_\" + name] = val;\r\n            if (typeof onChanged == 'function' && changed) {\r\n                onChanged(changed, owner, val, oldVal);\r\n            }\r\n        }\r\n    };\r\n    var properties = {};\r\n    properties[name] = value;\r\n    Object.defineProperties(owner, properties)\r\n}\r\n\r\nexport default defineProperty;"
  ]
}